#+STARTUP: content
#+PROPERTY: COOKIE_DATA recursive
#+TITLE: Report
#+SEQ_TODO: TODO(t) WAITING(w) | CANCELLED(c) DONE(d)


#
# Check README for usage info.
#

* Report
** Ansi-tests [0%]
*** reader [0%]
**** set-syntax-from-char.lsp [0%]
  - [ ] (deftest set-syntax-from-char.single-escape.1
  - [ ] (deftest set-syntax-from-char.single-escape.2
  - [ ] (deftest set-syntax-from-char.multiple-escape
  - [ ] (deftest set-syntax-from-char.semicolon
  - [ ] (deftest set-syntax-from-char.left-paren
  - [ ] (deftest set-syntax-from-char.right-paren
  - [ ] (deftest set-syntax-from-char.single-quote
  - [ ] (deftest set-syntax-from-char.double-quote
  - [ ] (deftest set-syntax-from-char.backquote
  - [ ] (deftest set-syntax-from-char.comma
  - [ ] (deftest set-syntax-from-char.sharp.1
  - [ ] (deftest set-syntax-from-char.sharp.2
**** get-macro-character.lsp [0%]
  - [ ] (def-syntax-test get-macro-character.1
  - [ ] (def-syntax-test get-macro-character.2
  - [ ] (def-syntax-test get-macro-character.3
  - [ ] (def-syntax-test get-macro-character.4
  - [ ] (def-syntax-test get-macro-character.5
  - [ ] (def-syntax-test get-macro-character.6
  - [ ] (def-syntax-test get-macro-character.7
  - [ ] (deftest get-macro-character.error.1
  - [ ] (deftest get-macro-character.error.2
**** read-preserving-whitespace.lsp [0%]
  - [ ] (deftest read-preserving-whitespace.1
  - [ ] (deftest read-preserving-whitespace.2
  - [ ] (deftest read-preserving-whitespace.3
  - [ ] (deftest read-preserving-whitespace.4
  - [ ] (deftest read-preserving-whitespace.5
  - [ ] (deftest read-preserving-whitespace.6
  - [ ] (deftest read-preserving-whitespace.7
  - [ ] (deftest read-preserving-whitespace.8
  - [ ] (deftest read-preserving-whitespace.9
  - [ ] (deftest read-preserving-whitespace.10
  - [ ] (deftest read-preserving-whitespace.11
  - [ ] (deftest read-preserving-whitespace.12
  - [ ] (deftest read-preserving-whitespace.13
  - [ ] (deftest read-preserving-whitespace.14
  - [ ] (deftest read-preserving-whitespace.15
  - [ ] (deftest read-preserving-whitespace.16
  - [ ] (deftest read-preserving-whitespace.17
  - [ ] (deftest read-preserving-whitespace.18
  - [ ] (deftest read-preserving-whitespace.19
  - [ ] (deftest read-preserving-whitespace.error.1
  - [ ] (deftest read-preserving-whitespace.error.2
  - [ ] (deftest read-preserving-whitespace.error.3
  - [ ] (deftest read-preserving-whitespace.error.4
  - [ ] (deftest read-preserving-whitespace.error.5
  - [ ] (deftest read-preserving-whitespace.error.6
  - [ ] (deftest read-preserving-whitespace.error.7
  - [ ] (deftest read-preserving-whitespace.error.8
**** readtablep.lsp [0%]
  - [ ] (deftest readtablep.1
  - [ ] (deftest readtablep.2
  - [ ] (deftest readtablep.3
  - [ ] (deftest readtablep.4
  - [ ] (deftest readtablep.error.1
  - [ ] (deftest readtablep.error.2
  - [ ] (deftest readtablep.error.3
**** dispatch-macro-characters.lsp [0%]
  - [ ] (deftest make-dispatch-macro-character.1
  - [ ] (deftest make-dispatch-macro-character.2
  - [ ] (deftest make-dispatch-macro-character.3
  - [ ] (deftest make-dispatch-macro-character.4
  - [ ] (deftest make-dispatch-macro-character.error.1
  - [ ] (deftest make-dispatch-macro-character.error.2
  - [ ] (deftest get-dispatch-macro-character.1
**** with-standard-io-syntax.lsp [0%]
  - [ ] (deftest with-standard-io-syntax.1
  - [ ] (deftest with-standard-io-syntax.2
  - [ ] (deftest with-standard-io-syntax.3
  - [ ] (deftest with-standard-io-syntax.4
  - [ ] (deftest with-standard-io-syntax.5
  - [ ] (deftest with-standard-io-syntax.6
  - [ ] (deftest with-standard-io-syntax.7
  - [ ] (deftest with-standard-io-syntax.8
  - [ ] (deftest with-standard-io-syntax.9
  - [ ] (deftest with-standard-io-syntax.10
  - [ ] (deftest with-standard-io-syntax.11
  - [ ] (deftest with-standard-io-syntax.12
  - [ ] (deftest with-standard-io-syntax.13
  - [ ] (deftest with-standard-io-syntax.14
  - [ ] (deftest with-standard-io-syntax.15
  - [ ] (deftest with-standard-io-syntax.16
  - [ ] (deftest with-standard-io-syntax.17
  - [ ] (deftest with-standard-io-syntax.18
  - [ ] (deftest with-standard-io-syntax.19
  - [ ] (deftest with-standard-io-syntax.20
  - [ ] (deftest with-standard-io-syntax.21
  - [ ] (deftest with-standard-io-syntax.22
  - [ ] (deftest with-standard-io-syntax.23
**** read-delimited-list.lsp [0%]
  - [ ] (deftest read-delimited-list.1
  - [ ] (deftest read-delimited-list.2
  - [ ] (deftest read-delimited-list.3
  - [ ] (deftest read-delimited-list.4
  - [ ] (deftest read-delimited-list.5
  - [ ] (deftest read-delimited-list.6
  - [ ] (deftest read-delimited-list.error.1
  - [ ] (deftest read-delimited-list.error.2
**** syntax-tokens.lsp [0%]
  - [ ] (def-syntax-test syntax.number-token.error.1
  - [ ] (def-syntax-test syntax.number-token.error.2
  - [ ] (def-syntax-test syntax.number-token.3
  - [ ] (def-syntax-test syntax.number-token.4
  - [ ] (def-syntax-test syntax.dot-token.1
  - [ ] (def-syntax-test syntax.dot-token.2
  - [ ] (def-syntax-test syntax.dot-token.3
  - [ ] (def-syntax-test syntax.dot-token.4
  - [ ] (def-syntax-test syntax.dot-token.5
  - [ ] (def-syntax-test syntax.dot-token.6
  - [ ] (def-syntax-test syntax.dot-token.7
  - [ ] (def-syntax-test syntax.dot-token.8
  - [ ] (def-syntax-test syntax.dot-error.1
  - [ ] (def-syntax-test syntax.dot-error.2
  - [ ] (def-syntax-test syntax.dot-error.3
  - [ ] (def-syntax-test syntax.dot-error.4
  - [ ] (def-syntax-test syntax.dot-error.5
  - [ ] (def-syntax-test syntax.dot-error.6
  - [ ] (def-syntax-test syntax.dot-error.7
  - [ ] (def-syntax-test syntax.right-paren-error.1
  - [ ] (def-syntax-test syntax.comma-error.1
  - [ ] (def-syntax-test syntax.comma-error.2
**** reader-test.lsp [0%]
  - [ ] (def-syntax-test read-symbol.1
  - [ ] (def-syntax-test read-symbol.2
  - [ ] (def-syntax-test read-symbol.3
  - [ ] (def-syntax-test read-symbol.4
  - [ ] (def-syntax-test read-symbol.5
  - [ ] (def-syntax-test read-symbol.6
  - [ ] (def-syntax-test read-symbol.7
  - [ ] (def-syntax-test read-symbol.9
  - [ ] (def-syntax-test read-symbol.9a
  - [ ] (def-syntax-test read-symbol.9b
  - [ ] (def-syntax-test read-symbol.10
  - [ ] (def-syntax-test read-symbol.11
  - [ ] (def-syntax-test read-symbol.12
  - [ ] (def-syntax-test read-symbol.13
  - [ ] (def-syntax-test read-symbol.14
  - [ ] (def-syntax-test read-symbol.15
  - [ ] (def-syntax-test read-symbol.16
  - [ ] (def-syntax-test read-symbol.17
  - [ ] (def-syntax-test read-symbol.18
  - [ ] (def-syntax-test read-symbol.19
  - [ ] (def-syntax-test read-symbol.20
  - [ ] (def-syntax-test read-symbol.21
  - [ ] (def-syntax-test read-symbol.22
  - [ ] (def-syntax-test read-symbol.23
  - [ ] (def-syntax-test read-symbol.24
  - [ ] (def-syntax-test read-symbol.25
  - [ ] (deftest read-float.1
**** readtable-case.lsp [0%]
  - [ ] (deftest readtable-case.1
  - [ ] (deftest readtable-case.2
  - [ ] (deftest readtable-case.3
  - [ ] (deftest readtable-case.4
  - [ ] (deftest readtable-case.5
  - [ ] (deftest readtable-case.6
  - [ ] (deftest readtable-case.7
  - [ ] (deftest readtable.case.invert-char
  - [ ] (deftest readtable-case.error.1
  - [ ] (deftest readtable-case.error.2
  - [ ] (deftest readtable-case.error.3
  - [ ] (deftest readtable-case.error.4
  - [ ] (deftest readtable-case.error.5
**** syntax.lsp [0%]
  - [ ] (def-syntax-test syntax.whitespace.1
  - [ ] (def-syntax-test syntax.constituent.1
  - [ ] (def-syntax-test syntax.backspace.invalid
  - [ ] (def-syntax-test syntax.rubout.invalid
  - [ ] (def-syntax-test syntax.digits.alphabetic.1
  - [ ] (def-syntax-test syntax.escaped.1
  - [ ] (def-syntax-test syntax.escaped.2
  - [ ] (def-syntax-test syntax.escaped.3
  - [ ] (def-syntax-test syntax.escaped.4
  - [ ] (def-syntax-test syntax.escaped.5
  - [ ] (def-syntax-test syntax.escaped.6
  - [ ] (def-syntax-test syntax.escape.whitespace.1
  - [ ] (def-syntax-test syntax.escape.whitespace.2
  - [ ] (def-syntax-test syntax.multiple-escape.invalid.backspace
  - [ ] (def-syntax-test syntax.multiple-escape.invalid.rubout
  - [ ] (def-syntax-test syntax.sharp-backslash.1
  - [ ] (def-syntax-test syntax.sharp-backslash.2
  - [ ] (def-syntax-test syntax.sharp-backslash.3
  - [ ] (def-syntax-test syntax.sharp-backslash.4
  - [ ] (def-syntax-test syntax.sharp-backslash.5
  - [ ] (def-syntax-test syntax.sharp-backslash.6
  - [ ] (def-syntax-test syntax.sharp-backslash.7
  - [ ] (def-syntax-test syntax.sharp-quote.1
  - [ ] (def-syntax-test syntax.sharp-quote.2
  - [ ] (def-syntax-test syntax.sharp-quote.3
  - [ ] (def-syntax-test syntax.sharp-quote.error.1
  - [ ] (def-syntax-test syntax.sharp-quote.error.2
  - [ ] (def-syntax-vector-test syntax.sharp-left-paren.1
  - [ ] (def-syntax-vector-test syntax.sharp-left-paren.2
  - [ ] (def-syntax-vector-test syntax.sharp-left-paren.3
  - [ ] (def-syntax-vector-test syntax.sharp-left-paren.4
  - [ ] (def-syntax-vector-test syntax.sharp-left-paren.5
  - [ ] (def-syntax-vector-test syntax.sharp-left-paren.6
  - [ ] (def-syntax-vector-test syntax.sharp-left-paren.7
  - [ ] (def-syntax-vector-test syntax.sharp-left-paren.8
  - [ ] (def-syntax-test syntax.sharp-left-paren.9
  - [ ] (def-syntax-test syntax.sharp-left-paren.error.1
  - [ ] (def-syntax-test syntax.sharp-left-paren.error.2
  - [ ] (def-syntax-bit-vector-test syntax.sharp-asterisk.1
  - [ ] (def-syntax-bit-vector-test syntax.sharp-asterisk.2
  - [ ] (def-syntax-bit-vector-test syntax.sharp-asterisk.3
  - [ ] (def-syntax-bit-vector-test syntax.sharp-asterisk.4
  - [ ] (def-syntax-bit-vector-test syntax.sharp-asterisk.5
  - [ ] (def-syntax-bit-vector-test syntax.sharp-asterisk.6
  - [ ] (def-syntax-bit-vector-test syntax.sharp-asterisk.7
  - [ ] (def-syntax-bit-vector-test syntax.sharp-asterisk.8
  - [ ] (def-syntax-bit-vector-test syntax.sharp-asterisk.9
  - [ ] (def-syntax-test syntax.sharp-asterisk.10
  - [ ] (def-syntax-test syntax.sharp-asterisk.11
  - [ ] (def-syntax-test syntax.sharp-asterisk.12
  - [ ] (def-syntax-test syntax.sharp-asterisk.13
  - [ ] (def-syntax-test syntax.sharp-asterisk.error.1
  - [ ] (def-syntax-test syntax.sharp-asterisk.error.2
  - [ ] (def-syntax-test syntax.sharp-asterisk.error.3
  - [ ] (def-syntax-unintern-test syntax.sharp-colon.3 "a")
  - [ ] (def-syntax-unintern-test syntax.sharp-colon.4 "A")
  - [ ] (def-syntax-unintern-test syntax.sharp-colon.5 "NIL")
  - [ ] (def-syntax-unintern-test syntax.sharp-colon.6 "T")
  - [ ] (def-syntax-unintern-test syntax.sharp-colon.7 ".")
  - [ ] (def-syntax-test syntax.sharp-dot.1
  - [ ] (def-syntax-test syntax.sharp-dot.2
  - [ ] (def-syntax-test syntax.sharp-dot.error.1
  - [ ] (def-syntax-test syntax.sharp-dot.error.2
  - [ ] (def-syntax-test syntax.sharp-dot.error.3
  - [ ] (def-syntax-test syntax.sharp-b.1
  - [ ] (def-syntax-test syntax.sharp-b.2
  - [ ] (def-syntax-test syntax.sharp-b.3
  - [ ] (def-syntax-test syntax.sharp-b.4
  - [ ] (def-syntax-test syntax.sharp-b.5
  - [ ] (def-syntax-test syntax.sharp-b.6
  - [ ] (def-syntax-test syntax.sharp-b.7
  - [ ] (def-syntax-test syntax.sharp-b.8
  - [ ] (def-syntax-test syntax.sharp-b.9
  - [ ] (def-syntax-test syntax.sharp-b.10
  - [ ] (def-syntax-test syntax.sharp-o.1
  - [ ] (def-syntax-test syntax.sharp-o.2
  - [ ] (def-syntax-test syntax.sharp-o.3
  - [ ] (def-syntax-test syntax.sharp-o.4
  - [ ] (def-syntax-test syntax.sharp-o.5
  - [ ] (def-syntax-test syntax.sharp-o.6
  - [ ] (def-syntax-test syntax.sharp-o.7
  - [ ] (def-syntax-test syntax.sharp-o.8
  - [ ] (def-syntax-test syntax.sharp-o.9
  - [ ] (def-syntax-test syntax.sharp-o.10
  - [ ] (def-syntax-test syntax.sharp-x.1
  - [ ] (def-syntax-test syntax.sharp-x.2
  - [ ] (def-syntax-test syntax.sharp-x.3
  - [ ] (def-syntax-test syntax.sharp-x.4
  - [ ] (def-syntax-test syntax.sharp-x.5
  - [ ] (def-syntax-test syntax.sharp-x.6
  - [ ] (def-syntax-test syntax.sharp-x.7
  - [ ] (def-syntax-test syntax.sharp-x.8
  - [ ] (def-syntax-test syntax.sharp-x.9
  - [ ] (def-syntax-test syntax.sharp-x.10
  - [ ] (def-syntax-test syntax.sharp-x.11
  - [ ] (def-syntax-test syntax.sharp-x.12
  - [ ] (def-syntax-test syntax.sharp-x.13
  - [ ] (def-syntax-test syntax.sharp-x.14
  - [ ] (def-syntax-test syntax.sharp-x.15
  - [ ] (def-syntax-test syntax.sharp-r.1
  - [ ] (def-syntax-test syntax.sharp-r.2
  - [ ] (def-syntax-test syntax.sharp-r.3
  - [ ] (def-syntax-test syntax.sharp-r.4
  - [ ] (def-syntax-test syntax.sharp-r.5
  - [ ] (def-syntax-test syntax.sharp-r.6
  - [ ] (def-syntax-test syntax.sharp-t.7
  - [ ] (def-syntax-test syntax.sharp-t.8
  - [ ] (def-syntax-test syntax.sharp-c.1
  - [ ] (def-syntax-test syntax.sharp-c.2
  - [ ] (def-syntax-test syntax.sharp-c.3
  - [ ] (def-syntax-test syntax.sharp-c.4
  - [ ] (def-syntax-test syntax.sharp-c.5
  - [ ] (def-syntax-test syntax.sharp-c.6
  - [ ] (def-syntax-test syntax.sharp-c.7
  - [ ] (def-syntax-array-test syntax.sharp-a.1
  - [ ] (def-syntax-array-test syntax.sharp-a.2
  - [ ] (def-syntax-array-test syntax.sharp-a.3
  - [ ] (def-syntax-array-test syntax.sharp-a.4
  - [ ] (def-syntax-array-test syntax.sharp-a.5
  - [ ] (def-syntax-array-test syntax.sharp-a.6
  - [ ] (def-syntax-array-test syntax.sharp-a.7
  - [ ] (def-syntax-array-test syntax.sharp-a.8
  - [ ] (def-syntax-array-test syntax.sharp-a.9
  - [ ] (def-syntax-array-test syntax.sharp-a.10
  - [ ] (def-syntax-array-test syntax.sharp-a.11
  - [ ] (def-syntax-array-test syntax.sharp-a.12
  - [ ] (def-syntax-array-test syntax.sharp-a.13
  - [ ] (def-syntax-array-test syntax.sharp-a.14
  - [ ] (def-syntax-array-test syntax.sharp-a.15
  - [ ] (def-syntax-array-test syntax.sharp-a.16
  - [ ] (def-syntax-array-test syntax.sharp-a.17
  - [ ] (def-syntax-array-test syntax.sharp-a.18
  - [ ] (def-syntax-array-test syntax.sharp-a.19
  - [ ] (def-syntax-array-test syntax.sharp-a.20
  - [ ] (def-syntax-array-test syntax.sharp-a.21
  - [ ] (def-syntax-array-test syntax.sharp-a.22
  - [ ] (def-syntax-array-test syntax.sharp-a.23
  - [ ] (def-syntax-array-test syntax.sharp-a.24
  - [ ] (def-syntax-array-test syntax.sharp-a.25
  - [ ] (def-syntax-array-test syntax.sharp-a.26
  - [ ] (def-syntax-test syntax.sharp-s.1
  - [ ] (def-syntax-test syntax.sharp-s.2
  - [ ] (def-syntax-test syntax.sharp-s.3
  - [ ] (def-syntax-test syntax.sharp-s.4
  - [ ] (def-syntax-test syntax.sharp-s.5
  - [ ] (def-syntax-test syntax.sharp-s.6
  - [ ] (def-syntax-test syntax.sharp-s.7
  - [ ] (def-syntax-test syntax.sharp-s.8
  - [ ] (def-syntax-test syntax.sharp-s.9
  - [ ] (def-syntax-test syntax.sharp-s.10
  - [ ] (def-syntax-test syntax.sharp-p.1
  - [ ] (def-syntax-test syntax.sharp-p.2
  - [ ] (def-syntax-test syntax.sharp-p.3
  - [ ] (def-syntax-test syntax.sharp-p.4
  - [ ] (def-syntax-test syntax.sharp-p.5
  - [ ] (def-syntax-test syntax.sharp-circle.1
  - [ ] (def-syntax-test syntax.sharp-circle.2
  - [ ] (def-syntax-test syntax.sharp-circle.3
  - [ ] (def-syntax-test syntax.sharp-circle.4
  - [ ] (def-syntax-test syntax.sharp-circle.5
  - [ ] (def-syntax-test syntax.sharp-circle.6
  - [ ] (def-syntax-test syntax.sharp-circle.7
  - [ ] (def-syntax-test syntax.sharp-plus.1
  - [ ] (def-syntax-test syntax.sharp-plus.2
  - [ ] (def-syntax-test syntax.sharp-plus.3
  - [ ] (def-syntax-test syntax.sharp-plus.4
  - [ ] (def-syntax-test syntax.sharp-plus.5
  - [ ] (def-syntax-test syntax.sharp-plus.6
  - [ ] (def-syntax-test syntax.sharp-plus.7
  - [ ] (def-syntax-test syntax.sharp-plus.8
  - [ ] (def-syntax-test syntax.sharp-plus.9
  - [ ] (def-syntax-test syntax.sharp-plus.10
  - [ ] (def-syntax-test syntax.sharp-plus.11
  - [ ] (def-syntax-test syntax.sharp-plus.12
  - [ ] (def-syntax-test syntax.sharp-plus.13
  - [ ] (def-syntax-test syntax.sharp-plus.14
  - [ ] (def-syntax-test syntax.sharp-plus.15
  - [ ] (def-syntax-test syntax.sharp-plus.16
  - [ ] (def-syntax-test syntax.sharp-bar.1
  - [ ] (def-syntax-test syntax.sharp-bar.2
  - [ ] (def-syntax-test syntax.sharp-bar.3
  - [ ] (def-syntax-test syntax.sharp-bar.4
  - [ ] (def-syntax-test syntax.sharp-bar.5
  - [ ] (def-syntax-test syntax.sharp-bar.6
  - [ ] (def-syntax-test syntax.sharp-bar.7
  - [ ] (def-syntax-test syntax.sharp-bar.8
  - [ ] (def-syntax-test syntax.sharp-bar.9
  - [ ] (def-syntax-test syntax.sharp-bar.10
  - [ ] (def-syntax-test syntax.sharp-whitespace.1
  - [ ] (def-syntax-test syntax.sharp-less-than.1
  - [ ] (def-syntax-test syntax.sharp-close-paren.1
  - [ ] (def-syntax-test syntax.single-escape-eof.1
  - [ ] (def-syntax-test syntax.single-escape-eof.2
  - [ ] (def-syntax-test syntax.multiple-escape-eof.1
  - [ ] (def-syntax-test syntax.multiple-escape-eof.2
**** read-from-string.lsp [0%]
  - [ ] (deftest read-from-string.1
  - [ ] (deftest read-from-string.2
  - [ ] (deftest read-from-string.3
  - [ ] (deftest read-from-string.4
  - [ ] (deftest read-from-string.5
  - [ ] (deftest read-from-string.6
  - [ ] (deftest read-from-string.7
  - [ ] (deftest read-from-string.8
  - [ ] (deftest read-from-string.9
  - [ ] (deftest read-from-string.10
  - [ ] (deftest read-from-string.11
  - [ ] (deftest read-from-string.12
  - [ ] (deftest read-from-string.13
  - [ ] (deftest read-from-string.14
  - [ ] (deftest read-from-string.15
  - [ ] (deftest read-from-string.16
  - [ ] (deftest read-from-string.17
  - [ ] (deftest read-from-string.error.1
  - [ ] (deftest read-from-string.error.2
  - [ ] (deftest read-from-string.error.3
  - [ ] (deftest read-from-string.error.4
  - [ ] (deftest read-from-string.error.5
  - [ ] (deftest read-from-string.error.6
  - [ ] (deftest read-from-string.error.7
  - [ ] (deftest read-from-string.error.8
  - [ ] (deftest read-from-string.error.9
  - [ ] (deftest read-from-string.error.10
  - [ ] (deftest read-from-string.error.11
  - [ ] (deftest read-from-string.error.12
  - [ ] (deftest read-from-string.error.13
**** read.lsp [0%]
  - [ ] (deftest read.1
  - [ ] (deftest read.2
  - [ ] (deftest read.3
  - [ ] (deftest read.4
  - [ ] (deftest read.5
  - [ ] (deftest read.6
  - [ ] (deftest read.7
  - [ ] (deftest read.8
  - [ ] (deftest read.9
  - [ ] (deftest read.10
  - [ ] (deftest read.11
  - [ ] (deftest read.12
  - [ ] (deftest read.13
  - [ ] (deftest read.14
  - [ ] (deftest read.15
  - [ ] (deftest read.16
  - [ ] (deftest read.17
  - [ ] (deftest read.18
  - [ ] (deftest read.19
  - [ ] (deftest read.error.1
  - [ ] (deftest read.error.2
  - [ ] (deftest read.error.3
  - [ ] (deftest read.error.4
  - [ ] (deftest read.error.5
  - [ ] (deftest read.error.6
  - [ ] (deftest read.error.7
  - [ ] (deftest read.error.8
**** copy-readtable.lsp [0%]
  - [ ] (deftest copy-readtable.1
  - [ ] (deftest copy-readtable.2
  - [ ] (deftest copy-readtable.3
  - [ ] (deftest copy-readtable.4
  - [ ] (deftest copy-readtable.5
  - [ ] (deftest copy-readtable.6
  - [ ] (deftest copy-readtable.7
  - [ ] (deftest copy-readtable.error.1
**** set-macro-character.lsp [0%]
  - [ ] (def-syntax-test set-macro-character.1
  - [ ] (def-syntax-test set-macro-character.2
  - [ ] (def-syntax-test set-macro-character.3
**** read-suppress.lsp [0%]
  - [ ] (def-read-suppress-test read-suppress.1  "NONEXISTENT-PACKAGE::FOO")
  - [ ] (def-read-suppress-test read-suppress.2  ":")
  - [ ] (def-read-suppress-test read-suppress.3 "::")
  - [ ] (def-read-suppress-test read-suppress.4 ":::")
  - [ ] (def-read-suppress-test read-suppress.5 "123.45")
  - [ ] (def-read-suppress-test read-suppress.7 "..")
  - [ ] (def-read-suppress-test read-suppress.8 "...")
  - [ ] (def-read-suppress-test read-suppress.9 "(1 2)")
  - [ ] (def-read-suppress-test read-suppress.10 "(1 . 2)")
  - [ ] (def-read-suppress-test read-suppress.11 "(1 .. 2 . 3)")
  - [ ] (def-read-suppress-test read-suppress.12 "(...)")
  - [ ] (def-random-suppress-test read-suppress.13)
  - [ ] (def-random-suppress-test read-suppress.14 :prefix "(" :suffix ")")
  - [ ] (def-random-suppress-test read-suppress.15 :prefix "#(" :suffix ")")
  - [ ] (def-random-suppress-test read-suppress.16 :chars "0123456789.eEfFsSdDlL+-")
  - [ ] (def-read-suppress-test read-suppress.17 "#garbage")
  - [ ] (def-read-suppress-test read-suppress.sharp-slash.1 "#\\boguscharname")
  - [ ] (def-read-suppress-test read-suppress.sharp-slash.2 "#\\:x")
  - [ ] (def-read-suppress-test read-suppress.sharp-slash.3 "#\\::::")
  - [ ] (def-read-suppress-test read-suppress.sharp-slash.4 "#\\123")
  - [ ] (def-read-suppress-test read-suppress.sharp-slash.5 "#0\\ ")
  - [ ] (def-read-suppress-test read-suppress.sharp-slash.6 "#100000000\\Space")
  - [ ] (def-read-suppress-test read-suppress.sharp-quote.1 "#'foo")
  - [ ] (def-read-suppress-test read-suppress.sharp-quote.2 "#'1")
  - [ ] (def-read-suppress-test read-suppress.sharp-quote.3 "#'(setf bar)")
  - [ ] (def-read-suppress-test read-suppress.sharp-quote.5 "#'.")
  - [ ] (def-read-suppress-test read-suppress.sharp-quote.6 "#'1.2.3")
  - [ ] (def-read-suppress-test read-suppress.sharp-quote.7 "#0'F")
  - [ ] (def-read-suppress-test read-suppress.sharp-quote.8 "#1000000'F")
  - [ ] (def-read-suppress-test read-suppress.sharp-left-paren.1 "#()")
  - [ ] (def-read-suppress-test read-suppress.sharp-left-paren.2 "#(A)")
  - [ ] (def-read-suppress-test read-suppress.sharp-left-paren.3 "#(A B)")
  - [ ] (def-read-suppress-test read-suppress.sharp-left-paren.4 "#0()")
  - [ ] (def-read-suppress-test read-suppress.sharp-left-paren.5 "#0(A)")
  - [ ] (def-read-suppress-test read-suppress.sharp-left-paren.6 "#1(A)")
  - [ ] (def-read-suppress-test read-suppress.sharp-left-paren.7 "#1(A B C D E)")
  - [ ] (def-read-suppress-test read-suppress.sharp-left-paren.8 "#4(A B C D E)")
  - [ ] (def-read-suppress-test read-suppress.sharp-left-paren.9 "#10(A B C D E)")
  - [ ] (def-read-suppress-test read-suppress.sharp-left-paren.10 "#100()")
  - [ ] (def-read-suppress-test read-suppress.sharp-left-paren.11 "#10000000000000()")
  - [ ] (def-read-suppress-test read-suppress.sharp-left-paren.12 "#10000000000000(A)")
  - [ ] (def-read-suppress-test read-suppress.sharp-asterisk.1 "#*")
  - [ ] (def-read-suppress-test read-suppress.sharp-asterisk.2 "#0*")
  - [ ] (def-read-suppress-test read-suppress.sharp-asterisk.3 "#*1")
  - [ ] (def-read-suppress-test read-suppress.sharp-asterisk.4 "#*0111001")
  - [ ] (def-read-suppress-test read-suppress.sharp-asterisk.5 "#*73298723497132")
  - [ ] (def-read-suppress-test read-suppress.sharp-asterisk.6
  - [ ] (def-read-suppress-test read-suppress.sharp-asterisk.7
  - [ ] (def-read-suppress-test read-suppress.sharp-asterisk.8 "#*:")
  - [ ] (def-read-suppress-test read-suppress.sharp-asterisk.9 "#*::::")
  - [ ] (def-read-suppress-test read-suppress.sharp-asterisk.10 "#1*")
  - [ ] (def-read-suppress-test read-suppress.sharp-asterisk.11 "#10000*")
  - [ ] (def-read-suppress-test read-suppress.sharp-asterisk.12 "#10000000000000*")
  - [ ] (def-read-suppress-test read-suppress.sharp-asterisk.13 "#4*001101001")
  - [ ] (def-read-suppress-test read-suppress.sharp-asterisk.14 "#2*")
  - [ ] (def-read-suppress-test read-suppress.sharp-colon.1 "#:1")
  - [ ] (def-read-suppress-test read-suppress.sharp-colon.2 "#:foo")
  - [ ] (def-read-suppress-test read-suppress.sharp-colon.3 "#0:1/2")
  - [ ] (def-read-suppress-test read-suppress.sharp-colon.4 "#10:-2")
  - [ ] (def-read-suppress-test read-suppress.sharp-colon.5 "#100000000000:x")
  - [ ] (def-read-suppress-test read-suppress.sharp-colon.6 "#3:foo")
  - [ ] (def-read-suppress-test read-suppress.sharp-colon.7 "#::")
  - [ ] (def-read-suppress-test read-suppress.sharp-colon.8 "#:123")
  - [ ] (def-read-suppress-test read-suppress.sharp-colon.9 "#:.")
  - [ ] (def-read-suppress-test read-suppress.sharp-dot.1 "#.1")
  - [ ] (def-read-suppress-test read-suppress.sharp-dot.2 "#.#:foo")
  - [ ] (def-read-suppress-test read-suppress.sharp-dot.3 "#.(throw 'foo nil)")
  - [ ] (def-read-suppress-test read-suppress.sharp-dot.4 "#0.1")
  - [ ] (def-read-suppress-test read-suppress.sharp-dot.5 "#10.1")
  - [ ] (def-read-suppress-test read-suppress.sharp-dot.6 "#1000000000000000.1")
  - [ ] (def-read-suppress-test read-suppress.sharp-b.1 "#b0")
  - [ ] (def-read-suppress-test read-suppress.sharp-b.2 "#B1")
  - [ ] (def-read-suppress-test read-suppress.sharp-b.3 "#BX")
  - [ ] (def-read-suppress-test read-suppress.sharp-b.4 "#b.")
  - [ ] (def-read-suppress-test read-suppress.sharp-b.5 "#0b0")
  - [ ] (def-read-suppress-test read-suppress.sharp-b.6 "#1B1")
  - [ ] (def-read-suppress-test read-suppress.sharp-b.7 "#100b010")
  - [ ] (def-read-suppress-test read-suppress.sharp-b.8 "#1000000000000b010")
  - [ ] (def-read-suppress-test read-suppress.sharp-b.9 "#B101/100")
  - [ ] (def-read-suppress-test read-suppress.sharp-b.10 "#b101/100/11")
  - [ ] (def-read-suppress-test read-suppress.sharp-o.1 "#o0")
  - [ ] (def-read-suppress-test read-suppress.sharp-o.2 "#O1")
  - [ ] (def-read-suppress-test read-suppress.sharp-o.3 "#OX")
  - [ ] (def-read-suppress-test read-suppress.sharp-o.4 "#o.")
  - [ ] (def-read-suppress-test read-suppress.sharp-o.5 "#od6")
  - [ ] (def-read-suppress-test read-suppress.sharp-o.6 "#1O9")
  - [ ] (def-read-suppress-test read-suppress.sharp-o.7 "#100O010")
  - [ ] (def-read-suppress-test read-suppress.sharp-o.8 "#1000000000000o27423")
  - [ ] (def-read-suppress-test read-suppress.sharp-o.9 "#O123/457")
  - [ ] (def-read-suppress-test read-suppress.sharp-o.10 "#o12/17/21")
  - [ ] (def-read-suppress-test read-suppress.sharp-c.1 "#c(0 0)")
  - [ ] (def-read-suppress-test read-suppress.sharp-c.2 "#C(1.0 1.0)")
  - [ ] (def-read-suppress-test read-suppress.sharp-c.3 "#cFOO")
  - [ ] (def-read-suppress-test read-suppress.sharp-c.4 "#c1")
  - [ ] (def-read-suppress-test read-suppress.sharp-c.5 "#C(1 2 3)")
  - [ ] (def-read-suppress-test read-suppress.sharp-c.6 "#c.")
  - [ ] (def-read-suppress-test read-suppress.sharp-c.7 "#c()")
  - [ ] (def-read-suppress-test read-suppress.sharp-c.8 "#c(1)")
  - [ ] (def-read-suppress-test read-suppress.sharp-c.9 "#C(1 . 2)")
  - [ ] (def-read-suppress-test read-suppress.sharp-c.10 "#c(1 2 3)")
  - [ ] (def-read-suppress-test read-suppress.sharp-c.11 "#0c(1 2)")
  - [ ] (def-read-suppress-test read-suppress.sharp-c.12 "#1C(1 2)")
  - [ ] (def-read-suppress-test read-suppress.sharp-c.13 "#10c(1 2)")
  - [ ] (def-read-suppress-test read-suppress.sharp-c.14 "#123456789c(1 2)")
  - [ ] (def-read-suppress-test read-suppress.sharp-c.15 "#c(..)")
  - [ ] (def-read-suppress-test read-suppress.sharp-x.1 "#x0")
  - [ ] (def-read-suppress-test read-suppress.sharp-x.2 "#X1")
  - [ ] (def-read-suppress-test read-suppress.sharp-x.3 "#XX")
  - [ ] (def-read-suppress-test read-suppress.sharp-x.4 "#x.")
  - [ ] (def-read-suppress-test read-suppress.sharp-x.5 "#xy6")
  - [ ] (def-read-suppress-test read-suppress.sharp-x.6 "#1X9")
  - [ ] (def-read-suppress-test read-suppress.sharp-x.7 "#100X010")
  - [ ] (def-read-suppress-test read-suppress.sharp-x.8 "#1000000000000x2af23")
  - [ ] (def-read-suppress-test read-suppress.sharp-x.9 "#X123/DE7")
  - [ ] (def-read-suppress-test read-suppress.sharp-x.10 "#x12/17/21")
  - [ ] (def-read-suppress-test read-suppress.sharp-r.1 "#2r1101")
  - [ ] (def-read-suppress-test read-suppress.sharp-r.2 "#10R9871")
  - [ ] (def-read-suppress-test read-suppress.sharp-r.3 "#36r721zwoqnASLDKJA22")
  - [ ] (def-read-suppress-test read-suppress.sharp-r.4 "#r.")
  - [ ] (def-read-suppress-test read-suppress.sharp-r.5 "#2r379ze")
  - [ ] (def-read-suppress-test read-suppress.sharp-r.6 "#0r0")
  - [ ] (def-read-suppress-test read-suppress.sharp-r.7 "#1r0")
  - [ ] (def-read-suppress-test read-suppress.sharp-r.8 "#100r0A")
  - [ ] (def-read-suppress-test read-suppress.sharp-r.9 "#1000000000000r0A")
  - [ ] (def-read-suppress-test read-suppress.sharp-r.10 "#2r!@#$%^&*_-+={}[]:<>.?/")
  - [ ] (def-read-suppress-test read-suppress.sharp-a.1 "#a()")
  - [ ] (def-read-suppress-test read-suppress.sharp-a.2 "#2a((a)(b c))")
  - [ ] (def-read-suppress-test read-suppress.sharp-a.3 "#a1")
  - [ ] (def-read-suppress-test read-suppress.sharp-a.4 "#1a1")
  - [ ] (def-read-suppress-test read-suppress.sharp-a.5 "#10a(a b c)")
  - [ ] (def-read-suppress-test read-suppress.sharp-a.6 "#100a(a b c)")
  - [ ] (def-read-suppress-test read-suppress.sharp-a.7 "#10000000000000a(a b c)")
  - [ ] (def-read-suppress-test read-suppress.sharp-a.8 "#a..")
  - [ ] (def-read-suppress-test read-suppress.sharp-a.9 "#a(...)")
  - [ ] (def-read-suppress-test read-suppress.sharp-s.1 "#s()")
  - [ ] (def-read-suppress-test read-suppress.sharp-s.2 "#S(invalid-sname)")
  - [ ] (def-read-suppress-test read-suppress.sharp-s.3 "#s(..)")
  - [ ] (def-read-suppress-test read-suppress.sharp-s.4 "#S(foo bar)")
  - [ ] (def-read-suppress-test read-suppress.sharp-s.5 "#0s()")
  - [ ] (def-read-suppress-test read-suppress.sharp-s.6 "#1S()")
  - [ ] (def-read-suppress-test read-suppress.sharp-s.7 "#10s()")
  - [ ] (def-read-suppress-test read-suppress.sharp-s.8 "#271S()")
  - [ ] (def-read-suppress-test read-suppress.sharp-s.9 "#712897459812s()")
  - [ ] (def-read-suppress-test read-suppress.sharp-p.1 "#p\"\"")
  - [ ] (def-read-suppress-test read-suppress.sharp-p.2 "#P123")
  - [ ] (def-read-suppress-test read-suppress.sharp-p.3 "#p1/3")
  - [ ] (def-read-suppress-test read-suppress.sharp-p.4 "#0P\"\"")
  - [ ] (def-read-suppress-test read-suppress.sharp-p.5 "#1p\"\"")
  - [ ] (def-read-suppress-test read-suppress.sharp-p.6 "#100P\"\"")
  - [ ] (def-read-suppress-test read-suppress.sharp-p.7 "#1234567890p\"\"")
  - [ ] (def-read-suppress-test read-suppress.sharp-equal.1 "#=nil")
  - [ ] (def-read-suppress-test read-suppress.sharp-equal.2 "#1=nil")
  - [ ] (def-read-suppress-test read-suppress.sharp-equal.3 "#100=nil")
  - [ ] (def-read-suppress-test read-suppress.sharp-equal.4 "(#1=nil #1=nil)")
  - [ ] (def-read-suppress-test read-suppress.sharp-sharp.1 "##")
  - [ ] (def-read-suppress-test read-suppress.sharp-sharp.2 "#1#")
  - [ ] (def-read-suppress-test read-suppress.sharp-sharp.3 "#100#")
  - [ ] (def-read-suppress-test read-suppress.sharp-sharp.4 "#123456789#")
  - [ ] (def-syntax-test read-suppress.error.1
  - [ ] (def-syntax-test read-suppress.error.2
  - [ ] (def-syntax-test read-suppress.error.3
  - [ ] (def-syntax-test read-suppress.error.4
*** conditions [0%]
**** abort.lsp [20%]
  - [ ] (deftest abort.1
  - [ ] (deftest abort.2
  - [ ] (deftest abort.3
  - [ ] (deftest abort.4
  - [X] (deftest abort.5
**** with-condition-restarts.lsp [0%]
  - [ ] (deftest with-condition-restarts.1
  - [ ] (deftest with-condition-restarts.2
  - [ ] (deftest with-condition-restarts.3
  - [ ] (deftest with-condition-restarts.4
  - [ ] (deftest with-condition-restarts.5
  - [ ] (deftest with-condition-restarts.6
  - [ ] (deftest with-condition-restarts.7
  - [ ] (deftest with-condition-restarts.8
**** use-value.lsp [0%]
  - [ ] (deftest use-value.1
  - [ ] (deftest use-value.2
  - [ ] (deftest use-value.3
  - [ ] (deftest use-value.4
  - [ ] (deftest use-value.5
**** condition.lsp [33%]
  - [X] (deftest condition.1
  - [ ] (deftest condition.2
  - [ ] (deftest condition.3
**** define-condition.lsp [0%]
  - [ ] (define-condition-with-tests condition-1 nil nil)
  - [ ] (define-condition-with-tests condition-2 (condition) nil)
  - [ ] (define-condition-with-tests condition-4 nil
  - [ ] (deftest condition-4-slots.1
  - [ ] (define-condition-with-tests condition-5 nil
  - [ ] (deftest condition-5-slots.1
  - [ ] (deftest condition-5-slots.2
  - [ ] (deftest condition-5-slots.3
  - [ ] (deftest condition-5-slots.4
  - [ ] (define-condition-with-tests condition-6 nil
  - [ ] (deftest condition-6-slots.1
  - [ ] (deftest condition-6-slots.2
  - [ ] (deftest condition-6-slots.3
  - [ ] (deftest condition-6-slots.4
  - [ ] (deftest condition-6-slots.5
  - [ ] (define-condition-with-tests condition-7 nil
  - [ ] (deftest condition-7-slots.1
  - [ ] (deftest condition-7-slots.2
  - [ ] (deftest condition-7-slots.3
  - [ ] (deftest condition-7-slots.4
  - [ ] (define-condition-with-tests condition-8 nil
  - [ ] (deftest condition-8-slots.1
  - [ ] (define-condition-with-tests condition-9 nil
  - [ ] (deftest condition-9-slots.1
  - [ ] (deftest condition-9-slots.2
  - [ ] (deftest condition-9-slots.3
  - [ ] (deftest condition-9-slots.4
  - [ ] (deftest condition-9-slots.5
  - [ ] (deftest condition-9-slots.6
  - [ ] (define-condition-with-tests condition-14 nil
  - [ ] (deftest condition-14-slots.1
  - [ ] (deftest condition-14-slots.2
  - [ ] (deftest condition-14-slots.3
  - [ ] (define-condition-with-tests condition-15 nil
  - [ ] (define-condition-with-tests condition-16 nil
  - [ ] (deftest condition-16-report.1
  - [ ] (define-condition-with-tests condition-17 nil
  - [ ] (deftest condition-17-report.1
  - [ ] (define-condition-with-tests condition-18 nil
  - [ ] (deftest condition-18-report.1
  - [ ] (define-condition-with-tests condition-19 nil
  - [ ] (deftest condition-19-slots.1
  - [ ] (deftest condition-19-slots.2
  - [ ] (deftest condition-19-slots.3
  - [ ] (deftest condition-19-slots.4
  - [ ] (deftest condition-19-slots.5
  - [ ] (define-condition-with-tests condition-20 nil
  - [ ] (deftest condition-20-slots.1
  - [ ] (deftest condition-20-slots.2
  - [ ] (deftest condition-20-slots.3
  - [ ] (deftest condition-20-slots.4
  - [ ] (define-condition-with-tests condition-21 (condition-4) nil)
  - [ ] (deftest condition-21-slots.1
  - [ ] (define-condition-with-tests condition-22 (condition-4)
  - [ ] (deftest condition-22-slots.1
  - [ ] (define-condition-with-tests condition-23 (condition-5) nil)
  - [ ] (deftest condition-23-slots.1
  - [ ] (deftest condition-23-slots.2
  - [ ] (deftest condition-23-slots.3
  - [ ] (deftest condition-23-slots.4
  - [ ] (define-condition-with-tests condition-24 (condition-5)
  - [ ] (deftest condition-24-slots.1
  - [ ] (deftest condition-24-slots.2
  - [ ] (deftest condition-24-slots.3
  - [ ] (deftest condition-24-slots.4
  - [ ] (define-condition-with-tests condition-25a nil
  - [ ] (define-condition-with-tests condition-25b nil
  - [ ] (define-condition-with-tests condition-25 (condition-25a condition-25b)
  - [ ] (deftest condition-25-slots.1
  - [ ] (deftest condition-25-slots.2
  - [ ] (deftest condition-25-slots.3
  - [ ] (deftest condition-25-slots.4
  - [ ] (deftest condition-25-slots.5
  - [ ] (define-condition-with-tests condition-26a nil
  - [ ] (define-condition-with-tests condition-26b (condition-26a) nil)
  - [ ] (define-condition-with-tests condition-26c (condition-26a) nil)
  - [ ] (define-condition-with-tests condition-26 (condition-26b condition-26c) nil)
  - [ ] (deftest condition-26-slots.1
  - [ ] (deftest condition-26-slots.2
  - [ ] (define-condition-with-tests condition-27a nil
  - [ ] (define-condition-with-tests condition-27b nil
  - [ ] (deftest condition-27-slots.1
  - [ ] (deftest condition-27-slots.2
  - [ ] (deftest condition-27-reader-is-generic
  - [ ] (define-condition-with-tests condition-28a nil
  - [ ] (define-condition-with-tests condition-28 (condition-28a)
  - [ ] (deftest condition-28-slots.1
  - [ ] (deftest condition-28-slots.2
  - [ ] (deftest condition-28-slots.3
  - [ ] (deftest condition-28-slots.4
  - [ ] (deftest condition-28-slots.5
  - [ ] (define-condition-with-tests condition-30 nil
**** warn.lsp [100%]
  - [X] (deftest warn.1
  - [X] (deftest warn.2
  - [X] (deftest warn.3
  - [X] (deftest warn.4
  - [X] (deftest warn.5
  - [X] (deftest warn.6
  - [X] (deftest warn.7
  - [X] (deftest warn.8
  - [X] (deftest warn.9
  - [X] (deftest warn.10
  - [X] (deftest warn.11
  - [X] (deftest warn.12
  - [X] (deftest warn.13
  - [X] (deftest warn.14
  - [X] (deftest warn.15
  - [X] (deftest warn.16
  - [X] (deftest warn.17
  - [X] (deftest warn.18
  - [X] (deftest warn.19
**** handler-bind.lsp [0%]
  - [ ] (deftest handler-bind.1
  - [ ] (deftest handler-bind.2
  - [ ] (deftest handler-bind.3
  - [ ] (deftest handler-bind.4
  - [ ] (deftest handler-bind.5
  - [ ] (deftest handler-bind.6
  - [ ] (deftest handler-bind.7
  - [ ] (deftest handler-bind.8
  - [ ] (deftest handler-bind.9
  - [ ] (deftest handler-bind.10
  - [ ] (deftest handler-bind.11
  - [ ] (deftest handler-bind.12
  - [ ] (deftest handler-bind.13
  - [ ] (deftest handler-bind.14
  - [ ] (deftest handler-bind.15
  - [ ] (deftest handler-bind.16
  - [ ] (deftest handler-bind.17
**** restart-case.lsp [16%]
  - [ ] (deftest restart-case.1
  - [ ] (deftest restart-case.2
  - [ ] (deftest restart-case.3
  - [ ] (deftest restart-case.4
  - [ ] (deftest restart-case.5
  - [ ] (deftest restart-case.6
  - [ ] (deftest restart-case.7
  - [ ] (deftest restart-case.8
  - [ ] (deftest restart-case.9
  - [ ] (deftest restart-case.10
  - [ ] (deftest restart-case.11
  - [ ] (deftest restart-case.12
  - [ ] (deftest restart-case.13
  - [ ] (deftest restart-case.14
  - [ ] (deftest restart-case.15
  - [ ] (deftest restart-case.16
  - [ ] (deftest restart-case.17
  - [ ] (deftest restart-case.18
  - [ ] (deftest restart-case.19
  - [ ] (deftest restart-case.20
  - [ ] (deftest restart-case.21
  - [ ] (deftest restart-case.22
  - [X] (deftest restart-case.23
  - [X] (deftest restart-case.24
  - [X] (deftest restart-case.25
  - [X] (deftest restart-case.26
  - [X] (deftest restart-case.27
  - [X] (deftest restart-case.28
  - [ ] (deftest restart-case.29
  - [ ] (deftest restart-case.30
  - [ ] (deftest restart-case.31
  - [ ] (deftest restart-case.32
  - [ ] (deftest restart-case.33
  - [ ] (deftest restart-case.34
  - [ ] (deftest restart-case.35
  - [ ] (deftest restart-case.36
  - [ ] (deftest restart-case.37
**** assert.lsp [83%]
  - [X] (deftest assert.1
  - [X] (deftest assert.2
  - [X] (deftest assert.3
  - [X] (deftest assert.3a
  - [X] (deftest assert.4
  - [X] (deftest assert.5
  - [X] (deftest assert.6
  - [X] (deftest assert.7
  - [X] (deftest assert.8
  - [X] (deftest assert.9
  - [ ] (deftest assert.10
  - [ ] (deftest assert.11
**** invoke-debugger.lsp [83%]
  - [ ] (deftest invoke-debugger.1
  - [X] (deftest invoke-debugger.error.1
  - [X] (deftest invoke-debugger.error.2
  - [X] (deftest invoke-debugger.error.3
  - [X] (deftest invoke-debugger.error.4
  - [X] (deftest invoke-debugger.error.5
**** muffle-warning.lsp [20%]
  - [ ] (deftest muffle-warning.1
  - [ ] (deftest muffle-warning.2
  - [ ] (deftest muffle-warning.3
  - [ ] (deftest muffle-warning.4
  - [X] (deftest muffle-warning.5
**** with-simple-restart.lsp [0%]
  - [ ] (deftest with-simple-restart.1
  - [ ] (deftest with-simple-restart.2
  - [ ] (deftest with-simple-restart.3
  - [ ] (deftest with-simple-restart.4
  - [ ] (deftest with-simple-restart.5
  - [ ] (deftest with-simple-restart.6
  - [ ] (deftest with-simple-restart.7
  - [ ] (deftest with-simple-restart.8
**** cell-error-name.lsp [25%]
  - [ ] (deftest cell-error-name.1
  - [ ] (deftest cell-error-name.2
  - [ ] (deftest cell-error-name.3
  - [ ] (deftest cell-error-name.4
  - [ ] (deftest cell-error-name.5
  - [ ] (deftest cell-error-name.6
  - [X] (deftest cell-error-name.error.1
  - [X] (deftest cell-error-name.error.2
**** error.lsp [0%]
  - [ ] (deftest error.1
  - [ ] (deftest error.2
  - [ ] (deftest error.3
  - [ ] (deftest error.4
  - [ ] (deftest error.5
  - [ ] (deftest error.6
  - [ ] (deftest error.7
  - [ ] (deftest error.8
  - [ ] (deftest error.9
  - [ ] (deftest error.10
  - [ ] (deftest error.11
  - [ ] (deftest error.12
**** restart-bind.lsp [11%]
  - [ ] (deftest restart-bind.1
  - [ ] (deftest restart-bind.2
  - [ ] (deftest restart-bind.3
  - [ ] (deftest restart-bind.4
  - [ ] (deftest restart-bind.5
  - [ ] (deftest restart-bind.6
  - [ ] (deftest restart-bind.7
  - [ ] (deftest restart-bind.8
  - [ ] (deftest restart-bind.9
  - [ ] (deftest restart-bind.10
  - [ ] (deftest restart-bind.11
  - [ ] (deftest restart-bind.12
  - [ ] (deftest restart-bind.13
  - [ ] (deftest restart-bind.14
  - [ ] (deftest restart-bind.15
  - [ ] (deftest restart-bind.16
  - [ ] (deftest restart-bind.17
  - [ ] (deftest restart-bind.18
  - [ ] (deftest restart-bind.19
  - [ ] (deftest restart-bind.20
  - [ ] (deftest restart-bind.21
  - [ ] (deftest restart-bind.22
  - [X] (deftest restart-bind.error.1
  - [X] (deftest restart-bind.error.2
  - [X] (deftest restart-bind.error.3
  - [ ] (deftest restart-bind.23
  - [ ] (deftest restart-bind.24
**** handler-case.lsp [0%]
  - [ ] (deftest handler-case.1
  - [ ] (deftest handler-case.2
  - [ ] (deftest handler-case.3
  - [ ] (deftest handler-case.4
  - [ ] (deftest handler-case.5
  - [ ] (deftest handler-case.6
  - [ ] (deftest handler-case.7
  - [ ] (deftest handler-case.9
  - [ ] (deftest handler-case.11
  - [ ] (deftest handler-case.12
  - [ ] (deftest handler-case.13
  - [ ] (deftest handler-case.14
  - [ ] (deftest handler-case.15
  - [ ] (deftest handler-case.16
  - [ ] (deftest handler-case.17
  - [ ] (deftest handler-case.18
  - [ ] (deftest handler-case.19
  - [ ] (deftest handler-case.20
  - [ ] (deftest handler-case.21
  - [ ] (deftest handler-case.22
  - [ ] (deftest handler-case.23
  - [ ] (deftest handler-case.24
  - [ ] (deftest handler-case.25
  - [ ] (deftest handler-case.26
  - [ ] (deftest handler-case.27
  - [ ] (deftest handler-case.28
  - [ ] (deftest handler-case.29
**** check-type.lsp [44%]
  - [ ] (deftest check-type.1
  - [ ] (deftest check-type.2
  - [X] (deftest check-type.3
  - [ ] (deftest check-type.4
  - [X] (deftest check-type.5
  - [X] (deftest check-type.6
  - [X] (deftest check-type.7
  - [ ] (deftest check-type.8
  - [ ] (deftest check-type.9
**** make-condition.lsp [20%]
  - [ ] (deftest make-condition.1
  - [ ] (deftest make-condition.2
  - [ ] (deftest make-condition.3
  - [ ] (deftest make-condition.4
  - [X] (deftest make-condition.error.1
**** compute-restarts.lsp [20%]
  - [ ] (deftest compute-restarts.1
  - [ ] (deftest compute-restarts.2
  - [ ] (deftest compute-restarts.3
  - [ ] (deftest compute-restarts.4
  - [ ] (deftest compute-restarts.5
  - [ ] (deftest compute-restarts.6
  - [X] (deftest compute-restarts.7
  - [X] (deftest compute-restarts.8
  - [ ] (deftest compute-restarts.9
  - [ ] (deftest compute-restarts.10
**** store-value.lsp [0%]
  - [ ] (deftest store-value.1
  - [ ] (deftest store-value.2
  - [ ] (deftest store-value.3
  - [ ] (deftest store-value.4
  - [ ] (deftest store-value.5
**** continue.lsp [0%]
  - [ ] (deftest continue.1
  - [ ] (deftest continue.2
  - [ ] (deftest continue.3
  - [ ] (deftest continue.4
  - [ ] (deftest continue.5
**** ignore-errors.lsp [0%]
  - [ ] (deftest ignore-errors.1
  - [ ] (deftest ignore-errors.2
  - [ ] (deftest ignore-errors.3
  - [ ] (deftest ignore-errors.4
  - [ ] (deftest ignore-errors.5
  - [ ] (deftest ignore-errors.6
**** cerror.lsp [30%]
  - [ ] (deftest cerror.1
  - [ ] (deftest cerror.2
  - [ ] (deftest cerror.2a
  - [ ] (deftest cerror.3
  - [ ] (deftest cerror.4
  - [ ] (deftest cerror.4a
  - [ ] (deftest cerror.5
  - [X] (deftest cerror.6
  - [X] (deftest cerror.error.1
  - [X] (deftest cerror.error.2
*** types-and-classes [0%]
**** types-and-class-2.lsp [0%]
  - [ ] (deftest type-or-not-type-is-everything
  - [ ] (deftest user-class-disjointness
  - [ ] (deftest user-class-disjointness-2
  - [ ] (deftest user-struct-disjointness
  - [ ] (deftest user-struct-disjointness-2
  - [ ] (deftest tac-3.1
  - [ ] (deftest tac-3.2
  - [ ] (deftest tac-3.3
  - [ ] (deftest tac-3.4
  - [ ] (deftest tac-3.5
  - [ ] (deftest tac-3.6
  - [ ] (deftest tac-3.7
  - [ ] (deftest tac-3.8
  - [ ] (deftest tac-3.9
  - [ ] (deftest tac-3.10
  - [ ] (deftest tac-3.11
  - [ ] (deftest tac-3.12
  - [ ] (deftest tac-3.13
  - [ ] (deftest tac-3.14
  - [ ] (deftest tac-3.15
  - [ ] (deftest tac-3.16
  - [ ] (deftest tac-3.17
  - [ ] (deftest universe-elements-in-at-most-one-disjoint-type
  - [ ] (deftest integer-and-ratio-are-disjoint
  - [ ] (deftest bignum-and-ratio-are-disjoint
  - [ ] (deftest bignum-and-fixnum-are-disjoint
  - [ ] (deftest fixnum-and-ratio-are-disjoint
  - [ ] (deftest byte8-and-ratio-are-disjoint
  - [ ] (deftest bit-and-ratio-are-disjoint
  - [ ] (deftest integer-and-float-are-disjoint
  - [ ] (deftest ratio-and-float-are-disjoint
  - [ ] (deftest complex-and-float-are-disjoint
  - [ ] (deftest integer-subranges-are-disjoint
  - [ ] (deftest keyword-and-null-are-disjoint
  - [ ] (deftest keyword-and-boolean-are-disjoint
**** subtypep-real.lsp [0%]
  - [ ] (deftest subtypep.real.1
  - [ ] (deftest subtypep.real.2
  - [ ] (deftest subtypep.real.3
  - [ ] (deftest subtypep.real.4
  - [ ] (deftest subtypep.real.5
  - [ ] (deftest subtypep.real.6
  - [ ] (deftest subtypep.real.7
  - [ ] (deftest subtypep.real.8
  - [ ] (deftest subtypep.real.9
  - [ ] (deftest subtypep.real.10
  - [ ] (deftest subtypep.real.11
  - [ ] (deftest subtypep.real.12
  - [ ] (deftest subtypep.real.13
  - [ ] (deftest subtypep.real.14
  - [ ] (deftest subtypep.real.15
  - [ ] (deftest subtypep.real.16
  - [ ] (deftest subtypep.real.17
  - [ ] (deftest subtypep.real.18
  - [ ] (deftest subtypep.real.19
  - [ ] (deftest subtypep.real.20
  - [ ] (deftest subtypep.real.21
  - [ ] (deftest subtypep.real.22
  - [ ] (deftest subtypep.real.23
  - [ ] (deftest subtypep.real.24
  - [ ] (deftest subtypep.real.25
**** subtypep-member.lsp [0%]
  - [ ] (deftest subtypep.member.1
  - [ ] (deftest subtypep.member.2
  - [ ] (deftest subtypep.member.3
  - [ ] (deftest subtypep.member.4
  - [ ] (deftest subtypep.member.5
  - [ ] (deftest subtypep.member.6
  - [ ] (deftest subtypep.member.7
  - [ ] (deftest subtypep.member.8
  - [ ] (deftest subtypep.member.9
  - [ ] (deftest subtypep.member.10
  - [ ] (deftest subtypep.member.11
  - [ ] (deftest subtypep.member.12
  - [ ] (deftest subtypep.member.13
  - [ ] (deftest subtypep.member.14
  - [ ] (deftest subtypep.member.15
  - [ ] (deftest subtypep.member.16
  - [ ] (deftest subtypep.member.17
  - [ ] (deftest subtypep.member.18
  - [ ] (deftest subtypep.member.19
  - [ ] (deftest subtypep.member.20
  - [ ] (deftest subtypep.member.21
  - [ ] (deftest subtypep.member.22
  - [ ] (deftest subtypep.member.23
  - [ ] (deftest subtypep.member.24
  - [ ] (deftest subtypep.member.25
  - [ ] (deftest subtypep.member.26
  - [ ] (deftest subtypep.member.27
  - [ ] (deftest subtypep.member.28
  - [ ] (deftest subtypep.member.29
  - [ ] (deftest subtypep.member.30
  - [ ] (deftest subtypep.member.31
  - [ ] (deftest subtypep.member.32
  - [ ] (deftest subtypep.member.33
  - [ ] (deftest subtypep.member.34
  - [ ] (deftest subtypep.member.35
  - [ ] (deftest subtypep.member.36
  - [ ] (deftest subtypep.member.37
  - [ ] (deftest subtypep.member.38
  - [ ] (deftest subtypep.member.39
  - [ ] (deftest subtypep.member.40
  - [ ] (deftest subtypep.member.41
  - [ ] (deftest subtypep.member.42
  - [ ] (deftest subtypep.member.43
  - [ ] (deftest subtypep.member.44
**** type-of.lsp [0%]
  - [ ] (deftest type-of.1
  - [ ] (deftest type-of.1-relaxed
  - [ ] (deftest type-of.2
  - [ ] (deftest type-of.3
  - [ ] (deftest type-of.4
  - [ ] (deftest type-of.5
  - [ ] (deftest type-of.6
  - [ ] (deftest type-of.7
  - [ ] (deftest type-of.8
  - [ ] (deftest type-of.9
  - [ ] (deftest type-of.10
  - [ ] (deftest type-of.11
  - [ ] (deftest type-of.error.1
  - [ ] (deftest type-of.error.2
**** subtypep-function.lsp [0%]
  - [ ] (deftest subtypep-function.1
  - [ ] (deftest subtypep-function.2
  - [ ] (deftest subtypep-function.3
  - [ ] (deftest subtypep-function.4
**** subtypep-array.lsp [0%]
  - [ ] (deftest subtypep.array.1
  - [ ] (deftest subtypep.array.2
  - [ ] (deftest subtypep.array.3
  - [ ] (deftest subtypep.array.4
  - [ ] (deftest subtypep.array.5
  - [ ] (deftest subtypep.array.6
  - [ ] (deftest subtypep.array.7
  - [ ] (deftest subtypep.array.8
  - [ ] (deftest subtypep.array.9
  - [ ] (deftest subtypep.array.10
  - [ ] (deftest subtypep.array.11
  - [ ] (deftest subtypep.array.12
  - [ ] (deftest subtypep.array.13
  - [ ] (deftest string-is-not-vector-of-character.1
  - [ ] (deftest vector-of-character-is-string.2
  - [ ] (deftest string-is-not-vector-of-character.3
  - [ ] (deftest vector-of-character-is-string.4
  - [ ] (deftest string-is-not-vector-of-character.5
  - [ ] (deftest vector-of-character-is-string.6
  - [ ] (deftest base-string-is-vector-of-base-char.1
  - [ ] (deftest base-string-is-vector-of-base-char.2
  - [ ] (deftest base-string-is-vector-of-base-char.3
  - [ ] (deftest base-string-is-vector-of-base-char.4
  - [ ] (deftest base-string-is-vector-of-base-char.5
  - [ ] (deftest base-string-is-vector-of-base-char.6
  - [ ] (deftest simple-base-string-is-simple-1d-array-of-base-char.1
  - [ ] (deftest simple-base-string-is-simple-1d-array-of-base-char.2
  - [ ] (deftest simple-base-string-is-simple-1d-array-of-base-char.3
  - [ ] (deftest simple-base-string-is-simple-1d-array-of-base-char.4
  - [ ] (deftest simple-base-string-is-simple-1d-array-of-base-char.5
  - [ ] (deftest simple-base-string-is-simple-1d-array-of-base-char.6
  - [ ] (deftest simple-string-is-not-simple-1d-array-of-character.1
  - [ ] (deftest simple-1d-array-of-character-is-simple-string.2
  - [ ] (deftest simple-string-is-not-simple-1d-array-of-character.3
  - [ ] (deftest simple-1d-array-of-character-is-simple-string.4
  - [ ] (deftest simple-string-is-not-simple-1d-array-of-character.5
  - [ ] (deftest simple-1d-array-of-character-is-simple-string.6
  - [ ] (deftest vector-is-1d-array.1
  - [ ] (deftest vector-is-1d-array.2
  - [ ] (deftest vector-is-1d-array.3
  - [ ] (deftest vector-is-1d-array.4
  - [ ] (deftest vector-is-1d-array.5
  - [ ] (deftest vector-is-1d-array.6
  - [ ] (deftest simple-vector-is-simple-1d-array.1
  - [ ] (deftest simple-vector-is-simple-1d-array.2
  - [ ] (deftest simple-vector-is-simple-1d-array.3
  - [ ] (deftest simple-vector-is-simple-1d-array.4
  - [ ] (deftest simple-vector-is-simple-1d-array.5
  - [ ] (deftest simple-vector-is-simple-1d-array.6
**** subtypep-cons.lsp [0%]
  - [ ] (deftest subtypep.cons.1
  - [ ] (deftest subtypep.cons.2
  - [ ] (deftest subtypep.cons.3
  - [ ] (deftest subtypep.cons.4
  - [ ] (deftest subtypep.cons.5
  - [ ] (deftest subtypep.cons.6
  - [ ] (deftest subtypep.cons.7
  - [ ] (deftest subtypep.cons.8
  - [ ] (deftest subtypep.cons.9
  - [ ] (deftest subtypep.cons.10
  - [ ] (deftest subtypep.cons.11
  - [ ] (deftest subtypep.cons.12
  - [ ] (deftest subtypep.cons.13
  - [ ] (deftest subtypep.cons.14
  - [ ] (deftest subtypep.cons.15
  - [ ] (deftest subtypep.cons.16
  - [ ] (deftest subtypep.cons.17
  - [ ] (deftest subtypep.cons.18
  - [ ] (deftest subtypep.cons.19
  - [ ] (deftest subtypep.cons.20
  - [ ] (deftest subtypep.cons.21
  - [ ] (deftest subtypep.cons.22
  - [ ] (deftest subtype.cons.23
  - [ ] (deftest subtype.cons.24
  - [ ] (deftest subtype.cons.25
  - [ ] (deftest subtype.cons.26
  - [ ] (deftest subtype.cons.27
  - [ ] (deftest subtype.cons.28
  - [ ] (deftest subtypep.cons.29
  - [ ] (deftest subtypep.cons.30
  - [ ] (deftest subtypep.cons.31
  - [ ] (deftest subtypep.cons.32
  - [ ] (deftest subtypep.cons.33
  - [ ] (deftest subtypep.cons.34
  - [ ] (deftest subtypep.cons.35
  - [ ] (deftest subtypep.cons.36
  - [ ] (deftest subtypep.cons.37
  - [ ] (deftest subtypep.cons.38
  - [ ] (deftest subtypep.cons.39
  - [ ] (deftest subtypep.cons.40
  - [ ] (deftest subtypep.cons.41
  - [ ] (deftest subtypep.cons.42
  - [ ] (deftest subtypep.cons.43
**** subtypep-integer.lsp [0%]
  - [ ] (deftest subtypep.fixnum-or-bignum
  - [ ] (deftest subtypep.fixnum.integer
  - [ ] (deftest subtypep.bignum.integer
  - [ ] (deftest subtypep.integer.1
  - [ ] (deftest subtypep.integer.2
  - [ ] (deftest subtypep.integer.3
  - [ ] (deftest subtypep.integer.3a
  - [ ] (deftest subtypep.integer.3b
  - [ ] (deftest subtypep.integer.3c
  - [ ] (deftest subtypep.integer.4
  - [ ] (deftest subtypep.integer.4a
  - [ ] (deftest subtypep.integer.4b
  - [ ] (deftest subtypep.integer.4c
  - [ ] (deftest subtypep.integer.5
  - [ ] (deftest subtypep.integer.5a
  - [ ] (deftest subtypep.integer.5b
  - [ ] (deftest subtypep.integer.5c
  - [ ] (deftest subtypep.integer.6
  - [ ] (deftest subtypep.integer.6a
  - [ ] (deftest subtypep.integer.6b
  - [ ] (deftest subtypep.integer.6c
  - [ ] (deftest subtypep.integer.7
  - [ ] (deftest subtypep.integer.7a
  - [ ] (deftest subtypep.integer.7b
  - [ ] (deftest subtypep.integer.7c
  - [ ] (deftest subtypep.integer.8
  - [ ] (deftest subtypep.integer.8a
  - [ ] (deftest subtypep.integer.8b
  - [ ] (deftest subtypep.integer.8c
  - [ ] (deftest subtypep.integer.9
  - [ ] (deftest subtypep.integer.9a
  - [ ] (deftest subtypep.integer.9b
  - [ ] (deftest subtypep.integer.9c
  - [ ] (deftest subtypep.integer.10
  - [ ] (deftest subtypep.integer.10a
  - [ ] (deftest subtypep.integer.10b
  - [ ] (deftest subtypep.integer.10c
  - [ ] (deftest subtypep.integer.11
  - [ ] (deftest subtypep.integer.12
  - [ ] (deftest subtypep.integer.13
  - [ ] (deftest subtypep.integer.14
  - [ ] (deftest subtypep.integer.15
  - [ ] (deftest subtypep.integer.16
  - [ ] (deftest subtypep.integer.17
  - [ ] (deftest subtypep.integer.18
  - [ ] (deftest subtypep.integer.19
  - [ ] (deftest subtypep.integer.20
  - [ ] (deftest subtypep.integer.21
  - [ ] (deftest subtypep.integer.22
  - [ ] (deftest subtypep.integer.23
  - [ ] (deftest subtypep.integer.24
  - [ ] (deftest subtypep.integer.25
  - [ ] (deftest subtypep.integer.26
  - [ ] (deftest subtypep.integer.27
  - [ ] (deftest subtypep.integer.28
  - [ ] (deftest subtypep.integer.29
  - [ ] (deftest subtypep.integer.30
  - [ ] (deftest subtypep.integer.real.1
  - [ ] (deftest subtypep.integer.real.2
  - [ ] (deftest subtypep.integer.real.3
  - [ ] (deftest subtypep.integer.real.4
  - [ ] (deftest subtypep.integer.real.5
  - [ ] (deftest subtypep.integer.real.6
  - [ ] (deftest subtypep.integer.real.7
  - [ ] (deftest subtypep.integer.real.8
  - [ ] (deftest subtypep.integer.real.9
  - [ ] (deftest subtypep.integer.real.10
  - [ ] (deftest subtypep.integer.real.11
  - [ ] (deftest subtypep.integer.rational.1
  - [ ] (deftest subtypep.integer.rational.2
  - [ ] (deftest subtypep.integer.rational.3
  - [ ] (deftest subtypep.integer.rational.4
  - [ ] (deftest subtypep.integer.rational.5
  - [ ] (deftest subtypep.integer.rational.6
  - [ ] (deftest subtypep.integer.rational.7
  - [ ] (deftest subtypep.integer.rational.8
  - [ ] (deftest subtypep.integer.rational.9
  - [ ] (deftest subtypep.integer.rational.10
**** types-and-class.lsp [0%]
  - [ ] (deftest boolean-type.1
  - [ ] (deftest boolean-type.2
  - [ ] (deftest boolean-type.3
  - [ ] (deftest types.3
  - [ ] (deftest types.4
  - [ ] (deftest types.6
  - [ ] (deftest types.7b
  - [ ] (deftest types.7c
  - [ ] (deftest types.8
  - [ ] (deftest types.9
  - [ ] (deftest types.9a
  - [ ] (deftest all-classes-are-type-equivalent-to-their-names
  - [ ] (deftest all-classes-are-type-equivalent-to-their-names.2
  - [ ] (deftest all-standard-classes-are-subtypes-of-standard-object
  - [ ] (deftest all-standard-classes-are-subtypes-of-standard-object.2
  - [ ] (deftest all-structure-classes-are-subtypes-of-structure-object
  - [ ] (deftest all-structure-classes-are-subtypes-of-structure-object.2
  - [ ] (deftest all-exported-cl-class-names-are-valid
  - [ ] (deftest all-standard-generic-functions-are-instances-of-that-class
  - [ ] (deftest structure-object-is-in-structure-class
  - [ ] (deftest standard-object-is-in-standard-class
  - [ ] (deftest type-and-class-fns
  - [ ] (deftest type-and-class-macros
  - [ ] (deftest type-error-datum.1
  - [ ] (deftest type-error-expected-type.1
  - [ ] (deftest type-error-datum.error.1
  - [ ] (deftest type-error-datum.error.2
  - [ ] (deftest type-error-expected-type.error.1
  - [ ] (deftest type-error-expected-type.error.2
**** subtypep.lsp [0%]
  - [ ] (deftest subtypep.order.1
  - [ ] (deftest simple-base-string-is-sequence
  - [ ] (deftest subtype.env.1
  - [ ] (deftest subtype.env.2
  - [ ] (deftest subtype.env.3
  - [ ] (deftest subtype.env.4
  - [ ] (deftest subtype.env.5
  - [ ] (deftest subtypep.error.1
  - [ ] (deftest subtypep.error.2
  - [ ] (deftest subtypep.error.3
  - [ ] (deftest keyword-is-subtype-of-atom
  - [ ] (deftest ratio-is-subtype-of-atom
  - [ ] (deftest extended-char-is-subtype-of-atom
  - [ ] (deftest string-is-not-simple-vector
  - [ ] (deftest base-string-is-not-simple-vector
  - [ ] (deftest simple-string-is-not-simple-vector
  - [ ] (deftest simple-base-string-is-not-simple-vector
  - [ ] (deftest bit-vector-is-not-simple-vector
  - [ ] (deftest simple-bit-vector-is-not-simple-vector
  - [ ] (deftest subtypep.extended-char.1
  - [ ] (deftest subtypep.extended-char.2
  - [ ] (deftest subtypep.extended-char.3
  - [ ] (deftest subtypep.and/or.1
  - [ ] (deftest subtypep.and/or.2
  - [ ] (deftest subtypep.and.1
  - [ ] (deftest subtypep.or.1
  - [ ] (deftest subtypep.and.2
  - [ ] (deftest subtypep.or.2
  - [ ] (deftest subtypep.and.3
  - [ ] (deftest subtypep.or.3
  - [ ] (deftest subtypep.and.4
  - [ ] (deftest subtypep.or.4
  - [ ] (deftest subtypep.nil.1
  - [ ] (deftest subtypep.nil.2
**** subtypep-rational.lsp [0%]
  - [ ] (deftest subtypep.rational.1
  - [ ] (deftest subtypep.rational.2
  - [ ] (deftest subtypep.rational.3
  - [ ] (deftest subtypep.rational.4
  - [ ] (deftest subtypep.rational.5
  - [ ] (deftest subtypep.rational.6
  - [ ] (deftest subtypep.rational.7
  - [ ] (deftest subtypep.rational.8
  - [ ] (deftest subtypep.rational.9
  - [ ] (deftest subtypep.rational.10
  - [ ] (deftest subtypep.rational.11
  - [ ] (deftest subtypep.rational.12
  - [ ] (deftest subtypep.rational.13
  - [ ] (deftest subtypep.rational.14
  - [ ] (deftest subtypep.rational.15
  - [ ] (deftest subtypep.rational.16
  - [ ] (deftest subtypep.rational.17
  - [ ] (deftest subtypep.rational.18
**** subtypep-float.lsp [0%]
  - [ ] (deftest subtypep.float.1
  - [ ] (deftest subtypep.float.2
  - [ ] (deftest subtypep.float.3
  - [ ] (deftest subtypep.float.4
  - [ ] (deftest subtypep.float.5
  - [ ] (deftest subtypep.float.6
  - [ ] (deftest subtypep.float.7
  - [ ] (deftest subtypep.float.8
  - [ ] (deftest subtypep.float.9
  - [ ] (deftest subtypep.float.10
  - [ ] (deftest subtypep.float.11
  - [ ] (deftest subtypep.float.12
  - [ ] (deftest subtypep.float.13
  - [ ] (deftest subtypep.float.14
  - [ ] (deftest subtypep.float.15
  - [ ] (deftest subtypep.float.16
  - [ ] (deftest subtypep.float.17
  - [ ] (deftest subtypep.float.18
  - [ ] (deftest subtypep.float.19
  - [ ] (deftest subtypep.float.20
  - [ ] (deftest subtypep.float.21
  - [ ] (deftest subtypep.float.22
  - [ ] (deftest subtypep.float.23
  - [ ] (deftest subtypep.float.24
  - [ ] (deftest subtypep.float.25
  - [ ] (deftest subtypep.float.26
  - [ ] (deftest subtypep.float.27
  - [ ] (deftest subtypep.short-float.zero.1
  - [ ] (deftest subtypep.short-float.zero.3
  - [ ] (deftest subtypep.short-float.zero.4
  - [ ] (deftest subtypep.short-float.zero.5
  - [ ] (deftest subtypep.short-float.zero.6
  - [ ] (deftest subtypep.short-float.zero.7
  - [ ] (deftest subtypep.short-float.zero.8
  - [ ] (deftest subtypep.short-float.zero.9
  - [ ] (deftest subtypep.short-float.zero.10
  - [ ] (deftest subtypep.float.zero.3
  - [ ] (deftest subtypep.float.zero.4
  - [ ] (deftest subtypep.float.zero.5
  - [ ] (deftest subtypep.float.zero.6
  - [ ] (deftest subtypep.float.zero.7
  - [ ] (deftest subtypep.float.zero.8
  - [ ] (deftest subtypep.float.zero.9
  - [ ] (deftest subtypep.float.zero.10
  - [ ] (deftest subtypep.single-float.zero.1
  - [ ] (deftest subtypep.single-float.zero.3
  - [ ] (deftest subtypep.single-float.zero.4
  - [ ] (deftest subtypep.single-float.zero.5
  - [ ] (deftest subtypep.single-float.zero.6
  - [ ] (deftest subtypep.single-float.zero.7
  - [ ] (deftest subtypep.single-float.zero.8
  - [ ] (deftest subtypep.single-float.zero.9
  - [ ] (deftest subtypep.single-float.zero.10
  - [ ] (deftest subtypep.long-float.zero.1
  - [ ] (deftest subtypep.long-float.zero.3
  - [ ] (deftest subtypep.long-float.zero.4
  - [ ] (deftest subtypep.long-float.zero.5
  - [ ] (deftest subtypep.long-float.zero.6
  - [ ] (deftest subtypep.long-float.zero.7
  - [ ] (deftest subtypep.long-float.zero.8
  - [ ] (deftest subtypep.long-float.zero.9
  - [ ] (deftest subtypep.long-float.zero.10
  - [ ] (deftest subtypep.double-float.zero.1
  - [ ] (deftest subtypep.double-float.zero.3
  - [ ] (deftest subtypep.double-float.zero.4
  - [ ] (deftest subtypep.double-float.zero.5
  - [ ] (deftest subtypep.double-float.zero.6
  - [ ] (deftest subtypep.double-float.zero.7
  - [ ] (deftest subtypep.double-float.zero.8
  - [ ] (deftest subtypep.double-float.zero.9
  - [ ] (deftest subtypep.double-float.zero.10
**** subtypep-complex.lsp [0%]
  - [ ] (deftest subtypep-complex.1
  - [ ] (deftest subtypep-complex.2
  - [ ] (deftest subtypep-complex.3
  - [ ] (deftest subtypep-complex.4
  - [ ] (deftest subtypep-complex.5
  - [ ] (deftest subtypep-complex.7
  - [ ] (deftest subtypep-complex.8
**** class-precedence-lists.lsp [0%]
  - [ ] (def-cond-cpl-test (arithmetic-error error serious-condition condition t))
  - [ ] (def-cond-cpl-test (cell-error error serious-condition condition t))
  - [ ] (def-cond-cpl-test (condition t))
  - [ ] (def-cond-cpl-test (control-error error serious-condition condition t))
  - [ ] (def-cond-cpl-test (division-by-zero arithmetic-error error
  - [ ] (def-cond-cpl-test (end-of-file stream-error error serious-condition condition t))
  - [ ] (def-cond-cpl-test (error serious-condition condition t))
  - [ ] (def-cond-cpl-test (file-error error serious-condition condition t))
  - [ ] (def-cond-cpl-test (floating-point-inexact arithmetic-error error
  - [ ] (def-cond-cpl-test (floating-point-invalid-operation
  - [ ] (def-cond-cpl-test (floating-point-overflow arithmetic-error error
  - [ ] (def-cond-cpl-test (floating-point-underflow arithmetic-error error
  - [ ] (def-cond-cpl-test (package-error error serious-condition condition t))
  - [ ] (def-cond-cpl-test (parse-error error serious-condition condition t))
  - [ ] (def-cond-cpl-test (print-not-readable error serious-condition condition t))
  - [ ] (def-cond-cpl-test (program-error error serious-condition condition t))
  - [ ] (def-cond-cpl-test (reader-error parse-error stream-error
  - [ ] (def-cond-cpl-test (serious-condition condition t))
  - [ ] (def-cond-cpl-test (simple-condition condition t))
  - [ ] (def-cond-cpl-test (simple-error simple-condition error serious-condition
  - [ ] (def-cond-cpl-test (simple-type-error simple-condition type-error
  - [ ] (def-cond-cpl-test (simple-warning simple-condition warning condition t))
  - [ ] (def-cond-cpl-test (storage-condition serious-condition condition t))
  - [ ] (def-cond-cpl-test (stream-error error serious-condition condition t))
  - [ ] (def-cond-cpl-test (style-warning warning condition t))
  - [ ] (def-cond-cpl-test (type-error error serious-condition condition t))
  - [ ] (def-cond-cpl-test (unbound-slot cell-error error serious-condition condition t))
  - [ ] (def-cond-cpl-test (unbound-variable cell-error error serious-condition condition t))
  - [ ] (def-cond-cpl-test (undefined-function cell-error error serious-condition condition t))
  - [ ] (def-cond-cpl-test (warning condition t))
  - [ ] (def-cpl-test (make-array '(2 3 4)) (array t))
  - [ ] (def-cpl-test (make-array '(10) :element-type 'bit :adjustable t :fill-pointer 5)
  - [ ] (def-cpl-test (make-broadcast-stream) (broadcast-stream stream t))
  - [ ] (def-cpl-test (class-of 'symbol) (built-in-class class standard-object t))
  - [ ] (def-cpl-test #\a (character t) character-cpl.1)
  - [ ] (def-cpl-test #c(1.0 2.0) (complex number t) complex-cpl.1)
  - [ ] (def-cpl-test #c(1 2) (complex number t) complex-cpl.2)
  - [ ] (def-cpl-test #c(1/2 2/3) (complex number t) complex-cpl.3)
  - [ ] (def-cpl-test (make-concatenated-stream) (concatenated-stream stream t))
  - [ ] (def-cpl-test '(a b c) (cons list sequence t))
  - [ ] (def-cpl-test (let ((out (make-string-output-stream)))
  - [ ] (def-cpl-test (open "class-precedence-lists.txt" :direction :probe)
  - [ ] (def-cpl-test 1.0s0 (float real number t) float-cpl.1)
  - [ ] (def-cpl-test 1.0f0 (float real number t) float-cpl.2)
  - [ ] (def-cpl-test 1.0d0 (float real number t) float-cpl.3)
  - [ ] (def-cpl-test 1.0l0 (float real number t) float-cpl.4)
  - [ ] (def-cpl-test #'car (function t))
  - [ ] (def-cpl-test (make-hash-table) (hash-table t) hash-table-cpl.1)
  - [ ] (def-cpl-test (make-hash-table :test 'eq) (hash-table t) hash-table-cpl.2)
  - [ ] (def-cpl-test (make-hash-table :test 'equal) (hash-table t) hash-table-cpl.3)
  - [ ] (def-cpl-test 0 (integer rational real number t) integer-cpl.1)
  - [ ] (def-cpl-test (1+ most-positive-fixnum) (integer rational real number t) integer-cpl.2)
  - [ ] (def-cpl-test (1- most-negative-fixnum) (integer rational real number t) integer-cpl.3)
  - [ ] (def-cpl-test nil (list sequence t) list-cpl.1)
  - [ ] (def-cpl-test '(a b c) (list sequence t) list-cpl.2)
  - [ ] (def-cpl-test nil (null symbol list sequence t))
  - [ ] (def-cpl-test (find-package "CL") (package t))
  - [ ] (def-cpl-test #p"foo" (pathname t))
  - [ ] (def-cpl-test *random-state* (random-state t))
  - [ ] (def-cpl-test 5/3 (ratio rational real number t))
  - [ ] (def-cpl-test *readtable* (readtable t))
  - [ ] (def-cpl-test (find-class 'cpl-example-class)
  - [ ] (def-cpl-test #'cpl-example-gf (standard-generic-function generic-function function t))
  - [ ] (def-cpl-test (eval '(defmethod cpl-example-gf ((x t) (y t)) (list y x)))
  - [ ] (def-cpl-test (make-array '(10) :element-type 'character :initial-element #\a
  - [ ] (def-cpl-test "abcd" (string vector array sequence t) string-cpl.2)
  - [ ] (def-cpl-test (make-string-input-stream "abcdef") (string-stream stream t))
  - [ ] (def-cpl-test 'a (symbol t))
  - [ ] (def-cpl-test (make-synonym-stream '*cpl-input-stream*) (synonym-stream stream t))
  - [ ] (def-cpl-test (make-two-way-stream *cpl-input-stream* *cpl-output-stream*)
  - [ ] (def-cpl-test (make-array '(10) :fill-pointer t :adjustable t :initial-element '(a b c))
**** deftype.lsp [0%]
  - [ ] (deftest deftype.1
  - [ ] (deftest deftype.2
  - [ ] (deftest deftype.3
  - [ ] (deftest deftype.4
  - [ ] (deftest deftype.5
  - [ ] (deftest deftype.6
  - [ ] (deftest deftype.7
  - [ ] (deftest deftype.8
  - [ ] (deftest deftype.9
  - [ ] (deftest deftype.10
  - [ ] (deftest deftype.11
  - [ ] (deftest deftype.12
  - [ ] (deftest deftype.13
  - [ ] (deftest deftype.14
  - [ ] (deftest deftype.15
  - [ ] (deftest deftype.16
  - [ ] (deftest deftype.17
  - [ ] (deftest deftype.18
  - [ ] (deftest deftype.19
  - [ ] (deftest deftype.error.1
  - [ ] (deftest deftype.error.2
  - [ ] (deftest deftype.error.3
**** typep.lsp [0%]
  - [ ] (deftest typep.error.1
  - [ ] (deftest typep.error.2
  - [ ] (deftest typep.error.3
  - [ ] (deftest typep.error.4
  - [ ] (deftest typep.error.5
  - [ ] (deftest typep.error.6
  - [ ] (deftest typep.error.7
  - [ ] (deftest typep-nil-null
  - [ ] (deftest typep-t-null
  - [ ] (deftest typep.env.1
  - [ ] (deftest typep.env.2
  - [ ] (deftest typep.env.3
  - [ ] (deftest typep.1
  - [ ] (deftest typep.2
  - [ ] (deftest typep.3
  - [ ] (deftest typep.4
  - [ ] (deftest typep.5
  - [ ] (deftest typep.6
  - [ ] (deftest typep.7
  - [ ] (deftest typep.8
  - [ ] (deftest typep.9
  - [ ] (deftest typep.10
  - [ ] (deftest typep.11
  - [ ] (deftest typep.12
  - [ ] (deftest typep.13
  - [ ] (deftest typep.14
  - [ ] (deftest typep.15
  - [ ] (deftest typep.16
  - [ ] (deftest typep.17
  - [ ] (deftest typep.18
  - [ ] (deftest typep.19 (typep.19-fn 1000) nil)
**** subtypep-eql.lsp [0%]
  - [ ] (deftest subtypep.eql.1
  - [ ] (deftest subtypep.eql.2
  - [ ] (deftest subtypep.eql.3
  - [ ] (deftest subtypep.eql.4
  - [ ] (deftest subtypep.eql.5
  - [ ] (deftest subtypep.eql.6
  - [ ] (deftest subtypep.eql.7
  - [ ] (deftest subtypep.eql.8
**** coerce.lsp [0%]
  - [ ] (deftest coerce.1
  - [ ] (deftest coerce.2
  - [ ] (deftest coerce.3
  - [ ] (deftest coerce.4
  - [ ] (deftest coerce.5
  - [ ] (deftest coerce.6
  - [ ] (deftest coerce.7
  - [ ] (deftest coerce.8
  - [ ] (deftest coerce.9
  - [ ] (deftest coerce.10
  - [ ] (deftest coerce.11
  - [ ] (deftest coerce.12
  - [ ] (deftest coerce.13
  - [ ] (deftest coerce.14
  - [ ] (deftest coerce.15
  - [ ] (deftest coerce.16
  - [ ] (deftest coerce.17
  - [ ] (deftest coerce.18
  - [ ] (deftest coerce.19
  - [ ] (deftest coerce.20
  - [ ] (deftest coerce.21
  - [ ] (deftest coerce.22
  - [ ] (deftest coerce.order.1
  - [ ] (def-fold-test coerce.fold.1 (coerce '(1 2 3) 'vector))
  - [ ] (def-fold-test coerce.fold.2 (coerce '(1 0 1) 'bit-vector))
  - [ ] (def-fold-test coerce.fold.3 (coerce '(#\a #\b #\c) 'string))
  - [ ] (deftest coerce.error.2
  - [ ] (deftest coerce.error.3
  - [ ] (deftest coerce.error.4
  - [ ] (deftest coerce.error.5
  - [ ] (deftest coerce.error.6
  - [ ] (deftest coerce.error.7
  - [ ] (deftest coerce.error.8
  - [ ] (deftest coerce.error.9
  - [ ] (deftest coerce.error.10
**** standard-generic-function.lsp [0%]
  - [ ] (deftest standard-generic-function.1
  - [ ] (deftest standard-generic-function.2
*** packages [0%]
**** with-package-iterator.lsp [0%]
  - [ ] (deftest with-package-iterator.1
  - [ ] (deftest with-package-iterator.2
  - [ ] (deftest with-package-iterator.3
  - [ ] (deftest with-package-iterator.4
  - [ ] (deftest with-package-iterator.5
  - [ ] (deftest with-package-iterator.6
  - [ ] (deftest with-package-iterator.7
  - [ ] (deftest with-package-iterator.8
  - [ ] (deftest with-package-iterator.9
  - [ ] (deftest with-package-iterator.10
  - [ ] (deftest with-package-iterator.11
  - [ ] (deftest with-package-iterator.12
  - [ ] (deftest with-package-iterator.13
  - [ ] (deftest with-package-iterator.14
  - [ ] (def-macro-test with-package-iterator.error.1
  - [ ] (def-with-package-iterator-test with-package-iterator.15
  - [ ] (def-with-package-iterator-test with-package-iterator.16
  - [ ] (def-with-package-iterator-test with-package-iterator.17
  - [ ] (def-with-package-iterator-test with-package-iterator.18
  - [ ] (def-with-package-iterator-test with-package-iterator.19
  - [ ] (def-with-package-iterator-test with-package-iterator.20
  - [ ] (def-with-package-iterator-test with-package-iterator.21
  - [ ] (deftest with-package-iterator.22
**** keyword.lsp [0%]
  - [ ] (deftest keyword.1
  - [ ] (deftest keyword.4
  - [ ] (deftest keyword.5
  - [ ] (deftest keyword.6
  - [ ] (deftest keyword.2
  - [ ] (deftest keyword.3
**** unuse-package.lsp [0%]
  - [ ] (deftest unuse-package.1
  - [ ] (deftest unuse-package.2
  - [ ] (deftest unuse-package.3
  - [ ] (deftest unuse-package.4
  - [ ] (deftest unuse-package.5
  - [ ] (deftest unuse-package.6
  - [ ] (deftest unuse-package.7
  - [ ] (deftest unuse-package.8
  - [ ] (deftest unuse-package.9
  - [ ] (def-unuse-package-test unuse-package.10
  - [ ] (def-unuse-package-test unuse-package.11
  - [ ] (def-unuse-package-test unuse-package.12
  - [ ] (def-unuse-package-test unuse-package.13
  - [ ] (def-unuse-package-test unuse-package.14
  - [ ] (def-unuse-package-test unuse-package.15
  - [ ] (def-unuse-package-test unuse-package.16
  - [ ] (def-unuse-package-test unuse-package.17
  - [ ] (def-unuse-package-test unuse-package.18
  - [ ] (def-unuse-package-test unuse-package.19
  - [ ] (def-unuse-package-test unuse-package.20
  - [ ] (def-unuse-package-test unuse-package.21
  - [ ] (def-unuse-package-test unuse-package.22
  - [ ] (def-unuse-package-test unuse-package.23
  - [ ] (deftest unuse-package.error.1
  - [ ] (deftest unuse-package.error.2
**** defpackage.lsp [0%]
  - [ ] (deftest defpackage.1
  - [ ] (deftest defpackage.2
  - [ ] (deftest defpackage.2b
  - [ ] (deftest defpackage.3
  - [ ] (deftest defpackage.4
  - [ ] (deftest defpackage.5
  - [ ] (deftest defpackage.6
  - [ ] (deftest defpackage.7
  - [ ] (deftest defpackage.8
  - [ ] (deftest defpackage.9
  - [ ] (deftest defpackage.10
  - [ ] (deftest defpackage.11
  - [ ] (deftest defpackage.12
  - [ ] (deftest defpackage.13
  - [ ] (deftest defpackage.14
  - [ ] (deftest defpackage.15
  - [ ] (deftest defpackage.16
  - [ ] (deftest defpackage.17
  - [ ] (deftest defpackage.18
  - [ ] (deftest defpackage.19
  - [ ] (deftest defpackage.20
  - [ ] (deftest defpackage.21
  - [ ] (deftest defpackage.22
  - [ ] (deftest defpackage.23
  - [ ] (deftest defpackage.24
  - [ ] (deftest defpackage.25
  - [ ] (deftest defpackage.26
  - [ ] (def-macro-test defpackage.error.1
**** package-use-list.lsp [0%]
  - [ ] (def-package-use-list-test package-use-list.1
  - [ ] (def-package-use-list-test package-use-list.2
  - [ ] (def-package-use-list-test package-use-list.3
  - [ ] (def-package-use-list-test package-use-list.4
  - [ ] (def-package-use-list-test package-use-list.5
  - [ ] (def-package-use-list-test package-use-list.6
  - [ ] (def-package-use-list-test package-use-list.7
  - [ ] (deftest package-use-list.error.1
  - [ ] (deftest package-use-list.error.2
**** package-error.lsp [0%]
  - [ ] (deftest package-error.1
  - [ ] (deftest package-error.2
  - [ ] (deftest package-error.3
  - [ ] (deftest package-error.4
**** shadowing-import.lsp [0%]
  - [ ] (deftest shadowing-import.1
  - [ ] (deftest shadowing-import.2
  - [ ] (deftest shadowing-import.3
  - [ ] (deftest shadowing-import.4
  - [ ] (def-shadowing-import-test shadowing-import.5
  - [ ] (def-shadowing-import-test shadowing-import.6
  - [ ] (def-shadowing-import-test shadowing-import.7
  - [ ] (def-shadowing-import-test shadowing-import.8
  - [ ] (def-shadowing-import-test shadowing-import.9
  - [ ] (def-shadowing-import-test shadowing-import.10
  - [ ] (def-shadowing-import-test shadowing-import.11
  - [ ] (deftest shadowing-import.error.1
  - [ ] (deftest shadowing-import.error.2
**** export.lsp [0%]
  - [ ] (deftest export.1
  - [ ] (deftest export.2
  - [ ] (deftest export.3
  - [ ] (deftest export.4
  - [ ] (deftest export.5
  - [ ] (deftest export.error.1
  - [ ] (deftest export.error.2
**** find-package.lsp [0%]
  - [ ] (deftest find-package.1
  - [ ] (deftest find-package.2
  - [ ] (deftest find-package.3
  - [ ] (deftest find-package.4
  - [ ] (deftest find-package.5
  - [ ] (deftest find-package.6
  - [ ] (deftest find-package.7
  - [ ] (deftest find-package.8
  - [ ] (deftest find-package.9
  - [ ] (deftest find-package.10
  - [ ] (deftest find-package.11
  - [ ] (deftest find-package.12
  - [ ] (deftest find-package.13
  - [ ] (deftest find-package.14
  - [ ] (deftest find-package.15
  - [ ] (deftest find-package.16
  - [ ] (deftest find-package.17
  - [ ] (deftest find-package.error.1
  - [ ] (deftest find-package.error.2
**** use-package.lsp [0%]
  - [ ] (deftest use-package.1
  - [ ] (deftest use-package.2
  - [ ] (deftest use-package.3
  - [ ] (deftest use-package.4
  - [ ] (deftest use-package.5
  - [ ] (deftest use-package.6
  - [ ] (deftest use-package.7
  - [ ] (def-use-package-test use-package.10
  - [ ] (def-use-package-test use-package.11
  - [ ] (def-use-package-test use-package.12
  - [ ] (def-use-package-test use-package.13
  - [ ] (def-use-package-test use-package.14
  - [ ] (def-use-package-test use-package.15
  - [ ] (def-use-package-test use-package.16
  - [ ] (def-use-package-test use-package.17
  - [ ] (def-use-package-test use-package.18
  - [ ] (def-use-package-test use-package.19
  - [ ] (def-use-package-test use-package.20
  - [ ] (def-use-package-test use-package.21
  - [ ] (def-use-package-test use-package.22
  - [ ] (def-use-package-test use-package.23
  - [ ] (deftest use-package.error.1
  - [ ] (deftest use-package.error.2
**** unintern.lsp [0%]
  - [ ] (deftest unintern.1
  - [ ] (deftest unintern.2
  - [ ] (deftest unintern.3
  - [ ] (deftest unintern.4
  - [ ] (deftest unintern.5
  - [ ] (deftest unintern.6
  - [ ] (deftest unintern.7
  - [ ] (deftest unintern.8
  - [ ] (deftest unintern.9
  - [ ] (def-unintern-test unintern.10
  - [ ] (def-unintern-test unintern.11
  - [ ] (def-unintern-test unintern.12
  - [ ] (def-unintern-test unintern.13
  - [ ] (def-unintern-test unintern.14
  - [ ] (def-unintern-test unintern.15
  - [ ] (def-unintern-test unintern.16
  - [ ] (deftest unintern.error.1
  - [ ] (deftest unintern.error.2
**** package-used-by-list.lsp [0%]
  - [ ] (def-package-used-by-list-test package-used-by-list.1
  - [ ] (def-package-used-by-list-test package-used-by-list.2
  - [ ] (def-package-used-by-list-test package-used-by-list.3
  - [ ] (def-package-used-by-list-test package-used-by-list.4
  - [ ] (def-package-used-by-list-test package-used-by-list.5
  - [ ] (def-package-used-by-list-test package-used-by-list.6
  - [ ] (def-package-used-by-list-test package-used-by-list.7
  - [ ] (deftest package-used-by-list.error.1
  - [ ] (deftest package-used-by-list.error.2
**** package-name.lsp [0%]
  - [ ] (deftest package-name.1
  - [ ] (deftest package-name.2
  - [ ] (deftest package-name.3
  - [ ] (deftest package-name.4
  - [ ] (deftest package-name.5
  - [ ] (deftest package-name.6
  - [ ] (deftest package-name.6a
  - [ ] (deftest package-name.7
  - [ ] (deftest package-name.8
  - [ ] (deftest package-name.9
  - [ ] (deftest package-name.10
  - [ ] (deftest package-name.11
  - [ ] (deftest package-name.12
  - [ ] (deftest package-name.13
  - [ ] (deftest package-name.14
  - [ ] (deftest package-name.15
  - [ ] (def-package-name-test package-name.16
  - [ ] (def-package-name-test package-name.17
  - [ ] (def-package-name-test package-name.18
  - [ ] (def-package-name-test package-name.19
  - [ ] (def-package-name-test package-name.20
  - [ ] (def-package-name-test package-name.21
  - [ ] (def-package-name-test package-name.22
  - [ ] (deftest package-name.error.1
  - [ ] (deftest package-name.error.2
  - [ ] (deftest package-name.error.3
**** do-symbols.lsp [0%]
  - [ ] (deftest do-symbols.1
  - [ ] (deftest do-symbols.2
  - [ ] (deftest do-symbols.3
  - [ ] (deftest do-symbols.4
  - [ ] (deftest do-symbols.5
  - [ ] (deftest do-symbols.6
  - [ ] (deftest do-symbols.7
  - [ ] (deftest do-symbols.8
  - [ ] (def-do-symbols-test do-symbols.9
  - [ ] (def-do-symbols-test do-symbols.10
  - [ ] (def-do-symbols-test do-symbols.11
  - [ ] (def-do-symbols-test do-symbols.12
  - [ ] (def-do-symbols-test do-symbols.13
  - [ ] (def-do-symbols-test do-symbols.14
  - [ ] (def-do-symbols-test do-symbols.15
  - [ ] (deftest do-symbols.16
  - [ ] (deftest do-symbols.17
  - [ ] (deftest do-symbols.18
  - [ ] (deftest do-symbols.19
  - [ ] (def-macro-test do-symbols.error.1
**** unexport.lsp [0%]
  - [ ] (deftest unexport.1
  - [ ] (deftest unexport.2
  - [ ] (deftest unexport.3
  - [ ] (deftest unexport.4
  - [ ] (deftest unexport.5
  - [ ] (deftest unexport.6
  - [ ] (def-unexport-test unexport.7
  - [ ] (def-unexport-test unexport.8
  - [ ] (def-unexport-test unexport.9
  - [ ] (def-unexport-test unexport.10
  - [ ] (def-unexport-test unexport.11
  - [ ] (def-unexport-test unexport.12
  - [ ] (def-unexport-test unexport.13
  - [ ] (deftest unexport.error.1
  - [ ] (deftest unexport.error.2
**** shadow.lsp [0%]
  - [ ] (deftest shadow.1
  - [ ] (deftest shadow.2
  - [ ] (deftest shadow.3
  - [ ] (deftest shadow.4
  - [ ] (deftest shadow.5
  - [ ] (deftest shadow.6
  - [ ] (deftest shadow.7
  - [ ] (deftest shadow.8
  - [ ] (deftest shadow.9
  - [ ] (deftest shadow.10
  - [ ] (deftest shadow.error.1
  - [ ] (deftest shadow.error.2
**** rename-package.lsp [0%]
  - [ ] (deftest rename-package.1
  - [ ] (deftest rename-package.2
  - [ ] (deftest rename-package.3
  - [ ] (deftest rename-package.4
  - [ ] (deftest rename-package.5
  - [ ] (deftest rename-package.6
  - [ ] (deftest rename-package.7
  - [ ] (deftest rename-package.8
  - [ ] (deftest rename-package.9
  - [ ] (deftest rename-package.error.1
  - [ ] (deftest rename-package.error.2
  - [ ] (deftest rename-package.error.3
**** do-external-symbols.lsp [0%]
  - [ ] (deftest do-external-symbols.1
  - [ ] (deftest do-external-symbols.2
  - [ ] (deftest do-external-symbols.3
  - [ ] (deftest do-external-symbols.4
  - [ ] (deftest do-external-symbols.5
  - [ ] (deftest do-external-symbols.6
  - [ ] (deftest do-external-symbols.7
  - [ ] (deftest do-external-symbols.8
  - [ ] (def-do-external-symbols-test do-external-symbols.9
  - [ ] (def-do-external-symbols-test do-external-symbols.10
  - [ ] (def-do-external-symbols-test do-external-symbols.11
  - [ ] (def-do-external-symbols-test do-external-symbols.12
  - [ ] (def-do-external-symbols-test do-external-symbols.13
  - [ ] (def-do-external-symbols-test do-external-symbols.14
  - [ ] (def-do-external-symbols-test do-external-symbols.15
  - [ ] (deftest do-external-symbols.16
  - [ ] (deftest do-external-symbols.17
  - [ ] (deftest do-external-symbols.18
  - [ ] (deftest do-external-symbols.19
  - [ ] (def-macro-test do-external-symbols.error.1
**** find-all-symbols.lsp [0%]
  - [ ] (deftest find-all-symbols.1
  - [ ] (deftest find-all-symbols.2
  - [ ] (deftest find-all-symbols.3
  - [ ] (deftest find-all-symbols.4
  - [ ] (deftest find-all-symbols.5
  - [ ] (deftest find-all-symbols.6
  - [ ] (deftest find-all-symbols.7
  - [ ] (deftest find-all-symbols.8
  - [ ] (deftest find-all-symbols.9
  - [ ] (deftest find-all-symbols.error.1
  - [ ] (deftest find-all-symbols.error.2
**** import.lsp [0%]
  - [ ] (deftest import.1
  - [ ] (deftest import.2
  - [ ] (deftest import.3
  - [ ] (deftest import.4
  - [ ] (deftest import.5
  - [ ] (deftest import.6
  - [ ] (deftest import.7
  - [ ] (deftest import.8
  - [ ] (deftest import.9
  - [ ] (deftest import.10
  - [ ] (deftest import.11
  - [ ] (deftest import.12
  - [ ] (deftest import.error.1
  - [ ] (deftest import.error.2
  - [ ] (deftest import.error.3
  - [ ] (deftest import.error.4
  - [ ] (deftest import.error.5
**** package-nicknames.lsp [0%]
  - [ ] (deftest package-nicknames.1
  - [ ] (deftest package-nicknames.2
  - [ ] (deftest package-nicknames.3
  - [ ] (deftest package-nicknames.4
  - [ ] (deftest package-nicknames.5
  - [ ] (deftest package-nicknames.6
  - [ ] (deftest package-nicknames.7
  - [ ] (deftest package-nicknames.8
  - [ ] (deftest package-nicknames.9
  - [ ] (deftest package-nicknames.9a
  - [ ] (deftest package-nicknames.10
  - [ ] (deftest package-nicknames.11
  - [ ] (deftest package-nicknames.12
  - [ ] (def-package-nicknames-test package-nicknames.16
  - [ ] (def-package-nicknames-test package-nicknames.17
  - [ ] (def-package-nicknames-test package-nicknames.18
  - [ ] (def-package-nicknames-test package-nicknames.19
  - [ ] (def-package-nicknames-test package-nicknames.20
  - [ ] (def-package-nicknames-test package-nicknames.21
  - [ ] (def-package-nicknames-test package-nicknames.22
  - [ ] (deftest package-nicknames.error.1
  - [ ] (deftest package-nicknames.error.2
  - [ ] (deftest package-nicknames.error.3
**** make-package.lsp [0%]
  - [ ] (deftest make-package.1
  - [ ] (deftest make-package.2
  - [ ] (deftest make-package.3
  - [ ] (deftest make-package.4
  - [ ] (deftest make-package.5
  - [ ] (deftest make-package.6
  - [ ] (deftest make-package.7
  - [ ] (deftest make-package.7a
  - [ ] (deftest make-package.7b
  - [ ] (deftest make-package.8
  - [ ] (deftest make-package.8a
  - [ ] (deftest make-package.8b
  - [ ] (deftest make-package.9
  - [ ] (deftest make-package.9a
  - [ ] (deftest make-package.9b
  - [ ] (deftest make-package.10
  - [ ] (deftest make-package.11
  - [ ] (deftest make-package.12
  - [ ] (deftest make-package.13
  - [ ] (def-make-package-test1 make-package.14
  - [ ] (def-make-package-test1 make-package.15
  - [ ] (def-make-package-test1 make-package.16
  - [ ] (def-make-package-test1 make-package.17
  - [ ] (def-make-package-test1 make-package.18
  - [ ] (def-make-package-test1 make-package.19
  - [ ] (def-make-package-test1 make-package.20
  - [ ] (def-make-package-test2 make-package.21
  - [ ] (def-make-package-test2 make-package.22
  - [ ] (def-make-package-test2 make-package.23
  - [ ] (def-make-package-test2 make-package.24
  - [ ] (def-make-package-test2 make-package.25
  - [ ] (def-make-package-test2 make-package.26
  - [ ] (def-make-package-test2 make-package.27
  - [ ] (def-make-package-test3 make-package.28
  - [ ] (def-make-package-test3 make-package.29
  - [ ] (def-make-package-test3 make-package.30
  - [ ] (def-make-package-test3 make-package.31
  - [ ] (def-make-package-test3 make-package.32
  - [ ] (def-make-package-test3 make-package.33
  - [ ] (def-make-package-test3 make-package.34
  - [ ] (deftest make-package.error.1
  - [ ] (deftest make-package.error.2
  - [ ] (deftest make-package.error.3
  - [ ] (deftest make-package.error.4
  - [ ] (deftest make-package.error.5
  - [ ] (deftest make-package.error.6
  - [ ] (deftest make-package.error.7
  - [ ] (deftest make-package.error.8
  - [ ] (deftest make-package.error.9
  - [ ] (deftest make-package.error.10
  - [ ] (deftest make-package.error.11
**** package-error-package.lsp [0%]
  - [ ] (deftest package-error-package.1
  - [ ] (deftest package-error-package.2
  - [ ] (deftest package-error-package.3
  - [ ] (deftest package-error-package.4
  - [ ] (deftest package-error-package.error.1
  - [ ] (deftest package-error-package.error.2
**** in-package.lsp [0%]
  - [ ] (deftest in-package.1
  - [ ] (deftest in-package.2
  - [ ] (deftest in-package.3
  - [ ] (deftest in-package.4
  - [ ] (deftest in-package.5
  - [ ] (def-macro-test in-package.error.1
  - [ ] (def-in-package-test in-package.7
  - [ ] (def-in-package-test in-package.8
  - [ ] (def-in-package-test in-package.9
  - [ ] (def-in-package-test in-package.10
  - [ ] (def-in-package-test in-package.11
  - [ ] (def-in-package-test in-package.12
  - [ ] (def-in-package-test in-package.13
**** package-shadowing-symbols.lsp [0%]
  - [ ] (def-package-shadowing-symbols-test package-shadowing-symbols.1
  - [ ] (def-package-shadowing-symbols-test package-shadowing-symbols.2
  - [ ] (def-package-shadowing-symbols-test package-shadowing-symbols.3
  - [ ] (def-package-shadowing-symbols-test package-shadowing-symbols.4
  - [ ] (def-package-shadowing-symbols-test package-shadowing-symbols.5
  - [ ] (def-package-shadowing-symbols-test package-shadowing-symbols.6
  - [ ] (def-package-shadowing-symbols-test package-shadowing-symbols.7
  - [ ] (deftest package-shadowing-symbols.error.1
  - [ ] (deftest package-shadowing-symbols.error.2
**** packagep.lsp [0%]
  - [ ] (deftest packagep.1
  - [ ] (deftest packagep.2
  - [ ] (deftest packagep.error.1
  - [ ] (deftest packagep.error.2
**** find-symbol.lsp [0%]
  - [ ] (deftest find-symbol.1
  - [ ] (deftest find-symbol.2
  - [ ] (deftest find-symbol.3
  - [ ] (deftest find-symbol.4
  - [ ] (deftest find-symbol.5
  - [ ] (deftest find-symbol.6
  - [ ] (deftest find-symbol.7
  - [ ] (deftest find-symbol.8
  - [ ] (deftest find-symbol.9
  - [ ] (deftest find-symbol.10
  - [ ] (deftest find-symbol.11
  - [ ] (deftest find-symbol.12
  - [ ] (deftest find-symbol.13
  - [ ] (deftest find-symbol.14
  - [ ] (deftest find-symbol.15
  - [ ] (deftest find-symbol.16
  - [ ] (deftest find-symbol.17
  - [ ] (deftest find-symbol.18
  - [ ] (deftest find-symbol.19
  - [ ] (deftest find-symbol.20
  - [ ] (deftest find-symbol.21
  - [ ] (deftest find-symbol.22
  - [ ] (deftest find-symbol.23
  - [ ] (deftest find-symbol.order.1
  - [ ] (deftest find-symbol.error.1
  - [ ] (deftest find-symbol.error.2
**** list-all-packages.lsp [0%]
  - [ ] (deftest list-all-packages.1
  - [ ] (deftest list-all-packages.2
  - [ ] (deftest list-all-packages.3
  - [ ] (deftest list-all-packages.4
  - [ ] (deftest list-all-packages.error.1
**** do-all-symbols.lsp [0%]
  - [ ] (def-macro-test do-all-symbols.error.1
  - [ ] (deftest do-all-symbols.1
  - [ ] (deftest do-all-symbols.2
  - [ ] (deftest do-all-symbols.3
  - [ ] (deftest do-all-symbols.4
  - [ ] (deftest do-all-symbols.5
  - [ ] (deftest do-all-symbols.6
  - [ ] (deftest do-all-symbols.7
  - [ ] (deftest do-all-symbols.8
  - [ ] (deftest do-all-symbols.9
  - [ ] (deftest do-all-symbols.10
  - [ ] (deftest do-all-symbols.11
  - [ ] (deftest do-all-symbols.12
  - [ ] (deftest do-all-symbols.13
**** intern.lsp [0%]
  - [ ] (deftest intern.1
  - [ ] (deftest intern.2
  - [ ] (deftest intern.3
  - [ ] (deftest intern.4
  - [ ] (def-intern-test intern.5
  - [ ] (def-intern-test intern.6
  - [ ] (def-intern-test intern.7
  - [ ] (def-intern-test intern.8
  - [ ] (def-intern-test intern.9
  - [ ] (def-intern-test intern.10
  - [ ] (def-intern-test intern.11
  - [ ] (def-intern-test intern.12
  - [ ] (def-intern-test intern.13
  - [ ] (def-intern-test intern.14
  - [ ] (def-intern-test intern.15
  - [ ] (def-intern-test intern.16
  - [ ] (def-intern-test intern.17
  - [ ] (def-intern-test intern.18
  - [ ] (deftest intern.error.1
  - [ ] (deftest intern.error.2
**** delete-package.lsp [0%]
  - [ ] (deftest delete-package.1
  - [ ] (deftest delete-package.2
  - [ ] (deftest delete-package.3
  - [ ] (deftest delete-package.4
  - [ ] (deftest delete-package.5
  - [ ] (deftest delete-package.6
  - [ ] (def-delete-package-test delete-package.7
  - [ ] (def-delete-package-test delete-package.8
  - [ ] (def-delete-package-test delete-package.9
  - [ ] (def-delete-package-test delete-package.10
  - [ ] (def-delete-package-test delete-package.11
  - [ ] (def-delete-package-test delete-package.12
  - [ ] (def-delete-package-test delete-package.13
  - [ ] (deftest delete-package.error.1
  - [ ] (deftest delete-package.error.2
*** data-and-control-flow [0%]
**** identity.lsp [83%]
  - [ ] (deftest identity.1
  - [X] (deftest identity.2
  - [X] (deftest identity.3
  - [X] (deftest identity.order.1
  - [X] (deftest identity.error.1
  - [X] (deftest identity.error.2
**** cond.lsp [90%]
  - [X] (deftest cond.1
  - [X] (deftest cond.2
  - [X] (deftest cond.3
  - [X] (deftest cond.4
  - [X] (deftest cond.5
  - [X] (deftest cond.6
  - [X] (deftest cond.7
  - [X] (deftest cond.8
  - [X] (deftest cond.9
  - [X] (deftest cond.10
  - [X] (deftest cond.11
  - [X] (deftest cond.12
  - [X] (deftest cond.13
  - [X] (deftest cond.14 (cond (t (values))))
  - [X] (deftest cond.15
  - [ ] (deftest cond.16
  - [ ] (deftest cond.17
  - [X] (deftest cond.error.1
  - [X] (deftest cond.error.2
  - [X] (deftest cond.error.3
**** defparameter.lsp [100%]
  - [X] (deftest defparameter.1
  - [X] (deftest defparameter.2
  - [X] (deftest defparameter.3
  - [X] (deftest defparameter.4
  - [X] (deftest defparameter.5
  - [X] (deftest defparameter.error.1
  - [X] (deftest defparameter.error.2
  - [X] (deftest defparameter.error.3
**** shiftf.lsp [0%]
  - [ ] (deftest shiftf-order.1
  - [ ] (deftest shiftf-order.2
  - [ ] (deftest shiftf.1
  - [ ] (deftest shiftf.2
  - [ ] (deftest shiftf.3
  - [ ] (deftest shiftf.4
  - [ ] (deftest shiftf.5
  - [ ] (deftest shiftf.6
  - [ ] (deftest shiftf.7
**** call-arguments-limit.lsp [40%]
  - [X] (deftest call-arguments-limit.1
  - [ ] (deftest call-arguments-limit.2
  - [X] (deftest call-arguments-limit.3
  - [ ] (deftest call-arguments-limit.4
  - [ ] (deftest call-arguments-limit.5
**** multiple-value-prog1.lsp [75%]
  - [X] (deftest multiple-value-prog1.1
  - [X] (deftest multiple-value-prog1.2
  - [X] (deftest multiple-value-prog1.3
  - [X] (deftest multiple-value-prog1.4
  - [X] (deftest multiple-value-prog1.5
  - [X] (deftest multiple-value-prog1.6
  - [X] (deftest multiple-value-prog1.7
  - [ ] (deftest multiple-value-prog1.8
  - [X] (deftest multiple-value-prog1.9
  - [X] (deftest multiple-value-prog1.10
  - [ ] (deftest multiple-value-prog1.11
  - [ ] (deftest multiple-value-prog1.12
**** progv.lsp [0%]
  - [ ] (deftest progv.1
  - [ ] (deftest progv.2
  - [ ] (deftest progv.3
  - [ ] (deftest progv.4
  - [ ] (deftest progv.5
  - [ ] (deftest progv.6
  - [ ] (deftest progv.6a
  - [ ] (deftest progv.7
  - [ ] (deftest progv.8
  - [ ] (deftest progv.9
  - [ ] (deftest progv.10
  - [ ] (deftest progv.11
  - [ ] (deftest progv.12
  - [ ] (deftest progv.13
  - [ ] (deftest progv.14
  - [ ] (deftest progv.15
  - [ ] (deftest progv.16
  - [ ] (deftest progv.17
**** defsetf.lsp [69%]
  - [ ] (def-macro-test defsetf.error.1 (defsetf nonexistent-access-fn
  - [X] (deftest defsetf.1
  - [X] (deftest defsetf.2a
  - [X] (deftest defsetf.2b
  - [X] (deftest defsetf.3a
  - [X] (deftest defsetf.3b
  - [X] (deftest defsetf.3c
  - [X] (deftest defsetf.4a
  - [X] (deftest defsetf.4b
  - [X] (deftest defsetf.4c
  - [ ] (deftest defsetf.5a
  - [ ] (deftest defsetf.6a
  - [ ] (deftest defsetf.7a
**** equalp.lsp [57%]
  - [ ] (deftest equalp.1
  - [X] (deftest equalp.2
  - [X] (deftest equalp.3
  - [X] (deftest equalp.4
  - [X] (deftest equalp.5
  - [X] (deftest equalp.6
  - [ ] (deftest equalp.7
  - [ ] (deftest equalp.8
  - [ ] (deftest equalp.9
  - [X] (deftest equalp.10
  - [X] (deftest equalp.11
  - [X] (deftest equalp.12
  - [X] (deftest equalp.13
  - [X] (deftest equalp.14
  - [X] (deftest equalp.15
  - [ ] (deftest equalp.16
  - [ ] (deftest equalp.17
  - [ ] (deftest equalp.18
  - [ ] (deftest equalp.19
  - [ ] (deftest equalp.20
  - [ ] (deftest equalp.21
  - [X] (deftest equalp.22
  - [X] (deftest equalp.23
  - [X] (deftest equalp.24
  - [ ] (deftest equalp.25
  - [X] (deftest equalp.26
  - [X] (deftest equalp.27
  - [X] (deftest equalp.28
  - [X] (deftest equalp.29
  - [X] (deftest equalp.30
  - [X] (deftest equalp.31
  - [ ] (deftest equalp.32
  - [ ] (deftest equalp.33
  - [ ] (deftest equalp.34
  - [ ] (deftest equalp.35
  - [ ] (deftest equalp.36
  - [ ] (deftest equalp.order.1
  - [X] (deftest equalp.error.1
  - [X] (deftest equalp.error.2
  - [X] (deftest equalp.error.3
**** defconstant.lsp [100%]
  - [X] (deftest defconstant.1
  - [X] (deftest defconstant.2
  - [X] (deftest defconstant.3
  - [X] (deftest defconstant.4
  - [X] (deftest defconstant.5
  - [X] (deftest defconstant.error.1
  - [X] (deftest defconstant.error.2
  - [X] (deftest defconstant.error.3
**** equal.lsp [34%]
  - [ ] (deftest equal.1
  - [X] (deftest equal.2
  - [X] (deftest equal.3
  - [X] (deftest equal.4
  - [ ] (deftest equal.5
  - [X] (deftest equal.6
  - [X] (deftest equal.7
  - [X] (deftest equal.8
  - [X] (deftest equal.9
  - [X] (deftest equal.10
  - [ ] (deftest equal.11
  - [ ] (deftest equal.12
  - [ ] (deftest equal.13
  - [ ] (deftest equal.14
  - [ ] (deftest equal.15
  - [ ] (deftest equal.16
  - [ ] (deftest equal.17
  - [ ] (deftest equal.18
  - [ ] (deftest equal.19
  - [ ] (deftest equal.order.1
  - [ ] (deftest equal.error.1
  - [ ] (deftest equal.error.2
  - [ ] (deftest equal.error.3
**** multiple-value-list.lsp [76%]
  - [X] (deftest multiple-value-list.1
  - [X] (deftest multiple-value-list.2
  - [X] (deftest multiple-value-list.3
  - [X] (deftest multiple-value-list.4
  - [X] (deftest multiple-value-list.5
  - [X] (deftest multiple-value-list.6
  - [ ] (deftest multiple-value-list.7
  - [ ] (deftest multiple-value-list.8
  - [ ] (deftest multiple-value-list.9
  - [X] (deftest multiple-value-list.order.1
  - [X] (deftest multiple-value-list.error.1
  - [X] (deftest multiple-value-list.error.2
  - [X] (deftest multiple-value-list.error.3
**** case.lsp [97%]
  - [X] (deftest case.1
  - [X] (deftest case.2
  - [X] (deftest case.3
  - [X] (deftest case.4
  - [X] (deftest case.5
  - [X] (deftest case.6
  - [X] (deftest case.7
  - [X] (deftest case.8
  - [X] (deftest case.9
  - [X] (deftest case.10
  - [X] (deftest case.11
  - [X] (deftest case.12
  - [X] (deftest case.13
  - [X] (deftest case.14
  - [X] (deftest case.15
  - [X] (deftest case.16
  - [X] (deftest case.17
  - [X] (deftest case.18
  - [X] (deftest case.19
  - [X] (deftest case.20
  - [X] (deftest case.21 (case 1 (1 (values))))
  - [X] (deftest case.22 (case 2 (t (values))))
  - [X] (deftest case.23 (case 1 (1 (values 'a 'b 'c)))
  - [X] (deftest case.24 (case 2 (t (values 'a 'b 'c)))
  - [X] (deftest case.25
  - [X] (deftest case.26
  - [X] (deftest case.27
  - [X] (deftest case.28
  - [X] (deftest case.29
  - [X] (deftest case.30
  - [X] (deftest case.31
  - [X] (deftest case.32
  - [X] (deftest case.33
  - [X] (deftest case.34
  - [X] (deftest case.35
  - [X] (deftest case.36
  - [ ] (deftest case.37
  - [X] (deftest case.error.1
  - [X] (deftest case.error.2
  - [X] (deftest case.error.3
**** fdefinition.lsp [30%]
  - [X] (deftest fdefinition.error.1
  - [X] (deftest fdefinition.error.2
  - [X] (deftest fdefinition.error.3
  - [ ] (deftest fdefinition.error.4
  - [X] (deftest fdefinition.error.6
  - [ ] (deftest fdefinition.error.7
  - [ ] (deftest fdefinition.error.8
  - [ ] (deftest fdefinition.1
  - [ ] (deftest fdefinition.2
  - [ ] (deftest fdefinition.3
  - [ ] (deftest fdefinition.4
  - [ ] (deftest fdefinition.5
  - [ ] (deftest fdefinition.order.1
**** eql.lsp [88%]
  - [ ] (deftest eql.1
  - [X] (deftest eql.2
  - [X] (deftest eql.3
  - [X] (deftest eql.4
  - [X] (deftest eql.5
  - [X] (deftest eql.7
  - [X] (deftest eql.8
  - [X] (deftest eql.9
  - [X] (deftest eql.10
  - [ ] (deftest eql.11
  - [X] (deftest eql.order.1
  - [X] (deftest eql.error.1
  - [X] (deftest eql.error.2
  - [X] (deftest eql.error.3
  - [X] (deftest eq.error.1
  - [X] (deftest eq.error.2
  - [X] (deftest eq.error.3
**** lambda-parameters-limit.lsp [0%]
  - [ ] (deftest lambda-parameters-limit.1
  - [ ] (deftest lambda-parameters-limit.2
**** nth-value.lsp [27%]
  - [ ] (deftest nth-value.1
  - [ ] (deftest nth-value.2
  - [ ] (deftest nth-value.3
  - [ ] (deftest nth-value.4
  - [ ] (deftest nth-value.5
  - [ ] (deftest nth-value.6
  - [ ] (deftest nth-value.7
  - [ ] (deftest nth-value.order.1
  - [X] (deftest nth-value.error.1
  - [X] (deftest nth-value.error.2
  - [X] (deftest nth-value.error.3
**** notany.lsp [0%]
  - [ ] (deftest notany.1
  - [ ] (deftest notany.2
  - [ ] (deftest notany.3
  - [ ] (deftest notany.4
  - [ ] (deftest notany.5
  - [ ] (deftest notany.6
  - [ ] (deftest notany.7
  - [ ] (deftest notany.8
  - [ ] (deftest notany.9
  - [ ] (deftest notany.10
  - [ ] (deftest notany.11
  - [ ] (deftest notany.12
  - [ ] (deftest notany.13
  - [ ] (deftest notany.14
  - [ ] (deftest notany.15
  - [ ] (deftest notany.16
  - [ ] (deftest notany.17
  - [ ] (deftest notany.18
  - [ ] (deftest notany.19
  - [ ] (deftest notany.20
  - [ ] (deftest notany.21
  - [ ] (deftest notany.22
  - [ ] (deftest notany.23
  - [ ] (deftest notany.24
  - [ ] (deftest notany.25
  - [ ] (deftest notany.26
  - [ ] (deftest notany.27
  - [ ] (deftest notany.28
  - [ ] (deftest notany.29
  - [ ] (deftest notany.30
  - [ ] (deftest notany.31
  - [ ] (deftest notany.32
  - [ ] (deftest notany.order.1
  - [ ] (deftest notany.error.1
  - [ ] (deftest notany.error.4
  - [ ] (deftest notany.error.7
  - [ ] (deftest notany.error.8
  - [ ] (deftest notany.error.9
  - [ ] (deftest notany.error.10
  - [ ] (deftest notany.error.11
  - [ ] (deftest notany.error.12
  - [ ] (deftest notany.error.13
**** typecase.lsp [11%]
  - [ ] (deftest typecase.1
  - [ ] (deftest typecase.2
  - [ ] (deftest typecase.3
  - [ ] (deftest typecase.4
  - [ ] (deftest typecase.5
  - [ ] (deftest typecase.6
  - [ ] (deftest typecase.7
  - [ ] (deftest typecase.8
  - [ ] (deftest typecase.9
  - [ ] (deftest typecase.10
  - [ ] (deftest typecase.11
  - [ ] (deftest typecase.12
  - [ ] (deftest typecase.13
  - [ ] (deftest typecase.14
  - [ ] (deftest typecase.15
  - [ ] (deftest typecase.16
  - [ ] (deftest typecase.17
  - [ ] (deftest typecase.18
  - [ ] (deftest typecase.19
  - [ ] (deftest typecase.20
  - [ ] (deftest typecase.21
  - [ ] (deftest typecase.22
  - [ ] (deftest typecase.23
  - [X] (deftest typecase.error.1
  - [X] (deftest typecase.error.2
  - [X] (deftest typecase.error.3
**** t.lsp [100%]
  - [X] (deftest t.1
  - [X] (deftest t.2
  - [X] (deftest t.3
  - [X] (deftest t.4
**** nil.lsp [75%]
  - [ ] (deftest nil.1
  - [ ] (deftest nil.2
  - [X] (deftest nil.3
  - [X] (deftest nil.4
  - [X] (deftest nil.5
  - [X] (deftest nil.6
  - [X] (deftest nil.7
  - [X] (deftest nil.8
**** multiple-value-setq.lsp [50%]
  - [X] (deftest multiple-value-setq.1
  - [X] (deftest multiple-value-setq.2
  - [ ] (deftest multiple-value-setq.3
  - [ ] (deftest multiple-value-setq.4
  - [ ] (deftest multiple-value-setq.5
  - [ ] (deftest multiple-value-setq.6
  - [ ] (deftest multiple-value-setq.7
  - [ ] (deftest multiple-value-setq.8
  - [X] (deftest multiple-value-setq.9
  - [ ] (deftest multiple-value-setq.10
  - [X] (deftest multiple-value-setq.11
  - [ ] (deftest multiple-value-setq.12
  - [X] (deftest multiple-value-setq.13
  - [X] (deftest multiple-value-setq.14
  - [X] (deftest multiple-value-setq.15
  - [ ] (deftest multiple-value-setq.16
  - [ ] (deftest multiple-value-setq.17
  - [X] (deftest multiple-value-setq.error.1
  - [X] (deftest multiple-value-setq.error.2
  - [X] (deftest multiple-value-setq.error.3
**** rotatef.lsp [0%]
  - [ ] (deftest rotatef-order.1
  - [ ] (deftest rotatef-order.2
  - [ ] (deftest rotatef.1
  - [ ] (deftest rotatef.2
  - [ ] (deftest rotatef.3
  - [ ] (deftest rotatef.4
  - [ ] (deftest rotatef.5
  - [ ] (deftest rotatef.6
  - [ ] (deftest rotatef.7
  - [ ] (deftest rotatef.8
  - [ ] (deftest rotatef.9
  - [ ] (deftest rotatef.10
  - [ ] (deftest rotatef.11
  - [ ] (deftest rotatef.12
  - [ ] (deftest rotatef.13
  - [ ] (deftest rotatef.14
  - [ ] (deftest rotatef.15
  - [ ] (deftest rotatef.16
  - [ ] (deftest rotatef.17
  - [ ] (deftest rotatef.18
  - [ ] (deftest rotatef.21
  - [ ] (deftest rotatef.22
  - [ ] (deftest rotatef.23
  - [ ] (deftest rotatef.24
  - [ ] (deftest rotatef.25
  - [ ] (deftest rotatef.26
  - [ ] (deftest rotatef.27
  - [ ] (deftest rotatef.28
  - [ ] (deftest rotatef.29
  - [ ] (deftest rotatef.30
  - [ ] (deftest rotatef.31
  - [ ] (deftest rotatef.32
  - [ ] (deftest rotatef.33
  - [ ] (deftest rotatef.34
  - [ ] (deftest rotatef.35
  - [ ] (deftest rotatef.36
  - [ ] (deftest rotatef.37
**** constantly.lsp [0%]
  - [ ] (deftest constantly.1
  - [ ] (deftest constantly.2
  - [ ] (deftest constantly.3
  - [ ] (deftest constantly.error.1
  - [ ] (deftest constantly.error.2
**** prog.lsp [76%]
  - [X] (deftest prog.1
  - [X] (deftest prog.2
  - [X] (deftest prog.3
  - [X] (deftest prog.4
  - [X] (deftest prog.5
  - [X] (deftest prog.6
  - [X] (deftest prog.7
  - [X] (deftest prog.8
  - [ ] (deftest prog.9
  - [X] (deftest prog.10
  - [X] (deftest prog.11
  - [ ] (deftest prog.12
  - [ ] (def-macro-test prog.error.1 (prog nil))
  - [X] (deftest prog*.1
  - [X] (deftest prog*.2
  - [X] (deftest prog*.3
  - [X] (deftest prog*.4
  - [X] (deftest prog*.5
  - [X] (deftest prog*.6
  - [X] (deftest prog*.7
  - [X] (deftest prog*.8
  - [ ] (deftest prog*.9
  - [X] (deftest prog*.10
  - [X] (deftest prog*.11
  - [ ] (deftest prog*.12
  - [ ] (def-macro-test prog*.error.1 (prog* nil))
**** unwind-protect.lsp [53%]
  - [X] (deftest unwind-protect.1
  - [X] (deftest unwind-protect.2
  - [X] (deftest unwind-protect.3
  - [X] (deftest unwind-protect.4
  - [X] (deftest unwind-protect.5
  - [ ] (deftest unwind-protect.6
  - [ ] (deftest unwind-protect.7
  - [ ] (deftest unwind-protect.8
  - [ ] (deftest unwind-protect.9
  - [X] (deftest unwind-protect.10
  - [X] (deftest unwind-protect.11
  - [ ] (deftest unwind-protect.12
  - [ ] (deftest unwind-protect.13
**** etypecase.lsp [15%]
  - [ ] (deftest etypecase.1
  - [ ] (deftest etypecase.2
  - [ ] (deftest etypecase.3
  - [ ] (deftest etypecase.4
  - [ ] (deftest etypecase.5
  - [ ] (deftest etypecase.6
  - [ ] (deftest etypecase.7
  - [ ] (deftest etypecase.8
  - [ ] (deftest etypecase.9
  - [ ] (deftest etypecase.10
  - [ ] (deftest etypecase.11
  - [ ] (deftest etypecase.12
  - [ ] (deftest etypecase.13
  - [ ] (deftest etypecase.14
  - [ ] (deftest etypecase.15
  - [ ] (deftest etypecase.16
  - [ ] (deftest etypecase.17
  - [X] (deftest etypecase.error.1
  - [X] (deftest etypecase.error.2
  - [X] (deftest etypecase.error.3
**** defun.lsp [58%]
  - [X] (deftest defun.1
  - [X] (deftest defun.2
  - [X] (deftest defun.3
  - [ ] (deftest defun.4
  - [ ] (deftest defun.5
  - [ ] (deftest defun.6
  - [ ] (deftest defun.7
  - [X] (deftest defun.8
  - [X] (deftest defun.error.1
  - [X] (deftest defun.error.2
  - [X] (deftest defun.error.3
  - [ ] (deftest defun.error.4
**** unless.lsp [81%]
  - [X] (deftest unless.1
  - [X] (deftest unless.2
  - [X] (deftest unless.3
  - [X] (deftest unless.4
  - [X] (deftest unless.5 (unless nil (values)))
  - [X] (deftest unless.6
  - [X] (deftest unless.7
  - [X] (deftest unless.8
  - [X] (deftest unless.9
  - [X] (deftest unless.10
  - [ ] (deftest unless.11
  - [ ] (deftest unless.12
  - [ ] (deftest unless.13
  - [X] (deftest unless.error.1
  - [X] (deftest unless.error.2
  - [X] (deftest unless.error.3
**** not-and-null.lsp [83%]
  - [X] (deftest null.1
  - [X] (deftest null.2
  - [ ] (deftest null.3
  - [X] (deftest null.4
  - [X] (deftest null.error.1
  - [X] (deftest null.error.2
  - [X] (deftest not.1
  - [X] (deftest not.2
  - [ ] (deftest not.3
  - [X] (deftest not.4
  - [X] (deftest not.error.1
  - [X] (deftest not.error.2
**** let.lsp [55%]
  - [X] (deftest let.1
  - [X] (deftest let.2
  - [ ] (deftest let.3
  - [X] (deftest let.4
  - [X] (deftest let.5
  - [X] (deftest let.6
  - [X] (deftest let.7
  - [X] (deftest let.9
  - [ ] (deftest let.11
  - [X] (deftest let.14
  - [ ] (deftest let.15
  - [X] (deftest let.16
  - [ ] (deftest let.17
  - [ ] (deftest let.17a
  - [X] (deftest let.18
  - [ ] (deftest let.19
  - [ ] (deftest let.20
  - [ ] (deftest let.21
**** or.lsp [85%]
  - [X] (deftest or.1
  - [X] (deftest or.2
  - [X] (deftest or.3
  - [X] (deftest or.4
  - [X] (deftest or.5 (or (values)))
  - [X] (deftest or.6
  - [X] (deftest or.7
  - [X] (deftest or.8
  - [X] (deftest or.9
  - [ ] (deftest or.10
  - [ ] (deftest or.11
  - [X] (deftest or.error.1
  - [X] (deftest or.error.2
  - [X] (deftest or.error.3
**** macrolet.lsp [0%]
  - [ ] (deftest macrolet.1
  - [ ] (deftest macrolet.2
  - [ ] (deftest macrolet.3
  - [ ] (deftest macrolet.4
  - [ ] (deftest macrolet.5
  - [ ] (deftest macrolet.6
  - [ ] (deftest macrolet.7
  - [ ] (deftest macrolet.8
  - [ ] (deftest macrolet.9
  - [ ] (deftest macrolet.10
  - [ ] (deftest macrolet.11
  - [ ] (deftest macrolet.12
  - [ ] (deftest macrolet.13
  - [ ] (deftest macrolet.14
  - [ ] (deftest macrolet.15
  - [ ] (deftest macrolet.16
  - [ ] (deftest macrolet.17
  - [ ] (deftest macrolet.18
  - [ ] (deftest macrolet.19
  - [ ] (deftest macrolet.20
  - [ ] (deftest macrolet.21
  - [ ] (deftest macrolet.22
  - [ ] (deftest macrolet.22a
  - [ ] (deftest macrolet.23
  - [ ] (deftest macrolet.24
  - [ ] (deftest macrolet.25
  - [ ] (deftest macrolet.26
  - [ ] (deftest macrolet.27
  - [ ] (deftest macrolet.28
  - [ ] (deftest macrolet.29
  - [ ] (deftest macrolet.30
  - [ ] (deftest macrolet.31
  - [ ] (deftest macrolet.32
  - [ ] (deftest macrolet.33
  - [ ] (deftest macrolet.34
  - [ ] (deftest macrolet.35
  - [ ] (deftest macrolet.36
  - [ ] (deftest macrolet.37
  - [ ] (deftest macrolet.38
  - [ ] (deftest macrolet.39
  - [ ] (deftest macrolet.40
  - [ ] (deftest macrolet.41
  - [ ] (deftest macrolet.42
  - [ ] (deftest macrolet.43
  - [ ] (deftest macrolet.44
  - [ ] (deftest macrolet.45
  - [ ] (deftest macrolet.46
  - [ ] (deftest macrolet.47
  - [ ] (deftest macrolet.48
  - [ ] (deftest macrolet.49
  - [ ] (deftest macrolet.50
  - [ ] (deftest macrolet.51
  - [ ] (deftest macrolet.52
**** ctypecase.lsp [21%]
  - [ ] (deftest ctypecase.1
  - [ ] (deftest ctypecase.2
  - [ ] (deftest ctypecase.3
  - [ ] (deftest ctypecase.4
  - [ ] (deftest ctypecase.5
  - [ ] (deftest ctypecase.6
  - [ ] (deftest ctypecase.7
  - [ ] (deftest ctypecase.8
  - [ ] (deftest ctypecase.9
  - [ ] (deftest ctypecase.10
  - [ ] (deftest ctypecase.11
  - [X] (deftest ctypecase.12
  - [ ] (deftest ctypecase.13
  - [ ] (deftest ctypecase.14
  - [ ] (deftest ctypecase.15
  - [ ] (deftest ctypecase.16
  - [X] (deftest ctypecase.error.1
  - [X] (deftest ctypecase.error.2
  - [X] (deftest ctypecase.error.3
**** psetf.lsp [0%]
  - [ ] (deftest psetf.order.1
  - [ ] (deftest psetf.order.2
  - [ ] (deftest psetf.1
  - [ ] (deftest psetf.2
  - [ ] (deftest psetf.3
  - [ ] (deftest psetf.4
  - [ ] (deftest psetf.5
  - [ ] (deftest psetf.6
  - [ ] (deftest psetf.7
  - [ ] (deftest psetf.8
  - [ ] (deftest psetf.9
  - [ ] (deftest psetf.10
  - [ ] (deftest psetf.11
  - [ ] (def-macro-test psetf.error.1 (psetf))
  - [ ] (deftest psetf.12
  - [ ] (deftest psetf.12a
  - [ ] (deftest psetf.13
  - [ ] (deftest psetf.13a
  - [ ] (deftest psetf.14
  - [ ] (deftest psetf.15
  - [ ] (deftest psetf.16
  - [ ] (deftest psetf.17
  - [ ] (deftest psetf.18
  - [ ] (deftest psetf.18a
  - [ ] (deftest psetf.19
  - [ ] (deftest psetf.20
  - [ ] (deftest psetf.21
  - [ ] (deftest psetf.22
  - [ ] (deftest psetf.23
  - [ ] (deftest psetf.24
  - [ ] (deftest psetf.25
  - [ ] (deftest psetf.26
  - [ ] (deftest psetf.27
  - [ ] (deftest psetf.28
  - [ ] (deftest psetf.29
  - [ ] (deftest psetf.30
  - [ ] (deftest psetf.31
  - [ ] (deftest psetf.32
  - [ ] (deftest psetf.33
  - [ ] (deftest psetf.34
  - [ ] (deftest psetf.35
  - [ ] (deftest psetf.36
  - [ ] (deftest psetf.37
  - [ ] (deftest psetf.38
  - [ ] (deftest psetf.39
  - [ ] (deftest psetf.40
  - [ ] (deftest psetf.41
**** fmakunbound.lsp [27%]
  - [ ] (deftest fmakunbound.1
  - [ ] (deftest fmakunbound.2
  - [ ] (deftest fmakunbound.3
  - [ ] (deftest fmakunbound.4
  - [ ] (deftest fmakunbound.error.1
  - [ ] (deftest fmakunbound.error.2
  - [ ] (deftest fmakunbound.error.3
  - [X] (deftest fmakunbound.error.4
  - [X] (deftest fmakunbound.error.5
  - [X] (deftest fmakunbound.error.6
  - [ ] (deftest fmakunbound.error.7
**** multiple-value-bind.lsp [41%]
  - [X] (deftest multiple-value-bind.1
  - [X] (deftest multiple-value-bind.2
  - [ ] (deftest multiple-value-bind.3
  - [ ] (deftest multiple-value-bind.4
  - [ ] (deftest multiple-value-bind.5
  - [ ] (deftest multiple-value-bind.6
  - [ ] (deftest multiple-value-bind.7
  - [ ] (deftest multiple-value-bind.8
  - [ ] (deftest multiple-value-bind.9
  - [X] (deftest multiple-value-bind.10
  - [ ] (deftest multiple-value-bind.11
  - [X] (deftest multiple-value-bind.12
  - [ ] (deftest multiple-value-bind.13
  - [ ] (deftest multiple-value-bind.14
  - [X] (deftest multiple-value-bind.error.1
  - [X] (deftest multiple-value-bind.error.2
  - [X] (deftest multiple-value-bind.error.3
**** labels.lsp [62%]
  - [X] (deftest labels.1
  - [X] (deftest labels.2
  - [X] (deftest labels.3
  - [X] (deftest labels.4
  - [X] (deftest labels.4a
  - [X] (deftest labels.5
  - [X] (deftest labels.6
  - [X] (deftest labels.7
  - [X] (deftest labels.7b
  - [X] (deftest labels.7c
  - [X] (deftest labels.7d
  - [ ] (deftest labels.8
  - [ ] (deftest labels.9
  - [ ] (deftest labels.10
  - [ ] (deftest labels.11
  - [X] (deftest labels.12
  - [X] (deftest labels.13
  - [X] (deftest labels.14
  - [X] (deftest labels.15
  - [X] (deftest labels.16
  - [ ] (deftest labels.17
  - [X] (deftest labels.18
  - [X] (deftest labels.19
  - [ ] (deftest labels.20
  - [X] (deftest labels.21
  - [X] (deftest labels.22
  - [X] (deftest labels.23
  - [ ] (deftest labels.24
  - [ ] (deftest labels.25
  - [ ] (deftest labels.26
  - [ ] (deftest labels.27
  - [X] (deftest labels.28
  - [ ] (deftest labels.29
  - [X] (deftest labels.30
  - [ ] (deftest labels.31
  - [ ] (deftest labels.32
  - [X] (deftest labels.33
  - [X] (deftest labels.34
  - [X] (deftest labels.35
  - [X] (deftest labels.36
  - [X] (deftest labels.37
  - [ ] (deftest labels.38
  - [X] (deftest labels.39
  - [ ] (deftest labels.40
  - [ ] (deftest labels.41
  - [ ] (deftest labels.42
  - [X] (deftest labels.43
  - [X] (deftest labels.44
  - [X] (deftest labels.45
  - [ ] (deftest labels.46
  - [X] (deftest labels.47
  - [ ] (deftest labels.48
  - [ ] (deftest labels.49
  - [X] (deftest labels.50
  - [X] (deftest labels.51
  - [ ] (deftest labels.52
**** ccase.lsp [12%]
  - [ ] (deftest ccase.1
  - [ ] (deftest ccase.2
  - [ ] (deftest ccase.3
  - [ ] (deftest ccase.4
  - [ ] (deftest ccase.5
  - [ ] (deftest ccase.6
  - [ ] (deftest ccase.7
  - [ ] (deftest ccase.8
  - [ ] (deftest ccase.9
  - [ ] (deftest ccase.10
  - [ ] (deftest ccase.11
  - [ ] (deftest ccase.12
  - [ ] (deftest ccase.13
  - [ ] (deftest ccase.14
  - [ ] (deftest ccase.15
  - [ ] (deftest ccase.16
  - [ ] (deftest ccase.17
  - [ ] (deftest ccase.19
  - [ ] (deftest ccase.20
  - [ ] (deftest ccase.21 (let ((x 1)) (ccase x (1 (values)) (2 'a))))
  - [ ] (deftest ccase.23 (let ((x 1)) (ccase x (1 (values 'a 'b 'c))))
  - [ ] (deftest ccase.25
  - [ ] (deftest ccase.26
  - [ ] (deftest ccase.27
  - [ ] (deftest ccase.28
  - [ ] (deftest ccase.29
  - [ ] (deftest ccase.30
  - [X] (deftest ccase.31
  - [ ] (deftest ccase.32
  - [ ] (deftest ccase.33
  - [X] (deftest ccase.error.1
  - [X] (deftest ccase.error.2
  - [X] (deftest ccase.error.3
**** if.lsp [57%]
  - [X] (deftest if.1
  - [X] (deftest if.2
  - [X] (deftest if.3 (if t (values) 'a))
  - [X] (deftest if.4
  - [X] (deftest if.5
  - [X] (deftest if.6
  - [X] (deftest if.7 (if nil 'a (values)))
  - [ ] (deftest if.8
  - [ ] (deftest if.9
  - [ ] (deftest if.10
  - [ ] (deftest if.11
  - [ ] (deftest if.12
  - [ ] (deftest if.13
  - [X] (deftest if.order.1
**** fboundp.lsp [47%]
  - [X] (deftest fboundp.1
  - [X] (deftest fboundp.2
  - [X] (deftest fboundp.3
  - [X] (deftest fboundp.4
  - [X] (deftest fboundp.5
  - [ ] (deftest fboundp.6
  - [ ] (deftest fboundp.7
  - [ ] (deftest fboundp.8
  - [X] (deftest fboundp.order.1
  - [ ] (deftest fboundp.error.1
  - [ ] (deftest fboundp.error.2
  - [ ] (deftest fboundp.error.3
  - [ ] (deftest fboundp.error.4
  - [ ] (deftest fboundp.error.5
  - [X] (deftest fboundp.error.6
  - [X] (deftest fboundp.error.7
  - [X] (deftest fboundp.error.8
  - [ ] (deftest fboundp.error.9
  - [ ] (deftest fboundp.error.10
**** get-setf-expansion.lsp [40%]
  - [X] (deftest get-setf-expansion.error.1
  - [X] (deftest get-setf-expansion.error.2
  - [ ] (deftest get-setf-expansion.1
  - [ ] (deftest get-setf-expansion.2
  - [ ] (deftest get-setf-expansion.3
**** compiled-function-p.lsp [66%]
  - [ ] (deftest compiled-function-p.1
  - [X] (deftest compiled-function-p.2
  - [ ] (deftest compiled-function-p.3
  - [X] (deftest compiled-function-p.order.1
  - [X] (deftest compiled-function-p.error.1
  - [X] (deftest compiled-function-p.error.2
**** values.lsp [60%]
  - [X] (deftest values.0
  - [X] (deftest values.1
  - [X] (deftest values.2
  - [X] (deftest values.3
  - [X] (deftest values.4
  - [X] (deftest values.10
  - [X] (deftest values.15
  - [X] (deftest values.19
  - [ ] (deftest values.20
  - [ ] (deftest values.21
  - [ ] (deftest values.A
  - [ ] (deftest values.B
  - [ ] (deftest values.C
  - [X] (deftest values.order.1
  - [ ] (deftest values.order.2
**** funcall.lsp [94%]
  - [X] (deftest funcall.1
  - [X] (deftest funcall.2
  - [X] (deftest funcall.3
  - [X] (deftest funcall.4
  - [X] (deftest funcall.5
  - [X] (deftest funcall.6
  - [X] (deftest funcall.7
  - [X] (deftest funcall.8
  - [X] (deftest funcall.9
  - [X] (deftest funcall.order.1
  - [X] (deftest funcall.order.2
  - [X] (deftest funcall.error.1
  - [X] (deftest funcall.error.2
  - [X] (deftest funcall.error.3
  - [X] (deftest funcall.error.4
  - [X] (deftest funcall.error.5
  - [X] (deftest funcall.error.6
  - [ ] (deftest funcall.error.7
**** prog1.lsp [75%]
  - [X] (deftest prog1.1
  - [X] (deftest prog1.2
  - [X] (deftest prog1.3
  - [X] (deftest prog1.4
  - [X] (deftest prog1.5
  - [X] (deftest prog1.6
  - [ ] (deftest prog1.7
  - [ ] (def-macro-test prog1.error.1 (prog1 nil))
**** psetq.lsp [53%]
  - [X] (deftest psetq.1
  - [X] (deftest psetq.2
  - [X] (deftest psetq.3
  - [ ] (deftest psetq.4
  - [ ] (deftest psetq.5
  - [X] (deftest psetq.6
  - [ ] (deftest psetq.7
  - [ ] (deftest psetq.8
  - [ ] (deftest psetq.9
  - [ ] (deftest psetq.10
  - [X] (deftest psetq.error.1
  - [X] (deftest psetq.error.2
  - [X] (deftest psetq.error.3
**** places.lsp [17%]
  - [X] (deftest setf.order.1
  - [X] (deftest setf.order.2
  - [X] (deftest incf.order.1
  - [X] (deftest decf.order.1
  - [X] (deftest setf-var
  - [ ] (deftest setf-values.1
  - [ ] (deftest setf-values.2
  - [ ] (deftest setf-values.3
  - [ ] (deftest setf-values.4
  - [ ] (deftest setf-values.5
  - [ ] (deftest setf-values.6
  - [X] (deftest setf-the.1
  - [X] (deftest setf-the.2
  - [ ] (deftest setf-apply.1
  - [ ] (deftest setf-apply.2
  - [ ] (deftest setf-apply.3
  - [ ] (deftest setf-apply.4
  - [ ] (deftest setf-expander.1
  - [ ] (deftest setf-macro.1
  - [ ] (deftest setf-macro.2
  - [ ] (deftest setf-macro.3
  - [ ] (deftest setf-macro.4
  - [ ] (deftest setf-symbol-macro.1
  - [ ] (deftest setf-symbol-macro.2
  - [ ] (deftest setf-symbol-macro.3
  - [ ] (deftest setq.1
  - [ ] (deftest setq.2
  - [ ] (deftest setq.3
  - [ ] (deftest setq.4
  - [ ] (deftest setq.5
  - [ ] (deftest setq.6
  - [ ] (deftest setq.7
  - [ ] (deftest setf.1
  - [ ] (deftest setf.2
  - [ ] (deftest setf.3
  - [ ] (deftest setf.4
  - [ ] (deftest setf.5
  - [ ] (deftest setf.6
  - [ ] (deftest setf.7
  - [ ] (deftest setf.8
**** catch.lsp [81%]
  - [X] (deftest catch.1
  - [X] (deftest catch.2
  - [X] (deftest catch.3
  - [X] (deftest catch.4
  - [X] (deftest catch.5
  - [X] (deftest catch.7
  - [X] (deftest catch.8
  - [X] (deftest catch.9
  - [X] (deftest catch.10
  - [X] (deftest catch.11
  - [X] (deftest catch.12
  - [X] (deftest catch.13
  - [ ] (deftest catch.14
  - [ ] (deftest catch.15
  - [ ] (deftest catch.16
  - [X] (deftest throw-error
**** destructuring-bind.lsp [7%]
  - [ ] (deftest destructuring-bind.1
  - [ ] (deftest destructuring-bind.2
  - [ ] (deftest destructuring-bind.3
  - [ ] (deftest destructuring-bind.4
  - [ ] (deftest destructuring-bind.5
  - [ ] (deftest destructuring-bind.6
  - [ ] (deftest destructuring-bind.7
  - [ ] (deftest destructuring-bind.7a
  - [ ] (deftest destructuring-bind.8
  - [ ] (deftest destructuring-bind.9
  - [ ] (deftest destructuring-bind.10
  - [ ] (deftest destructuring-bind.11
  - [ ] (deftest destructuring-bind.12
  - [ ] (deftest destructuring-bind.12a
  - [ ] (deftest destructuring-bind.13
  - [ ] (deftest destructuring-bind.14
  - [ ] (deftest destructuring-bind.15
  - [ ] (deftest destructuring-bind.16
  - [ ] (deftest destructuring-bind.17
  - [ ] (deftest destructuring-bind.17a
  - [ ] (deftest destructuring-bind.17c
  - [ ] (deftest destructuring-bind.18
  - [ ] (deftest destructuring-bind.19
  - [ ] (deftest destructuring-bind.20
  - [ ] (deftest destructuring-bind.21
  - [ ] (deftest destructuring-bind.22
  - [ ] (deftest destructuring-bind.23
  - [ ] (deftest destructuring-bind.24
  - [ ] (deftest destructuring-bind.25
  - [ ] (deftest destructuring-bind.26
  - [ ] (deftest destructuring-bind.27
  - [ ] (deftest destructuring-bind.28
  - [ ] (deftest destructuring-bind.29
  - [ ] (deftest destructuring-bind.30
  - [ ] (deftest destructuring-bind.31
  - [ ] (deftest destructuring-bind.error.1
  - [ ] (deftest destructuring-bind.error.2
  - [ ] (deftest destructuring-bind.error.3
  - [ ] (deftest destructuring-bind.error.4
  - [X] (deftest destructuring-bind.error.7
  - [X] (deftest destructuring-bind.error.8
  - [X] (deftest destructuring-bind.error.9
**** defvar.lsp [87%]
  - [X] (deftest defvar.1
  - [X] (deftest defvar.2
  - [X] (deftest defvar.3
  - [X] (deftest defvar.4
  - [ ] (deftest defvar.5
  - [X] (deftest defvar.error.1
  - [X] (deftest defvar.error.2
  - [X] (deftest defvar.error.3
**** values-list.lsp [77%]
  - [X] (deftest values-list.error.1
  - [X] (deftest values-list.error.2
  - [ ] (deftest values-list.error.3
  - [X] (deftest values-list.error.4
  - [X] (deftest values-list.1
  - [X] (deftest values-list.2
  - [X] (deftest values-list.3
  - [X] (deftest values-list.4
  - [ ] (deftest values-list.5
**** multiple-value-call.lsp [40%]
  - [X] (deftest multiple-value-call.1
  - [X] (deftest multiple-value-call.2
  - [ ] (deftest multiple-value-call.3
  - [ ] (deftest multiple-value-call.4
  - [ ] (deftest multiple-value-call.5
**** notevery.lsp [0%]
  - [ ] (deftest notevery.1
  - [ ] (deftest notevery.2
  - [ ] (deftest notevery.3
  - [ ] (deftest notevery.4
  - [ ] (deftest notevery.5
  - [ ] (deftest notevery.6
  - [ ] (deftest notevery.7
  - [ ] (deftest notevery.8
  - [ ] (deftest notevery.9
  - [ ] (deftest notevery.10
  - [ ] (deftest notevery.11
  - [ ] (deftest notevery.12
  - [ ] (deftest notevery.13
  - [ ] (deftest notevery.14
  - [ ] (deftest notevery.15
  - [ ] (deftest notevery.16
  - [ ] (deftest notevery.17
  - [ ] (deftest notevery.18
  - [ ] (deftest notevery.19
  - [ ] (deftest notevery.20
  - [ ] (deftest notevery.21
  - [ ] (deftest notevery.22
  - [ ] (deftest notevery.23
  - [ ] (deftest notevery.24
  - [ ] (deftest notevery.25
  - [ ] (deftest notevery.26
  - [ ] (deftest notevery.27
  - [ ] (deftest notevery.28
  - [ ] (deftest notevery.29
  - [ ] (deftest notevery.30
  - [ ] (deftest notevery.31
  - [ ] (deftest notevery.32
  - [ ] (deftest notevery.order.1
  - [ ] (deftest notevery.error.1
  - [ ] (deftest notevery.error.4
  - [ ] (deftest notevery.error.7
  - [ ] (deftest notevery.error.8
  - [ ] (deftest notevery.error.9
  - [ ] (deftest notevery.error.10
  - [ ] (deftest notevery.error.11
  - [ ] (deftest notevery.error.12
  - [ ] (deftest notevery.error.13
**** lambda-list-keywords.lsp [50%]
  - [X] (deftest lambda-list-keywords.1
  - [X] (deftest lambda-list-keywords.2
  - [ ] (deftest lambda-list-keywords.3
  - [ ] (deftest lambda-list-keywords.5
**** block.lsp [69%]
  - [X] (deftest block.1
  - [X] (deftest block.2
  - [ ] (deftest block.3
  - [X] (deftest block.4
  - [ ] (deftest block.5
  - [X] (deftest block.6
  - [X] (deftest block.7
  - [X] (deftest block.8
  - [X] (deftest block.9
  - [ ] (deftest block.10
  - [X] (deftest block.11
  - [ ] (deftest block.12
  - [X] (deftest return.error.1
**** return-from.lsp [66%]
  - [X] (deftest return-from.1
  - [X] (deftest return-from.2
  - [ ] (deftest return-from.3
**** return.lsp [83%]
  - [X] (deftest return.error.1
  - [X] (deftest return.error.2
  - [X] (deftest return.error.3
  - [X] (deftest return.1
  - [X] (deftest return.2
  - [ ] (deftest return.3
**** define-setf-expander.lsp [0%]
  - [ ] (def-macro-test define-setf-expander.error.1
  - [ ] (deftest define-setf-expander.1
  - [ ] (deftest define-setf-expander.2
  - [ ] (deftest define-setf-expander.3
  - [ ] (deftest define-setf-expander.4
  - [ ] (deftest define-setf-expander.5
  - [ ] (deftest define-setf-expander.6
  - [ ] (deftest define-setf-expander.7
**** every.lsp [13%]
  - [X] (deftest every.1
  - [X] (deftest every.2
  - [X] (deftest every.3
  - [X] (deftest every.4
  - [ ] (deftest every.5
  - [X] (deftest every.6
  - [X] (deftest every.7
  - [ ] (deftest every.8
  - [ ] (deftest every.9
  - [ ] (deftest every.10
  - [ ] (deftest every.11
  - [ ] (deftest every.12
  - [ ] (deftest every.13
  - [ ] (deftest every.14
  - [ ] (deftest every.15
  - [ ] (deftest every.16
  - [ ] (deftest every.17
  - [ ] (deftest every.18
  - [ ] (deftest every.19
  - [ ] (deftest every.20
  - [ ] (deftest every.21
  - [ ] (deftest every.22
  - [ ] (deftest every.23
  - [ ] (deftest every.24
  - [ ] (deftest every.25
  - [ ] (deftest every.26
  - [ ] (deftest every.27
  - [ ] (deftest every.28
  - [ ] (deftest every.29
  - [ ] (deftest every.30
  - [ ] (deftest every.31
  - [ ] (deftest every.32
  - [ ] (deftest every.order.1
  - [ ] (deftest every.order.2
  - [ ] (deftest every.error.1
  - [ ] (deftest every.error.2
  - [ ] (deftest every.error.3
  - [ ] (deftest every.error.8
  - [ ] (deftest every.error.9
  - [ ] (deftest every.error.10
  - [ ] (deftest every.error.11
  - [ ] (deftest every.error.12
  - [ ] (deftest every.error.13
  - [ ] (deftest every.error.14
**** functionp.lsp [73%]
  - [X] (deftest functionp.1
  - [X] (deftest functionp.2
  - [X] (deftest functionp.3
  - [ ] (deftest functionp.4
  - [X] (deftest functionp.5
  - [X] (deftest functionp.6
  - [ ] (deftest functionp.7
  - [X] (deftest functionp.8
  - [ ] (deftest functionp.9
  - [ ] (deftest functionp.10
  - [X] (deftest functionp.11
  - [X] (deftest functionp.12
  - [X] (deftest functionp.order.1
  - [X] (deftest functionp.error.1
  - [X] (deftest functionp.error.2
**** function-lambda-expression.lsp [33%]
  - [ ] (deftest function-lambda-expression.1
  - [ ] (deftest function-lambda-expression.2
  - [ ] (deftest function-lambda-expression.3
  - [ ] (deftest function-lambda-expression.order.1
  - [X] (deftest function-lambda-expression.error.1
  - [X] (deftest function-lambda-expression.error.2
**** ecase.lsp [64%]
  - [X] (deftest ecase.1
  - [ ] (deftest ecase.2
  - [ ] (deftest ecase.3
  - [ ] (deftest ecase.4
  - [ ] (deftest ecase.5
  - [X] (deftest ecase.6
  - [X] (deftest ecase.7
  - [X] (deftest ecase.8
  - [ ] (deftest ecase.9
  - [X] (deftest ecase.10
  - [X] (deftest ecase.11
  - [ ] (deftest ecase.12
  - [X] (deftest ecase.13
  - [X] (deftest ecase.14
  - [ ] (deftest ecase.15
  - [ ] (deftest ecase.16
  - [ ] (deftest ecase.17
  - [ ] (deftest ecase.18
  - [ ] (deftest ecase.19
  - [X] (deftest ecase.20
  - [X] (deftest ecase.21 (ecase 1 (1 (values)) (2 'a)))
  - [X] (deftest ecase.23 (ecase 1 (1 (values 'a 'b 'c)))
  - [X] (deftest ecase.25
  - [X] (deftest ecase.26
  - [X] (deftest ecase.27
  - [X] (deftest ecase.28
  - [X] (deftest ecase.29
  - [X] (deftest ecase.31
  - [X] (deftest ecase.32
  - [X] (deftest ecase.33
  - [ ] (deftest ecase.34
  - [X] (deftest ecase.error.1
  - [X] (deftest ecase.error.2
  - [X] (deftest ecase.error.3
**** tagbody.lsp [66%]
  - [X] (deftest tagbody.1
  - [X] (deftest tagbody.2
  - [X] (deftest tagbody.3
  - [X] (deftest tagbody.4
  - [X] (deftest tagbody.5
  - [X] (deftest tagbody.6
  - [ ] (deftest tagbody.7
  - [ ] (deftest tagbody.8
  - [X] (deftest tagbody.9
  - [X] (deftest tagbody.10
  - [X] (deftest tagbody.11
  - [X] (deftest tagbody.12
  - [X] (deftest tagbody.13
  - [X] (deftest tagbody.14
  - [ ] (deftest tagbody.15
  - [ ] (deftest tagbody.16
  - [ ] (deftest tagbody.17
  - [ ] (deftest tagbody.18
**** progn.lsp [80%]
  - [X] (deftest progn.1
  - [X] (deftest progn.2
  - [X] (deftest progn.3
  - [X] (deftest progn.4
  - [X] (deftest progn.5 (progn (values)))
  - [X] (deftest progn.6
  - [X] (deftest progn.7
  - [X] (deftest progn.8
  - [ ] (deftest progn.9
  - [ ] (deftest progn.10
**** function.lsp [41%]
  - [ ] (deftest function.1
  - [ ] (deftest function.2
  - [ ] (deftest function.3
  - [ ] (deftest function.4
  - [ ] (deftest function.5
  - [ ] (deftest function.6
  - [ ] (deftest function.7
  - [ ] (deftest function.8
  - [ ] (deftest function.9
  - [ ] (deftest function.10
  - [ ] (deftest function.11
  - [ ] (deftest function.12
  - [ ] (deftest function.13
  - [X] (deftest function.14
  - [X] (deftest function.15
  - [X] (deftest function.16
  - [X] (deftest function.17
  - [X] (deftest function.18
  - [X] (deftest function.19
  - [ ] (deftest function.20
  - [X] (deftest function.21
  - [X] (deftest function.22
  - [X] (deftest function.23
  - [X] (deftest function.24
**** data-and-control-flow.lsp [100%]
  - [X] (deftest dcf-funs
  - [X] (deftest dcf-macros
**** complement.lsp [38%]
  - [ ] (deftest complement.1
  - [ ] (deftest complement.2
  - [ ] (deftest complement.3
  - [ ] (deftest complement.4
  - [ ] (deftest complement.5
  - [ ] (deftest complement.6
  - [ ] (deftest complement.7
  - [ ] (deftest complement.8
  - [ ] (deftest complement.9
  - [ ] (deftest complement.10
  - [ ] (deftest complement.order.1
  - [X] (deftest complement.error.1
  - [X] (deftest complement.error.2
  - [X] (deftest complement.error.3
  - [X] (deftest complement.error.4
  - [X] (deftest complement.error.5
  - [X] (deftest complement.error.6
  - [X] (deftest complement.error.7
**** when.lsp [78%]
  - [X] (deftest when.1
  - [X] (deftest when.2
  - [X] (deftest when.3 (when t (values)))
  - [X] (deftest when.4
  - [X] (deftest when.5
  - [X] (deftest when.6
  - [X] (deftest when.7
  - [X] (deftest when.8
  - [ ] (deftest when.9
  - [ ] (deftest when.10
  - [ ] (deftest when.11
  - [X] (deftest when.error.1
  - [X] (deftest when.error.2
  - [X] (deftest when.error.3
**** and.lsp [86%]
  - [ ] (deftest and.1
  - [X] (deftest and.2
  - [X] (deftest and.3
  - [X] (deftest and.4
  - [X] (deftest and.5 (and (values)))
  - [X] (deftest and.6
  - [X] (deftest and.7
  - [X] (deftest and.8
  - [X] (deftest and.9
  - [ ] (deftest and.10
  - [X] (deftest and.order.1
  - [X] (deftest and.order.2
  - [X] (deftest and.error.1
  - [X] (deftest and.error.2
  - [X] (deftest and.error.3
**** apply.lsp [69%]
  - [X] (deftest apply.error.1
  - [X] (deftest apply.error.2
  - [X] (deftest apply.error.3
  - [X] (deftest apply.error.4
  - [X] (deftest apply.1
  - [X] (deftest apply.2
  - [X] (deftest apply.3
  - [ ] (deftest apply.4
  - [X] (deftest apply.5
  - [ ] (deftest apply.6
  - [ ] (deftest apply.7
  - [ ] (deftest apply.8
  - [X] (deftest apply.order.1
**** prog2.lsp [0%]
  - [ ] (deftest prog2.1
  - [ ] (deftest prog2.2
  - [ ] (deftest prog2.3
  - [ ] (deftest prog2.4
  - [ ] (deftest prog2.5
  - [ ] (deftest prog2.6
  - [ ] (deftest prog2.7
  - [ ] (deftest prog2.8
  - [ ] (def-macro-test prog2.error.1 (prog2 nil nil))
**** define-modify-macro.lsp [0%]
  - [ ] (deftest define-modify-macro.1
  - [ ] (deftest define-modify-macro.2
  - [ ] (deftest define-modify-macro.3
  - [ ] (deftest define-modify-macro.4
  - [ ] (def-macro-test define-modify-macro.error.1
  - [ ] (deftest define-modify-macro.documentation.1
  - [ ] (deftest define-modify-macro.documentation.2
**** flet.lsp [50%]
  - [X] (deftest flet.1
  - [X] (deftest flet.2
  - [X] (deftest flet.3
  - [X] (deftest flet.4
  - [X] (deftest flet.4a
  - [X] (deftest flet.5
  - [X] (deftest flet.6
  - [X] (deftest flet.7
  - [ ] (deftest flet.8
  - [ ] (deftest flet.9
  - [ ] (deftest flet.10
  - [ ] (deftest flet.11
  - [X] (deftest flet.12
  - [X] (deftest flet.13
  - [X] (deftest flet.14
  - [X] (deftest flet.15
  - [X] (deftest flet.16
  - [ ] (deftest flet.17
  - [X] (deftest flet.18
  - [X] (deftest flet.19
  - [ ] (deftest flet.20
  - [X] (deftest flet.21
  - [ ] (deftest flet.22
  - [ ] (deftest flet.23
  - [ ] (deftest flet.24
  - [ ] (deftest flet.25
  - [ ] (deftest flet.26
  - [ ] (deftest flet.27
  - [ ] (deftest flet.28
  - [ ] (deftest flet.29
  - [ ] (deftest flet.30
  - [X] (deftest flet.31
  - [X] (deftest flet.32
  - [X] (deftest flet.33
  - [X] (deftest flet.34
  - [ ] (deftest flet.35
  - [ ] (deftest flet.36
  - [ ] (deftest flet.37
  - [ ] (deftest flet.38
  - [ ] (deftest flet.39
  - [ ] (deftest flet.40
  - [X] (deftest flet.45
  - [X] (deftest flet.46
  - [X] (deftest flet.47
  - [X] (deftest flet.48
  - [ ] (deftest flet.49
  - [ ] (deftest flet.50
  - [ ] (deftest flet.51
  - [ ] (deftest flet.52
  - [X] (deftest flet.53
  - [ ] (deftest flet.54
  - [X] (deftest flet.55
  - [ ] (deftest flet.56
  - [ ] (deftest flet.57
  - [X] (deftest flet.58
  - [X] (deftest flet.59
  - [X] (deftest flet.60
  - [X] (deftest flet.61
  - [ ] (deftest flet.62
  - [ ] (deftest flet.63
  - [X] (deftest flet.64
  - [X] (deftest flet.65
  - [X] (deftest flet.66
  - [ ] (deftest flet.67
  - [X] (deftest flet.68
  - [ ] (deftest flet.69
  - [ ] (deftest flet.70
  - [ ] (deftest flet.71
  - [X] (deftest flet.72
  - [X] (deftest flet.73
  - [ ] (deftest flet.74
**** some.lsp [13%]
  - [X] (deftest some.1
  - [X] (deftest some.2
  - [X] (deftest some.3
  - [X] (deftest some.4
  - [ ] (deftest some.5
  - [X] (deftest some.6
  - [X] (deftest some.7
  - [ ] (deftest some.8
  - [ ] (deftest some.9
  - [ ] (deftest some.10
  - [ ] (deftest some.11
  - [ ] (deftest some.12
  - [ ] (deftest some.13
  - [ ] (deftest some.14
  - [ ] (deftest some.15
  - [ ] (deftest some.16
  - [ ] (deftest some.17
  - [ ] (deftest some.18
  - [ ] (deftest some.19
  - [ ] (deftest some.20
  - [ ] (deftest some.21
  - [ ] (deftest some.22
  - [ ] (deftest some.23
  - [ ] (deftest some.24
  - [ ] (deftest some.25
  - [ ] (deftest some.26
  - [ ] (deftest some.27
  - [ ] (deftest some.28
  - [ ] (deftest some.29
  - [ ] (deftest some.30
  - [ ] (deftest some.31
  - [ ] (deftest some.32
  - [ ] (deftest some.order.1
  - [ ] (deftest some.order.2
  - [ ] (deftest some.error.1
  - [ ] (deftest some.error.4
  - [ ] (deftest some.error.7
  - [ ] (deftest some.error.8
  - [ ] (deftest some.error.9
  - [ ] (deftest some.error.10
  - [ ] (deftest some.error.11
  - [ ] (deftest some.error.12
  - [ ] (deftest some.error.13
  - [ ] (deftest some.error.14
**** letstar.lsp [43%]
  - [X] (deftest let*.1
  - [X] (deftest let*.2
  - [ ] (deftest let*.3
  - [X] (deftest let*.4
  - [X] (deftest let*.5
  - [X] (deftest let*.6
  - [X] (deftest let*.7
  - [ ] (deftest let*.8
  - [X] (deftest let*.9
  - [ ] (deftest let*.10
  - [ ] (deftest let*.11
  - [ ] (deftest let*.12
  - [X] (deftest let*.14
  - [ ] (deftest let*.15
  - [X] (deftest let*.16
  - [ ] (deftest let*.17
  - [ ] (deftest let*.17a
  - [ ] (deftest let*.18
  - [X] (deftest let*.19
  - [ ] (deftest let*.20
  - [ ] (deftest let*.21
  - [ ] (deftest let*.22
  - [ ] (deftest let*.23
*** pathnames [0%]
**** pathnames.lsp [0%]
  - [ ] (deftest pathnames-print-and-read-properly
**** pathname-host.lsp [16%]
  - [ ] (deftest pathname-host.1
  - [ ] (deftest pathname-host.2
  - [ ] (deftest pathname-host.3
  - [ ] (deftest pathname-host.4
  - [ ] (deftest pathname-host.5
  - [ ] (deftest pathname-host.6
  - [ ] (deftest pathname-host.7
  - [ ] (deftest pathname-host.8
  - [ ] (deftest pathname-host.9
  - [X] (deftest pathname-host.error.1
  - [ ] (deftest pathname-host.error.2
  - [X] (deftest pathname-host.error.3
**** directory-namestring.lsp [60%]
  - [X] (deftest directory-namestring.1
  - [ ] (deftest directory-namestring.2
  - [ ] (deftest directory-namestring.3
  - [X] (deftest directory-namestring.error.1
  - [X] (deftest directory-namestring.error.2
**** enough-namestring.lsp [22%]
  - [ ] (deftest enough-namestring.1
  - [ ] (deftest enough-namestring.2
  - [ ] (deftest enough-namestring.3
  - [ ] (deftest enough-namestring.4
  - [ ] (deftest enough-namestring.5
  - [ ] (deftest enough-namestring.6
  - [ ] (deftest enough-namestring.7
  - [X] (deftest enough-namestring.error.1
  - [X] (deftest enough-namestring.error.2
**** translate-logical-pathname.lsp [20%]
  - [ ] (deftest translate-logical-pathname.1
  - [ ] (deftest translate-logical-pathname.2
  - [ ] (deftest translate-logical-pathname.3
  - [ ] (deftest translate-logical-pathname.4
  - [X] (deftest translate-logical-pathname.error.1
**** pathname-type.lsp [10%]
  - [ ] (deftest pathname-type.1
  - [ ] (deftest pathname-type.2
  - [ ] (deftest pathname-type.3
  - [ ] (deftest pathname-type.4
  - [ ] (deftest pathname-type.5
  - [ ] (deftest pathname-type.6
  - [ ] (deftest pathname-type.7
  - [ ] (deftest pathname-type.8
  - [X] (deftest pathname-type.error.1
  - [ ] (deftest pathname-type.error.2
**** host-namestring.lsp [40%]
  - [ ] (deftest host-namestring.1
  - [ ] (deftest host-namestring.2
  - [ ] (deftest host-namestring.3
  - [X] (deftest host-namestring.error.1
  - [X] (deftest host-namestring.error.2
**** pathname-name.lsp [10%]
  - [ ] (deftest pathname-name.1
  - [ ] (deftest pathname-name.2
  - [ ] (deftest pathname-name.3
  - [ ] (deftest pathname-name.4
  - [ ] (deftest pathname-name.5
  - [ ] (deftest pathname-name.6
  - [ ] (deftest pathname-name.7
  - [ ] (deftest pathname-name.8
  - [X] (deftest pathname-name.error.1
  - [ ] (deftest pathname-name.error.2
**** file-namestring.lsp [40%]
  - [ ] (deftest file-namestring.1
  - [ ] (deftest file-namestring.2
  - [ ] (deftest file-namestring.3
  - [X] (deftest file-namestring.error.1
  - [X] (deftest file-namestring.error.2
**** pathname.lsp [69%]
  - [ ] (deftest pathname.1
  - [X] (deftest pathname.2
  - [ ] (deftest pathname.3
  - [ ] (deftest pathname.4
  - [ ] (deftest pathname.5
  - [X] (deftest pathname.6
  - [X] (deftest pathname.7
  - [X] (deftest pathname.8
  - [X] (deftest pathname.9
  - [X] (deftest pathname.10
  - [X] (deftest pathname.11
  - [X] (deftest pathname.error.1
  - [X] (deftest pathname.error.2
**** logical-pathname-translations.lsp [0%]
**** namestring.lsp [50%]
  - [X] (deftest namestring.1
  - [ ] (deftest namestring.2
  - [ ] (deftest namestring.3
  - [ ] (deftest namestring.4
  - [X] (deftest namestring.error.1
  - [X] (deftest namestring.error.2
**** pathname-match-p.lsp [20%]
  - [ ] (deftest pathname-match-p.1
  - [ ] (deftest pathname-match-p.2
  - [ ] (deftest pathname-match-p.3
  - [ ] (deftest pathname-match-p.4
  - [ ] (deftest pathname-match-p.5
  - [ ] (deftest pathname-match-p.6
  - [ ] (deftest pathname-match-p.7
  - [ ] (deftest pathname-match-p.8
  - [X] (deftest pathname-match-p.error.1
  - [X] (deftest pathname-match-p.error.2
  - [X] (deftest pathname-match-p.error.3
  - [ ] (deftest pathname-match-p.error.4
  - [ ] (deftest pathname-match-p.error.5
  - [ ] (deftest pathname-match-p.error.6
  - [ ] (deftest pathname-match-p.error.7
**** merge-pathnames.lsp [42%]
  - [ ] (deftest merge-pathnames.1
  - [X] (deftest merge-pathnames.2
  - [X] (deftest merge-pathnames.3
  - [X] (deftest merge-pathnames.4
  - [ ] (deftest merge-pathnames.5
  - [ ] (deftest merge-pathnames.6
  - [ ] (deftest merge-pathnames.7
**** pathname-version.lsp [33%]
  - [ ] (deftest pathname-version.1
  - [ ] (deftest pathname-version.2
  - [ ] (deftest pathname-version.3
  - [X] (deftest pathname-version.error.1
  - [X] (deftest pathname-version.error.2
  - [ ] (deftest pathname-version.error.3
**** logical-pathname.lsp [61%]
  - [ ] (deftest logical-pathname.1
  - [ ] (deftest logical-pathname.2
  - [ ] (deftest logical-pathname.3
  - [ ] (deftest logical-pathname.error.1
  - [X] (deftest logical-pathname.error.2
  - [X] (deftest logical-pathname.error.3
  - [X] (deftest logical-pathname.error.4
  - [X] (deftest logical-pathname.error.5
  - [X] (deftest logical-pathname.error.6
  - [X] (deftest logical-pathname.error.7
  - [X] (deftest logical-pathname.error.8
  - [X] (deftest logical-pathname.error.9
  - [ ] (deftest logical-pathname.error.10
**** parse-namestring.lsp [100%]
  - [X] (deftest parse-namestring.1
  - [X] (deftest parse-namestring.2
  - [X] (deftest parse-namestring.3
  - [X] (deftest parse-namestring.4
  - [X] (deftest parse-namestring.error.1
  - [X] (deftest parse-name-string.error.2
  - [X] (deftest parse-name-string.error.3
**** pathnamep.lsp [50%]
  - [ ] (deftest pathnamep.1
  - [ ] (deftest pathnamep.2
  - [ ] (deftest pathnamep.3
  - [X] (deftest pathnamep.error.1
  - [X] (deftest pathnamep.error.2
  - [X] (deftest pathnamep.error.3
**** wild-pathname-p.lsp [5%]
  - [ ] (deftest wild-pathname-p.1
  - [ ] (deftest wild-pathname-p.2
  - [ ] (deftest wild-pathname-p.3
  - [ ] (deftest wild-pathname-p.4
  - [ ] (deftest wild-pathname-p.5
  - [ ] (deftest wild-pathname-p.6
  - [ ] (deftest wild-pathname-p.7
  - [ ] (deftest wild-pathname-p.8
  - [ ] (deftest wild-pathname-p.9
  - [ ] (deftest wild-pathname-p.10
  - [ ] (deftest wild-pathname-p.11
  - [ ] (deftest wild-pathname-p.12
  - [ ] (deftest wild-pathname-p.13
  - [ ] (deftest wild-pathname-p.14
  - [ ] (deftest wild-pathname-p.15
  - [ ] (deftest wild-pathname-p.16
  - [ ] (deftest wild-pathname-p.17
  - [ ] (deftest wild-pathname-p.18
  - [ ] (deftest wild-pathname-p.19
  - [ ] (deftest wild-pathname-p.20
  - [ ] (deftest wild-pathname-p.21
  - [ ] (deftest wild-pathname-p.22
  - [ ] (deftest wild-pathname-p.24
  - [ ] (deftest wild-pathname-p.25
  - [ ] (deftest wild-pathname-p.26
  - [ ] (deftest wild-pathname-p.27
  - [ ] (deftest wild-pathname-p.28
  - [ ] (deftest wild-pathname-p.29
  - [ ] (deftest wild-pathname-p.30
  - [ ] (deftest wild-pathname-p.31
  - [ ] (deftest wild-pathname-p.32
  - [X] (deftest wild-pathname-p.error.1
  - [X] (deftest wild-pathname-p.error.2
  - [ ] (deftest wild-pathname-p.error.3
  - [ ] (deftest wild-pathname-p.error.4
**** load-logical-pathname-translations.lsp [50%]
  - [ ] (deftest load-logical-pathname-translations.1
  - [ ] (deftest load-logical-pathname-translations.error.1
  - [X] (deftest load-logical-pathname-translations.error.2
  - [X] (deftest load-logical-pathname-translations.error.3
**** pathname-directory.lsp [10%]
  - [ ] (deftest pathname-directory.1
  - [ ] (deftest pathname-directory.2
  - [ ] (deftest pathname-directory.3
  - [ ] (deftest pathname-directory.4
  - [ ] (deftest pathname-directory.5
  - [ ] (deftest pathname-directory.6
  - [ ] (deftest pathname-directory.7
  - [ ] (deftest pathname-directory.8
  - [X] (deftest pathname-directory.error.1
  - [ ] (deftest pathname-directory.error.2
**** pathname-device.lsp [10%]
  - [ ] (deftest pathname-device.1
  - [ ] (deftest pathname-device.2
  - [ ] (deftest pathname-device.3
  - [ ] (deftest pathname-device.4
  - [ ] (deftest pathname-device.5
  - [ ] (deftest pathname-device.6
  - [ ] (deftest pathname-device.7
  - [ ] (deftest pathname-device.8
  - [X] (deftest pathname-device.error.1
  - [ ] (deftest pathname-device.error.2
**** make-pathname.lsp [21%]
  - [ ] (deftest make-pathname.1
  - [ ] (deftest make-pathname.2
  - [ ] (deftest make-pathname.2a
  - [ ] (deftest make-pathname.3
  - [ ] (deftest make-pathname.3a
  - [ ] (deftest make-pathname.4
  - [ ] (deftest make-pathname.5
  - [ ] (deftest make-pathname.6
  - [ ] (deftest make-pathname.7
  - [ ] (deftest make-pathname.8
  - [ ] (deftest make-pathname.9
  - [ ] (deftest make-pathname.10
  - [ ] (deftest make-pathname.11
  - [ ] (deftest make-pathname.12
  - [ ] (deftest make-pathname.13
  - [ ] (deftest make-pathname.14
  - [ ] (deftest make-pathname.rebuild
  - [X] (deftest make-pathname-error-absolute-up
  - [X] (deftest make-pathname-error-absolute-back
  - [ ] (deftest make-pathname-error-absolute-wild-inferiors-up
  - [X] (deftest make-pathname-error-relative-wild-inferiors-up
  - [X] (deftest make-pathname-error-absolute-wild-inferiors-back
  - [X] (deftest make-pathname-error-relative-wild-inferiors-back
*** system-construction [0%]
**** load-file.lsp [0%]
  - [ ] (deftest load.1
  - [ ] (deftest load.2
  - [ ] (deftest load.3
  - [ ] (deftest load.4
  - [ ] (deftest load.5
  - [ ] (deftest load.6
  - [ ] (deftest load.7
  - [ ] (deftest load.8
  - [ ] (deftest load.9
  - [ ] (deftest load.10
  - [ ] (deftest load.11
  - [ ] (deftest load.12
  - [ ] (deftest load.13
  - [ ] (deftest load.14
  - [ ] (deftest load.15
  - [ ] (deftest load.15a
  - [ ] (deftest load.16
  - [ ] (deftest load.16a
  - [ ] (deftest load.17
  - [ ] (deftest load.18
  - [ ] (deftest load.19
  - [ ] (deftest load-pathname.1
  - [ ] (deftest load-truename.1
  - [ ] (deftest load-print.1
  - [ ] (deftest load.error.1
  - [ ] (deftest load.error.2
  - [ ] (deftest load.error.3
**** modules.lsp [0%]
  - [ ] (deftest modules.1
  - [ ] (deftest modules.2
  - [ ] (deftest modules.3
  - [ ] (deftest modules.4
  - [ ] (deftest modules.5
  - [ ] (deftest modules.6
  - [ ] (deftest modules.7
  - [ ] (deftest modules.8
  - [ ] (deftest modules.9
  - [ ] (deftest modules.10
  - [ ] (deftest modules.11
  - [ ] (deftest modules.12
  - [ ] (deftest modules.13
**** compile-file.lsp [0%]
  - [ ] (deftest compile-file.1
  - [ ] (deftest compile-file.2
  - [ ] (deftest compile-file.2a
  - [ ] (deftest compile-file.3
  - [ ] (deftest compile-file.4
  - [ ] (deftest compile-file.5
  - [ ] (deftest compile-file.6
  - [ ] (deftest compile-file.6a
  - [ ] (deftest compile-file.7
  - [ ] (deftest compile-file.8
  - [ ] (deftest compile-file.9
  - [ ] (deftest compile-file.10
  - [ ] (deftest compile-file.11
  - [ ] (deftest compile-file.12
  - [ ] (deftest compile-file.13
  - [ ] (deftest compile-file.14
  - [ ] (deftest compile-file.15
  - [ ] (deftest compile-file.16
  - [ ] (deftest compile-file.17
  - [ ] (deftest compile-file.18
  - [ ] (deftest compile-file.19
  - [ ] (deftest compile-file.20
  - [ ] (deftest compile-file-pathname.1
  - [ ] (deftest compile-file-truename.1
  - [ ] (deftest compile-file.error.1
  - [ ] (deftest compile-file.error.2
**** with-compilation-unit.lsp [0%]
  - [ ] (deftest with-compilation-unit.1
  - [ ] (deftest with-compilation-unit.2
  - [ ] (deftest with-compilation-unit.3
  - [ ] (deftest with-compilation-unit.4
  - [ ] (deftest with-compilation-unit.5
  - [ ] (deftest with-compilation-unit.6
  - [ ] (deftest with-compilation-unit.7
**** features.lsp [0%]
  - [ ] (deftest features.1
  - [ ] (deftest features.2
  - [ ] (deftest features.3
  - [ ] (deftest features.4
*** printer [0%]
**** pprint-newline.lsp [0%]
  - [ ] (def-pprint-test pprint-newline.1
  - [ ] (def-pprint-test pprint-newline.2
  - [ ] (def-pprint-test pprint-newline.3
  - [ ] (def-ppblock-test pprint-newline.linear.1
  - [ ] (def-ppblock-test pprint-newline.linear.2
  - [ ] (def-ppblock-test pprint-newline.linear.3
  - [ ] (def-ppblock-test pprint-newline.linear.4
  - [ ] (def-ppblock-test pprint-newline.linear.5
  - [ ] (def-ppblock-test pprint-newline.linear.6
  - [ ] (def-ppblock-test pprint-newline.linear.7
  - [ ] (def-ppblock-test pprint-newline.linear.8
  - [ ] (def-ppblock-test pprint-newline.linear.9
  - [ ] (deftest pprint-newline.linear.10
  - [ ] (def-ppblock-test pprint-newline.miser.1
  - [ ] (def-ppblock-test pprint-newline.miser.2
  - [ ] (def-ppblock-test pprint-newline.miser.3
  - [ ] (def-ppblock-test pprint-newline.miser.4
  - [ ] (def-ppblock-test pprint-newline.miser.5
  - [ ] (def-ppblock-test pprint-newline.miser.6
  - [ ] (def-ppblock-test pprint-newline.miser.7
  - [ ] (def-ppblock-test pprint-newline.miser.8
  - [ ] (def-ppblock-test pprint-newline.miser.9
  - [ ] (def-ppblock-test pprint-newline.miser.10
  - [ ] (def-ppblock-test pprint-newline.miser.11
  - [ ] (def-ppblock-test pprint-newline.miser.12
  - [ ] (deftest pprint-newline.miser.13
  - [ ] (def-ppblock-test pprint-newline.fill.1
  - [ ] (def-ppblock-test pprint-newline.fill.2
  - [ ] (def-ppblock-test pprint-newline.fill.3
  - [ ] (def-ppblock-test pprint-newline.fill.4
  - [ ] (def-ppblock-test pprint-newline.fill.5
  - [ ] (def-ppblock-test pprint-newline.fill.6
  - [ ] (def-ppblock-test pprint-newline.fill.7
  - [ ] (def-ppblock-test pprint-newline.fill.8
  - [ ] (deftest pprint-newline.fill.9
  - [ ] (deftest pprint-newline.fill.10
  - [ ] (def-ppblock-test pprint-newline.mandatory.1
  - [ ] (def-ppblock-test pprint-newline.mandatory.2
  - [ ] (def-ppblock-test pprint-newline.mandatory.3
  - [ ] (def-ppblock-test pprint-newline.mandatory.4
  - [ ] (def-ppblock-test pprint-newline.mandatory.5
  - [ ] (deftest pprint-newline.mandatory.6
  - [ ] (deftest pprint-newline.error.1
  - [ ] (deftest pprint-newline.error.1-unsafe
  - [ ] (deftest pprint-newline.error.2
  - [ ] (deftest pprint-newline.error.3
**** pprint-fill.lsp [0%]
  - [ ] (deftest pprint-fill.1
  - [ ] (deftest pprint-fill.2
  - [ ] (def-pprint-fill-test pprint-fill.3 ('(|A|)) "(A)")
  - [ ] (def-pprint-fill-test pprint-fill.4 ('(|A|) t) "(A)")
  - [ ] (def-pprint-fill-test pprint-fill.5 ('(|A|) nil) "A")
  - [ ] (def-pprint-fill-test pprint-fill.6 ('(1 2 3 4 5)) "(1 2 3 4 5)")
  - [ ] (def-pprint-fill-test pprint-fill.7 ('((1) (2) #(3) "abc" 5) nil) "(1) (2) #(3) \"abc\" 5")
  - [ ] (def-pprint-fill-test pprint-fill.8 ('(1 2 3 4 5) t nil) "(1 2 3 4 5)")
  - [ ] (def-pprint-fill-test pprint-fill.9 ('(1 2 3 4 5) nil t) "1 2 3 4 5")
  - [ ] (deftest pprint-fill.10
  - [ ] (deftest pprint-fill.11
  - [ ] (deftest pprint-fill.12
  - [ ] (deftest pprint-fill.13
  - [ ] (def-pprint-fill-test pprint-fill.14 ((let ((x (list '|A|))) (list x x)))
  - [ ] (def-pprint-fill-test pprint-fill.15 ((let ((x (list '|A|))) (setf (cdr x) x) x))
  - [ ] (deftest pprint-fill.return-values.1
  - [ ] (deftest pprint-fill.return-values.2
  - [ ] (deftest pprint-fill.error.1
  - [ ] (deftest pprint-fill.error.2
  - [ ] (deftest pprint-fill.error.3
**** print-floats.lsp [0%]
  - [ ] (deftest print.short-float.1
  - [ ] (deftest print.short-float.2
  - [ ] (deftest print.short-float.3
  - [ ] (deftest print.short-float.4
  - [ ] (deftest print.short-float.random
  - [ ] (deftest print.single-float.1
  - [ ] (deftest print.single-float.2
  - [ ] (deftest print.single-float.3
  - [ ] (deftest print.single-float.4
  - [ ] (deftest print.single-float.random
  - [ ] (deftest print.double-float.1
  - [ ] (deftest print.double-float.2
  - [ ] (deftest print.double-float.3
  - [ ] (deftest print.double-float.4
  - [ ] (deftest print.double-float.random
  - [ ] (deftest print.long-float.1
  - [ ] (deftest print.long-float.2
  - [ ] (deftest print.long-float.3
  - [ ] (deftest print.long-float.4
  - [ ] (deftest print.long-float.random
**** princ.lsp [0%]
  - [ ] (deftest princ.1
  - [ ] (deftest princ.2
  - [ ] (deftest princ.3
  - [ ] (deftest princ.error.1
  - [ ] (deftest princ.error.2
**** pprint.lsp [0%]
  - [ ] (deftest pprint.1
  - [ ] (deftest pprint.2
  - [ ] (deftest pprint.3
  - [ ] (deftest pprint.error.1
  - [ ] (deftest pprint.error.2
**** princ-to-string.lsp [0%]
  - [ ] (deftest princ-to-string.1
  - [ ] (deftest princ-to-string.2
  - [ ] (deftest princ-to-string.error.1
  - [ ] (deftest princ-to-string.error.2
**** print-strings.lsp [0%]
  - [ ] (deftest print.string.1
  - [ ] (deftest print.string.2
  - [ ] (deftest print.string.3
  - [ ] (deftest print.string.4
  - [ ] (deftest print.string.5
  - [ ] (deftest print.string.6
  - [ ] (deftest print.string.7
  - [ ] (deftest print.string.8
  - [ ] (deftest print.string.9
  - [ ] (deftest print.string.10
  - [ ] (deftest print.string.11
  - [ ] (deftest print.string.12
  - [ ] (deftest print.string.13
  - [ ] (deftest print.string.nil.1
  - [ ] (deftest print.string.nil.2
  - [ ] (deftest print.string.random.1
**** print-lines.lsp [0%]
  - [ ] (deftest print-lines.1
  - [ ] (deftest print-lines.2
**** print-length.lsp [0%]
  - [ ] (def-print-test print-length.1
  - [ ] (def-print-test print-length.2
  - [ ] (def-print-test print-length.3
  - [ ] (def-print-test print-length.4
  - [ ] (deftest print-length.5
  - [ ] (deftest print-length.6
  - [ ] (def-print-test print-length.7
  - [ ] (deftest print-length.8
  - [ ] (def-print-test print-length.9
  - [ ] (def-print-test print-length.10
  - [ ] (deftest print-length.11
**** print-bit-vector.lsp [0%]
  - [ ] (deftest print.bit-vector.1
  - [ ] (deftest print.bit-vector.2
  - [ ] (deftest print.bit-vector.3
  - [ ] (deftest print.bit-vector.4
  - [ ] (deftest print.bit-vector.5
  - [ ] (deftest print.bit-vector.6
  - [ ] (deftest print.bit-vector.7
  - [ ] (deftest print.bit-vector.random
**** print-symbols.lsp [0%]
  - [ ] (deftest print.symbol.1
  - [ ] (deftest print.symbol.2
  - [ ] (deftest print.symbol.3
  - [ ] (deftest print.symbol.4
  - [ ] (deftest print.symbol.5
  - [ ] (deftest print.symbol.6
  - [ ] (deftest print.symbol.7
  - [ ] (deftest print.symbol.8
  - [ ] (deftest print.symbol.9
  - [ ] (deftest print.symbol.10
  - [ ] (deftest print.symbol.11
  - [ ] (deftest print.symbol.12
  - [ ] (deftest print.symbol.random.1
  - [ ] (deftest print.symbol.random.2
  - [ ] (deftest print.symbol.random.3
  - [ ] (deftest print.symbol.random.4
  - [ ] (deftest prin1.symbol.1
  - [ ] (deftest prin1.symbol.2
  - [ ] (deftest prin1.symbol.3
  - [ ] (deftest print.symbol.escaped-random.1
  - [ ] (deftest print.symbol.escaped-random.2
  - [ ] (deftest print.symbol.escaped-random.3
  - [ ] (deftest print.symbol.escaped-random.4
  - [ ] (deftest print.symbol.escaped-random.5
  - [ ] (deftest print.symbol.escaped-random.6
  - [ ] (deftest print.symbol.escaped-random.7
  - [ ] (deftest print.symbol.escaped-random.8
  - [ ] (deftest print.symbol.escaped.9
  - [ ] (deftest print.symbol.escaped.10
  - [ ] (deftest print.symbol.prefix.1
  - [ ] (deftest print.symbol.prefix.2
  - [ ] (deftest print.symbol.prefix.3
  - [ ] (deftest print.symbol.prefix.4
  - [ ] (deftest print.symbol.prefix.5
  - [ ] (deftest print.symbol.prefix.6
  - [ ] (deftest print.symbol.prefix.6a
  - [ ] (deftest print.symbol.prefix.6b
  - [ ] (deftest print.symbol.prefix.7
  - [ ] (deftest print.symbol.prefix.8
  - [ ] (deftest print.symbol.prefix.9
  - [ ] (deftest print.symbol.prefix.10
**** write-to-string.lsp [0%]
  - [ ] (deftest write-to-string.1
  - [ ] (deftest write-to-string.2
  - [ ] (deftest write-to-string.3
  - [ ] (deftest write-to-string.4
  - [ ] (deftest write-to-string.error.1
  - [ ] (deftest write-to-string.error.2
  - [ ] (deftest write-to-string.error.3
**** print-pathname.lsp [0%]
  - [ ] (deftest print.pathname.1
  - [ ] (deftest print.pathname.2
**** copy-pprint-dispatch.lsp [0%]
  - [ ] (deftest copy-pprint-dispatch.1
  - [ ] (deftest copy-pprint-dispatch.2
  - [ ] (deftest copy-pprint-dispatch.3
  - [ ] (deftest copy-pprint-dispatch.4
  - [ ] (deftest copy-pprint-dispatch.5
  - [ ] (deftest copy-pprint-dispatch.6
  - [ ] (deftest copy-pprint-dispatch.7
  - [ ] (deftest copy-pprint-dispatch.8
  - [ ] (deftest copy-pprint-dispatch.error.1
  - [ ] (deftest copy-pprint-dispatch.error.2
**** pprint-dispatch.lsp [0%]
  - [ ] (deftest pprint-dispatch.1
  - [ ] (deftest pprint-dispatch.2
  - [ ] (deftest pprint-dispatch.3
  - [ ] (deftest pprint-dispatch.4
  - [ ] (deftest pprint-dispatch.5
  - [ ] (deftest pprint-dispatch.6
  - [ ] (deftest pprint-dispatch.7
  - [ ] (deftest pprint-dispatch.8
  - [ ] (deftest pprint-dispatch.9
  - [ ] (deftest pprint-dispatch.10
  - [ ] (deftest pprint-dispatch.error.1
  - [ ] (deftest pprint-dispatch.error.2
  - [ ] (deftest set-pprint-dispatch.error.1
  - [ ] (deftest set-pprint-dispatch.error.2
  - [ ] (deftest set-pprint-dispatch.error.3
  - [ ] (deftest set-pprint-dispatch.error.4
  - [ ] (deftest set-pprint-dispatch.error.4-unsafe
**** print.lsp [0%]
  - [ ] (deftest print.1
  - [ ] (deftest print.2
  - [ ] (deftest print.3
  - [ ] (deftest print.error.1
  - [ ] (deftest print.error.2
**** print-characters.lsp [0%]
  - [ ] (deftest print.char.1
  - [ ] (deftest print.char.2
  - [ ] (deftest print.char.3
  - [ ] (deftest print.char.4
  - [ ] (deftest print.char.5
  - [ ] (deftest print.char.6
  - [ ] (deftest print.char.7
  - [ ] (deftest print.char.8
  - [ ] (deftest print.char.9
  - [ ] (deftest print.char.10
  - [ ] (deftest print.char.11
**** prin1.lsp [0%]
  - [ ] (deftest prin1.1
  - [ ] (deftest prin1.2
  - [ ] (deftest prin1.3
  - [ ] (deftest prin1.error.1
  - [ ] (deftest prin1.error.2
**** print-unreadable-object.lsp [0%]
  - [ ] (def-pprint-test print-unreadable-object.1
  - [ ] (def-pprint-test print-unreadable-object.2
  - [ ] (def-pprint-test print-unreadable-object.3
  - [ ] (def-pprint-test print-unreadable-object.4
  - [ ] (deftest print-unreadable-object.error.1
  - [ ] (deftest print-unreadable-object.t.1
  - [ ] (deftest print-unreadable-object.nil.1
**** print-backquote.lsp [0%]
  - [ ] (deftest print.backquote.random.1
  - [ ] (deftest print.backquote.random.2
  - [ ] (deftest print.backquote.random.3
  - [ ] (deftest print.backquote.random.4
  - [ ] (deftest print.backquote.random.5
  - [ ] (deftest print.backquote.random.6
  - [ ] (deftest print.backquote.random.7
  - [ ] (deftest print.backquote.random.8
  - [ ] (deftest print.backquote.random.9
  - [ ] (deftest print.backquote.random.10
  - [ ] (deftest print.backquote.random.11
  - [ ] (deftest print.backquote.random.12
  - [ ] (deftest print.backquote.random.13
  - [ ] (deftest print.backquote.random.14
**** print-cons.lsp [0%]
  - [ ] (deftest print.cons.1
  - [ ] (deftest print.cons.2
  - [ ] (deftest print.cons.3
  - [ ] (deftest print.cons.4
  - [ ] (deftest print.cons.5
  - [ ] (deftest print.cons.6
  - [ ] (deftest print.cons.7
  - [ ] (deftest print.cons.random.1
  - [ ] (deftest print.cons.random.2
  - [ ] (deftest print.cons.length.1
  - [ ] (deftest print.cons.length.2
  - [ ] (deftest print.cons.length.3
  - [ ] (deftest print.cons.length.4
  - [ ] (deftest print.cons.length.5
  - [ ] (deftest print.cons.length.6
  - [ ] (deftest print.cons.level.1
  - [ ] (deftest print.cons.level.2
  - [ ] (deftest print.cons.level.3
  - [ ] (deftest print.cons.level.4
  - [ ] (deftest print.cons.level.5
**** pprint-linear.lsp [0%]
  - [ ] (deftest pprint-linear.1
  - [ ] (deftest pprint-linear.2
  - [ ] (def-pprint-linear-test pprint-linear.3 ('(|A|)) "(A)")
  - [ ] (def-pprint-linear-test pprint-linear.4 ('(|A|) t) "(A)")
  - [ ] (def-pprint-linear-test pprint-linear.5 ('(|A|) nil) "A")
  - [ ] (def-pprint-linear-test pprint-linear.6 ('(1 2 3 4 5)) "(1 2 3 4 5)")
  - [ ] (def-pprint-linear-test pprint-linear.7 ('((1) (2) #(3) "abc" 5) nil) "(1) (2) #(3) \"abc\" 5")
  - [ ] (def-pprint-linear-test pprint-linear.8 ('(1 2 3 4 5) t nil) "(1 2 3 4 5)")
  - [ ] (def-pprint-linear-test pprint-linear.9 ('(1 2 3 4 5) nil t) "1 2 3 4 5")
  - [ ] (deftest pprint-linear.10
  - [ ] (deftest pprint-linear.11
  - [ ] (deftest pprint-linear.12
  - [ ] (deftest pprint-linear.13
  - [ ] (def-pprint-linear-test pprint-linear.14 ((let ((x (list '|A|))) (list x x)))
  - [ ] (deftest pprint-linear.error.1
  - [ ] (deftest pprint-linear.error.2
  - [ ] (deftest pprint-linear.error.3
**** write.lsp [0%]
  - [ ] (deftest write.1
  - [ ] (deftest write.2
  - [ ] (deftest write.3
  - [ ] (deftest write.4
  - [ ] (deftest write.5
  - [ ] (deftest write.6
  - [ ] (deftest write.7
  - [ ] (deftest write.error.1
  - [ ] (deftest write.error.2
  - [ ] (deftest write.error.3
  - [ ] (deftest write.error.4
**** print-complex.lsp [0%]
  - [ ] (deftest print.complex.1
  - [ ] (deftest print.complex.2
  - [ ] (deftest print.complex.random.1
  - [ ] (deftest print.complex.random.2
**** print-random-state.lsp [0%]
  - [ ] (deftest print.random-state.1
**** pprint-exit-if-list-exhausted.lsp [0%]
  - [ ] (deftest pprint-exit-if-list-exhausted.1
  - [ ] (deftest pprint-exit-if-list-exhausted.2
  - [ ] (deftest pprint-exit-if-list-exhausted.3
  - [ ] (deftest pprint-exit-if-list-exhausted.4
  - [ ] (deftest pprint-pop.1
  - [ ] (deftest pprint-pop.2
  - [ ] (deftest pprint-pop.3
  - [ ] (deftest pprint-pop.4
  - [ ] (deftest pprint-pop.5
  - [ ] (deftest pprint-pop.6
  - [ ] (deftest pprint-pop.7
  - [ ] (deftest pprint-pop.8
  - [ ] (deftest pprint-pop.9
  - [ ] (deftest pprint-exit-if-list-exhausted.error.1
  - [ ] (deftest pprint-exit-if-list-exhausted.error.1-unsafe
  - [ ] (deftest pprint-pop.error.1
  - [ ] (deftest pprint-pop.error.1-unsafe
**** print-level.lsp [0%]
  - [ ] (deftest print-level.1
  - [ ] (deftest print-level.2
  - [ ] (deftest print-level.3
  - [ ] (deftest print-level.4
  - [ ] (deftest print-level.5
  - [ ] (deftest print-level.6
  - [ ] (deftest print-level.7
  - [ ] (deftest print-level.8
  - [ ] (deftest print-level.9
  - [ ] (deftest print-level.10
  - [ ] (deftest print-level.11
  - [ ] (deftest print-level.12
**** print-ratios.lsp [0%]
  - [ ] (deftest print.ratios.random
**** print-vector.lsp [0%]
  - [ ] (deftest print.vector.1
  - [ ] (deftest print.vector.2
  - [ ] (deftest print.vector.3
  - [ ] (deftest print.vector.4
  - [ ] (deftest print.vector.5
  - [ ] (deftest print.vector.6
  - [ ] (deftest print.vector.7
  - [ ] (deftest print.vector.fill.1
  - [ ] (deftest print.vector.fill.2
  - [ ] (deftest print.vector.fill.3
  - [ ] (deftest print.vector.displaced.1
  - [ ] (deftest print.vector.displaced.2
  - [ ] (deftest print.vector.displaced.3
  - [ ] (deftest print.vector.adjustable.1
  - [ ] (deftest print.vector.adjustable.2
  - [ ] (deftest print.vector.adjustable.3
  - [ ] (deftest print.vector.unreadable.1
  - [ ] (deftest print.vector.unreadable.2
  - [ ] (deftest print.vector.unreadable.3
  - [ ] (deftest print.vector.random.1
  - [ ] (deftest print.vector.random.2
  - [ ] (deftest print.vector.random.3
  - [ ] (deftest print.vector.random.4
  - [ ] (deftest print.vector.length.1
  - [ ] (deftest print.vector.length.2
  - [ ] (deftest print.vector.length.3
  - [ ] (deftest print.vector.length.4
  - [ ] (deftest print.vector.length.5
  - [ ] (deftest print.vector.length.6
  - [ ] (deftest print.vector.length.7
  - [ ] (deftest print.vector.length.8
  - [ ] (deftest print.vector.length.9
  - [ ] (deftest print.vector.level.1
  - [ ] (deftest print.vector.level.2
  - [ ] (deftest print.vector.level.3
  - [ ] (deftest print.vector.level.4
  - [ ] (deftest print.vector.level.5
  - [ ] (deftest print.vector.level.6
**** pprint-tabular.lsp [0%]
  - [ ] (deftest pprint-tabular.1
  - [ ] (deftest pprint-tabular.2
  - [ ] (def-pprint-tabular-test pprint-tabular.3 ('(|M|)) "(M)")
  - [ ] (def-pprint-tabular-test pprint-tabular.4 ('(|M|) t) "(M)")
  - [ ] (def-pprint-tabular-test pprint-tabular.5 ('(|M|) nil) "M")
  - [ ] (def-pprint-tabular-test pprint-tabular.6 ('(|M| |M|)) "(M               M)")
  - [ ] (def-pprint-tabular-test pprint-tabular.7 ('(|M| |M|) t nil 1) "(M M)")
  - [ ] (def-pprint-tabular-test pprint-tabular.8 ('(|M| |M|) t t 3) "(M  M)")
  - [ ] (def-pprint-tabular-test pprint-tabular.9 ('(|M| |M|) t nil 4) "(M   M)")
  - [ ] (def-pprint-tabular-test pprint-tabular.10 ('(|MM| |MM|) t nil 4) "(MM  MM)")
  - [ ] (def-pprint-tabular-test pprint-tabular.11 ('(|MM| |MM|) t nil 5) "(MM   MM)")
  - [ ] (def-pprint-tabular-test pprint-tabular.12 ('(|M| |MM|) t nil 5)  "(M    MM)")
  - [ ] (def-pprint-tabular-test pprint-tabular.13 ((let ((x (list '|A|))) (list x x)) t nil 1)
  - [ ] (def-pprint-tabular-test pprint-tabular.14 ('(|M| |M|) t t 4) "(M   M)")
  - [ ] (def-pprint-tabular-test pprint-tabular.15 ('(1 2 3 4) t t 1) "(1 2 3 4)")
  - [ ] (def-pprint-tabular-test pprint-tabular.16 ('(10 20 30 40) t t 1) "(10 20 30 40)")
  - [ ] (def-pprint-tabular-test pprint-tabular.17 ('(10 200 3000 40000) t t 1) "(10 200 3000 40000)")
  - [ ] (def-pprint-tabular-test pprint-tabular.18 ('(10 20 30 40) t t 2) "(10  20  30  40)")
  - [ ] (def-pprint-tabular-test pprint-tabular.19 ('(10 200 3000 40000) t t 2) "(10  200 3000  40000)")
  - [ ] (def-pprint-tabular-test pprint-tabular.20 ('(1 2 3) t nil 1)
  - [ ] (def-pprint-tabular-test pprint-tabular.21 ('(1 2 3) t nil 1)
  - [ ] (def-pprint-tabular-test pprint-tabular.22 ('(1 2 3) t nil 1)
  - [ ] (deftest pprint-tabular.23
  - [ ] (deftest pprint-tabular.24
  - [ ] (deftest pprint-tabular.return-values.1
  - [ ] (deftest pprint-tabular.return-values.2
  - [ ] (deftest pprint-tabular.error.1
  - [ ] (deftest pprint-tabular.error.2
  - [ ] (deftest pprint-tabular.error.3
  - [ ] (deftest pprint-tabular.error.4
**** printer-control-vars.lsp [0%]
  - [ ] (deftest print-base.init.1
  - [ ] (deftest print-radix.init.1
  - [ ] (deftest print-case.init.1
  - [ ] (deftest print-circle.init.1
  - [ ] (deftest print-escape.init.1
  - [ ] (deftest print-gensym.init.1
  - [ ] (deftest print-level.init.1
  - [ ] (deftest print-length.init.1
  - [ ] (deftest print-lines.init.1
  - [ ] (deftest print-readably.init.1
  - [ ] (deftest print-right-margin.init.1
**** pprint-indent.lsp [0%]
  - [ ] (deftest pprint-indent.1
  - [ ] (deftest pprint-indent.2
  - [ ] (deftest pprint-indent.3
  - [ ] (deftest pprint-indent.4
  - [ ] (deftest pprint-indent.5
  - [ ] (deftest pprint-indent.6
  - [ ] (deftest pprint-indent.7
  - [ ] (deftest pprint-indent.8
  - [ ] (deftest pprint-indent.9
  - [ ] (deftest pprint-indent.10
  - [ ] (deftest pprint-indent.11
  - [ ] (deftest pprint-indent.12
  - [ ] (deftest pprint-indent.13
  - [ ] (deftest pprint-indent.13a
  - [ ] (deftest pprint-indent.14
  - [ ] (deftest pprint-indent.15
  - [ ] (deftest pprint-indent.16
  - [ ] (deftest pprint-indent.17
  - [ ] (deftest pprint-indent.18
  - [ ] (deftest pprint-indent.19
  - [ ] (deftest pprint-indent.20
  - [ ] (deftest pprint-indent.21
  - [ ] (deftest pprint-indent.22
  - [ ] (deftest pprint-indent.23
  - [ ] (deftest pprint-indent.error.1
  - [ ] (deftest pprint-indent.error.2
  - [ ] (deftest pprint-indent.error.3
  - [ ] (deftest pprint-indent.error.4
  - [ ] (deftest pprint-indent.error.4-unsafe
**** pprint-tab.lsp [0%]
  - [ ] (def-pprint-test pprint-tab.non-pretty.1
  - [ ] (def-pprint-test pprint-tab.non-pretty.2
  - [ ] (def-pprint-test pprint-tab.non-pretty.3
  - [ ] (def-pprint-test pprint-tab.non-pretty.4
  - [ ] (def-ppblock-test pprint-tab.non-pretty.5
  - [ ] (def-ppblock-test pprint-tab.non-pretty.6
  - [ ] (def-ppblock-test pprint-tab.non-pretty.7
  - [ ] (def-ppblock-test pprint-tab.non-pretty.8
  - [ ] (def-ppblock-test pprint-tab.nil.1
  - [ ] (def-pprint-test pprint-tab.t.1
  - [ ] (def-pprint-test pprint-tab.line.1
  - [ ] (def-pprint-test pprint-tab.section.1
  - [ ] (def-pprint-test pprint-tab.line-relative.1
  - [ ] (def-pprint-test pprint-tab.section-relative.1
  - [ ] (deftest pprint-tab.error.1
  - [ ] (deftest pprint-tab.error.2
  - [ ] (deftest pprint-tab.error.3
  - [ ] (deftest pprint-tab.error.4
  - [ ] (deftest pprint-tab.error.5
  - [ ] (deftest pprint-tab.error.5-unsafe
**** prin1-to-string.lsp [0%]
  - [ ] (deftest prin1-to-string.1
  - [ ] (deftest prin1-to-string.2
  - [ ] (deftest prin1-to-string.error.1
  - [ ] (deftest prin1-to-string.error.2
**** pprint-logical-block.lsp [0%]
  - [ ] (deftest pprint-logical-block.1
  - [ ] (deftest pprint-logical-block.2
  - [ ] (deftest pprint-logical-block.3
  - [ ] (deftest pprint-logical-block.4
  - [ ] (deftest pprint-logical-block.5
  - [ ] (deftest pprint-logical-block.6
  - [ ] (deftest pprint-logical-block.7
  - [ ] (deftest pprint-logical-block.8
  - [ ] (deftest pprint-logical-block.9
  - [ ] (deftest pprint-logical-block.10
  - [ ] (deftest pprint-logical-block.11
  - [ ] (deftest pprint-logical-block.12
  - [ ] (deftest pprint-logical-block.13
  - [ ] (deftest pprint-logical-block.14
  - [ ] (deftest pprint-logical-block.15
  - [ ] (deftest pprint-logical-block.16
  - [ ] (deftest pprint-logical-block.17
  - [ ] (deftest pprint-logical-block.error.1
  - [ ] (deftest pprint-logical-block.error.1-unsafe
  - [ ] (deftest pprint-logical-block.error.2
  - [ ] (deftest pprint-logical-block.error.2-unsafe
  - [ ] (deftest pprint-logical-block.error.3
  - [ ] (deftest pprint-logical-block.error.3-unsafe
  - [ ] (deftest pprint-logical-block.error.4
  - [ ] (deftest pprint-logical-block.error.4-unsafe
**** print-array.lsp [0%]
  - [ ] (deftest print.array.0.1
  - [ ] (deftest print.array.0.2
  - [ ] (deftest print.array.0.3
  - [ ] (deftest print.array.0.4
  - [ ] (deftest print.array.0.5
  - [ ] (deftest print.array.0.6
  - [ ] (deftest print.array.0.7
  - [ ] (deftest print.array.0.8
  - [ ] (deftest print.array.0.9
  - [ ] (deftest print.array.0.10
  - [ ] (deftest print.array.0.11
  - [ ] (deftest print.array.0.12
  - [ ] (deftest print.array.0.13
  - [ ] (deftest print.array.0.14
  - [ ] (deftest print.array.0.15
  - [ ] (deftest print.array.0.16
  - [ ] (deftest print.array.0.17
  - [ ] (deftest print.array.2.1
  - [ ] (deftest print.array.2.2
  - [ ] (deftest print.array.2.3
  - [ ] (deftest print.array.2.4
  - [ ] (deftest print.array.2.5
  - [ ] (deftest print.array.2.6
  - [ ] (deftest print.array.2.7
  - [ ] (deftest print.array.2.8
  - [ ] (deftest print.array.2.9
  - [ ] (deftest print.array.2.10
  - [ ] (deftest print.array.2.11
  - [ ] (deftest print.array.2.12
  - [ ] (deftest print.array.2.13
  - [ ] (deftest print.array.2.14
  - [ ] (deftest print.array.2.15
  - [ ] (deftest print.array.2.16
  - [ ] (deftest print.array.2.17
  - [ ] (deftest print.array.2.20
  - [ ] (deftest print.array.2.21
  - [ ] (deftest print.array.2.22
  - [ ] (deftest print.array.2.23
  - [ ] (deftest print.array.2.24
  - [ ] (deftest print.array.2.25
  - [ ] (deftest print.array.2.26
  - [ ] (deftest print.array.2.27
  - [ ] (deftest print.array.2.28
  - [ ] (deftest print.array.2.29
  - [ ] (deftest print.array.2.30
  - [ ] (deftest print.array.2.31
  - [ ] (deftest print.array.3.1
  - [ ] (deftest print.array.multi-dim.1
  - [ ] (deftest print.array.multi-dim.2
**** print-structure.lsp [0%]
  - [ ] (deftest print-structure.1
**** print-integers.lsp [0%]
  - [ ] (def-print-test print.integers.1 1 "1")
  - [ ] (def-print-test print.integers.2 2 "2")
  - [ ] (def-print-test print.integers.3 3 "3")
  - [ ] (def-print-test print.integers.4 4 "4")
  - [ ] (def-print-test print.integers.5 5 "5")
  - [ ] (def-print-test print.integers.6 6 "6")
  - [ ] (def-print-test print.integers.7 7 "7")
  - [ ] (def-print-test print.integers.8 8 "8")
  - [ ] (def-print-test print.integers.9 9 "9")
  - [ ] (def-print-test print.integers.10 -0 "0")
  - [ ] (def-print-test print.integers.11 -1 "-1")
  - [ ] (def-print-test print.integers.12 -2 "-2")
  - [ ] (def-print-test print.integers.13 -3 "-3")
  - [ ] (def-print-test print.integers.14 -4 "-4")
  - [ ] (def-print-test print.integers.15 -5 "-5")
  - [ ] (def-print-test print.integers.16 -6 "-6")
  - [ ] (def-print-test print.integers.17 -7 "-7")
  - [ ] (def-print-test print.integers.18 -8 "-8")
  - [ ] (def-print-test print.integers.19 -9 "-9")
  - [ ] (def-print-test print.integers.20 (expt 10 20) "100000000000000000000")
  - [ ] (def-print-test print.integers.21 (- (expt 10 20)) "-100000000000000000000")
  - [ ] (def-print-test print.integers.base.2.0 0 "0" (*print-base* 2))
  - [ ] (def-print-test print.integers.base.2.1 1 "1" (*print-base* 2))
  - [ ] (def-print-test print.integers.base.2.2 2 "10" (*print-base* 2))
  - [ ] (def-print-test print.integers.base.2.3 3 "11" (*print-base* 2))
  - [ ] (def-print-test print.integers.base.2.4 -1 "-1" (*print-base* 2))
  - [ ] (def-print-test print.integers.base.2.5 -2 "-10" (*print-base* 2))
  - [ ] (def-print-test print.integers.base.2.6 -3 "-11" (*print-base* 2))
  - [ ] (def-print-test print.integers.base.2.7 255 "11111111" (*print-base* 2))
  - [ ] (def-print-test print.integers.base.2.8 -252 "-11111100" (*print-base* 2))
  - [ ] (def-print-test print.integers.base.2.9 (expt 2 40)
  - [ ] (def-print-test print.integers.base.2.10 (- (expt 2 40))
  - [ ] (def-print-test print.integers.base.3.0 0 "0" (*print-base* 3))
  - [ ] (def-print-test print.integers.base.3.1 1 "1" (*print-base* 3))
  - [ ] (def-print-test print.integers.base.3.2 2 "2" (*print-base* 3))
  - [ ] (def-print-test print.integers.base.3.3 3 "10" (*print-base* 3))
  - [ ] (def-print-test print.integers.base.3.4 -1 "-1" (*print-base* 3))
  - [ ] (def-print-test print.integers.base.3.5 -2 "-2" (*print-base* 3))
  - [ ] (def-print-test print.integers.base.3.6 -3 "-10" (*print-base* 3))
  - [ ] (def-print-test print.integers.base.3.7 80 "2222" (*print-base* 3))
  - [ ] (def-print-test print.integers.base.3.8 -78 "-2220" (*print-base* 3))
  - [ ] (def-print-test print.integers.base.3.9 (expt 3 40)
  - [ ] (def-print-test print.integers.base.3.10 (- (expt 3 40))
  - [ ] (def-print-test print.integers.base.4.0 0 "0" (*print-base* 4))
  - [ ] (def-print-test print.integers.base.4.1 1 "1" (*print-base* 4))
  - [ ] (def-print-test print.integers.base.4.2 2 "2" (*print-base* 4))
  - [ ] (def-print-test print.integers.base.4.3 3 "3" (*print-base* 4))
  - [ ] (def-print-test print.integers.base.4.4 4 "10" (*print-base* 4))
  - [ ] (def-print-test print.integers.base.4.5 5 "11" (*print-base* 4))
  - [ ] (def-print-test print.integers.base.4.6 -1 "-1" (*print-base* 4))
  - [ ] (def-print-test print.integers.base.4.7 -2 "-2" (*print-base* 4))
  - [ ] (def-print-test print.integers.base.4.8 -3 "-3" (*print-base* 4))
  - [ ] (def-print-test print.integers.base.4.9 -4 "-10" (*print-base* 4))
  - [ ] (def-print-test print.integers.base.4.10 -5 "-11" (*print-base* 4))
  - [ ] (def-print-test print.integers.base.4.11 255 "3333" (*print-base* 4))
  - [ ] (def-print-test print.integers.base.4.12 -255 "-3333" (*print-base* 4))
  - [ ] (def-print-test print.integers.base.4.13 (expt 4 40)
  - [ ] (def-print-test print.integers.base.4.14 (- (expt 4 40))
  - [ ] (def-print-test print.integers.base.7.0 0 "0" (*print-base* 7))
  - [ ] (def-print-test print.integers.base.7.1 1 "1" (*print-base* 7))
  - [ ] (def-print-test print.integers.base.7.2 2 "2" (*print-base* 7))
  - [ ] (def-print-test print.integers.base.7.3 16 "22" (*print-base* 7))
  - [ ] (def-print-test print.integers.base.7.4 66 "123" (*print-base* 7))
  - [ ] (def-print-test print.integers.base.7.5 -1 "-1" (*print-base* 7))
  - [ ] (def-print-test print.integers.base.7.6 -7 "-10" (*print-base* 7))
  - [ ] (def-print-test print.integers.base.7.7 -48 "-66" (*print-base* 7))
  - [ ] (def-print-test print.integers.base.7.8 (expt 7 40)
  - [ ] (def-print-test print.integers.base.7.9 (- (expt 7 40))
  - [ ] (def-print-test print.integers.base.11.0 0 "0" (*print-base* 11))
  - [ ] (def-print-test print.integers.base.11.1 1 "1" (*print-base* 11))
  - [ ] (def-print-test print.integers.base.11.2 2 "2" (*print-base* 11))
  - [ ] (def-print-test print.integers.base.11.3 10 "A" (*print-base* 11))
  - [ ] (def-print-test print.integers.base.11.4 11 "10" (*print-base* 11))
  - [ ] (def-print-test print.integers.base.11.5 121 "100" (*print-base* 11))
  - [ ] (def-print-test print.integers.base.11.6 -1 "-1" (*print-base* 11))
  - [ ] (def-print-test print.integers.base.11.7 -10 "-A" (*print-base* 11))
  - [ ] (def-print-test print.integers.base.11.8 -21 "-1A" (*print-base* 11))
  - [ ] (def-print-test print.integers.base.11.9 -110 "-A0" (*print-base* 11))
  - [ ] (def-print-test print.integers.base.11.10 (expt 11 40)
  - [ ] (def-print-test print.integers.base.11.11 (- (expt 11 40))
  - [ ] (def-print-test print.integers.base.16.0 0 "0" (*print-base* 16))
  - [ ] (def-print-test print.integers.base.16.1 1 "1" (*print-base* 16))
  - [ ] (def-print-test print.integers.base.16.2 2 "2" (*print-base* 16))
  - [ ] (def-print-test print.integers.base.16.3 12 "C" (*print-base* 16))
  - [ ] (def-print-test print.integers.base.16.4 17 "11" (*print-base* 16))
  - [ ] (def-print-test print.integers.base.16.5 256 "100" (*print-base* 16))
  - [ ] (def-print-test print.integers.base.16.6 -1 "-1" (*print-base* 16))
  - [ ] (def-print-test print.integers.base.16.7 -14 "-E" (*print-base* 16))
  - [ ] (def-print-test print.integers.base.16.8 -30 "-1E" (*print-base* 16))
  - [ ] (def-print-test print.integers.base.16.9 -208 "-D0" (*print-base* 16))
  - [ ] (def-print-test print.integers.base.16.10 (expt 16 40)
  - [ ] (def-print-test print.integers.base.16.11 (- (expt 16 40))
  - [ ] (def-print-test print.integers.base.36.0 0 "0" (*print-base* 36))
  - [ ] (def-print-test print.integers.base.36.1 1 "1" (*print-base* 36))
  - [ ] (def-print-test print.integers.base.36.2 2 "2" (*print-base* 36))
  - [ ] (def-print-test print.integers.base.36.3 12 "C" (*print-base* 36))
  - [ ] (def-print-test print.integers.base.36.4 37 "11" (*print-base* 36))
  - [ ] (def-print-test print.integers.base.36.5 (* 36 36) "100" (*print-base* 36))
  - [ ] (def-print-test print.integers.base.36.6 -1 "-1" (*print-base* 36))
  - [ ] (def-print-test print.integers.base.36.7 -14 "-E" (*print-base* 36))
  - [ ] (def-print-test print.integers.base.36.8 -35 "-Z" (*print-base* 36))
  - [ ] (def-print-test print.integers.base.36.9 -37 "-11" (*print-base* 36))
  - [ ] (def-print-test print.integers.base.36.10 (- 2 (* 36 36)) "-ZY" (*print-base* 36))
  - [ ] (def-print-test print.integers.base.36.11 (expt 36 40)
  - [ ] (def-print-test print.integers.base.36.12 (- (expt 36 40))
  - [ ] (def-print-test print.integers.radix.0 0 "0." (*print-radix* t))
  - [ ] (def-print-test print.integers.radix.1 1 "1." (*print-radix* t))
  - [ ] (def-print-test print.integers.radix.2 123456 "123456." (*print-radix* t))
  - [ ] (def-print-test print.integers.radix.3 123456789 "123456789." (*print-radix* t))
  - [ ] (def-print-test print.integers.radix.4 -5 "-5." (*print-radix* t))
  - [ ] (def-print-test print.integers.radix.5 -249213 "-249213." (*print-radix* t))
  - [ ] (def-print-test print.integers.radix.6 -917512001 "-917512001." (*print-radix* t))
  - [ ] (def-print-test print.integers.radix.base.2.0 0 "#b0" (*print-radix* t) (*print-base* 2))
  - [ ] (def-print-test print.integers.radix.base.2.1 1 "#b1" (*print-radix* t) (*print-base* 2))
  - [ ] (def-print-test print.integers.radix.base.2.2 2 "#b10" (*print-radix* t) (*print-base* 2))
  - [ ] (def-print-test print.integers.radix.base.2.3 3 "#b11" (*print-radix* t) (*print-base* 2))
  - [ ] (def-print-test print.integers.radix.base.2.4 -1 "#b-1" (*print-radix* t) (*print-base* 2))
  - [ ] (def-print-test print.integers.radix.base.2.5 -2 "#b-10" (*print-radix* t) (*print-base* 2))
  - [ ] (def-print-test print.integers.radix.base.2.6 -3 "#b-11" (*print-radix* t) (*print-base* 2))
  - [ ] (def-print-test print.integers.radix.base.2.7 256 "#b100000000" (*print-radix* t) (*print-base* 2))
  - [ ] (def-print-test print.integers.radix.base.2.8 -256 "#b-100000000" (*print-radix* t) (*print-base* 2))
  - [ ] (def-print-test print.integers.radix.base.2.9 (expt 2 100)
  - [ ] (def-print-test print.integers.radix.base.2.10 (- (expt 2 200))
  - [ ] (def-print-test print.integers.radix.base.3.0 0 "#3r0" (*print-radix* t) (*print-base* 3))
  - [ ] (def-print-test print.integers.radix.base.3.1 1 "#3r1" (*print-radix* t) (*print-base* 3))
  - [ ] (def-print-test print.integers.radix.base.3.2 2 "#3r2" (*print-radix* t) (*print-base* 3))
  - [ ] (def-print-test print.integers.radix.base.3.3 4 "#3r11" (*print-radix* t) (*print-base* 3))
  - [ ] (def-print-test print.integers.radix.base.3.4 -1 "#3r-1" (*print-radix* t) (*print-base* 3))
  - [ ] (def-print-test print.integers.radix.base.3.5 -2 "#3r-2" (*print-radix* t) (*print-base* 3))
  - [ ] (def-print-test print.integers.radix.base.3.6 -4 "#3r-11" (*print-radix* t) (*print-base* 3))
  - [ ] (def-print-test print.integers.radix.base.3.7 6561 "#3r100000000" (*print-radix* t) (*print-base* 3))
  - [ ] (def-print-test print.integers.radix.base.3.8 -81 "#3r-10000" (*print-radix* t) (*print-base* 3))
  - [ ] (def-print-test print.integers.radix.base.3.9 (expt 3 100)
  - [ ] (def-print-test print.integers.radix.base.3.10 (- 1 (expt 3 200))
  - [ ] (def-print-test print.integers.radix.base.5.0 0 "#5r0" (*print-radix* t) (*print-base* 5))
  - [ ] (def-print-test print.integers.radix.base.5.1 1 "#5r1" (*print-radix* t) (*print-base* 5))
  - [ ] (def-print-test print.integers.radix.base.5.2 2 "#5r2" (*print-radix* t) (*print-base* 5))
  - [ ] (def-print-test print.integers.radix.base.5.3 6 "#5r11" (*print-radix* t) (*print-base* 5))
  - [ ] (def-print-test print.integers.radix.base.5.4 -1 "#5r-1" (*print-radix* t) (*print-base* 5))
  - [ ] (def-print-test print.integers.radix.base.5.5 -2 "#5r-2" (*print-radix* t) (*print-base* 5))
  - [ ] (def-print-test print.integers.radix.base.5.6 -8 "#5r-13" (*print-radix* t) (*print-base* 5))
  - [ ] (def-print-test print.integers.radix.base.5.7 390625 "#5r100000000" (*print-radix* t) (*print-base* 5))
  - [ ] (def-print-test print.integers.radix.base.5.8 -625 "#5r-10000" (*print-radix* t) (*print-base* 5))
  - [ ] (def-print-test print.integers.radix.base.5.9 (expt 5 100)
  - [ ] (def-print-test print.integers.radix.base.5.10 (- 1 (expt 5 200))
  - [ ] (def-print-test print.integers.radix.base.8.0 0 "#o0" (*print-radix* t) (*print-base* 8))
  - [ ] (def-print-test print.integers.radix.base.8.1 1 "#o1" (*print-radix* t) (*print-base* 8))
  - [ ] (def-print-test print.integers.radix.base.8.2 2 "#o2" (*print-radix* t) (*print-base* 8))
  - [ ] (def-print-test print.integers.radix.base.8.3 9 "#o11" (*print-radix* t) (*print-base* 8))
  - [ ] (def-print-test print.integers.radix.base.8.4 -1 "#o-1" (*print-radix* t) (*print-base* 8))
  - [ ] (def-print-test print.integers.radix.base.8.5 -2 "#o-2" (*print-radix* t) (*print-base* 8))
  - [ ] (def-print-test print.integers.radix.base.8.6 -11 "#o-13" (*print-radix* t) (*print-base* 8))
  - [ ] (def-print-test print.integers.radix.base.8.7 16777216 "#o100000000" (*print-radix* t) (*print-base* 8))
  - [ ] (def-print-test print.integers.radix.base.8.8 -4096 "#o-10000" (*print-radix* t) (*print-base* 8))
  - [ ] (def-print-test print.integers.radix.base.8.9 (expt 8 100)
  - [ ] (def-print-test print.integers.radix.base.8.10 (- 1 (expt 8 200))
  - [ ] (def-print-test print.integers.radix.base.12.0 0 "#12r0" (*print-radix* t) (*print-base* 12))
  - [ ] (def-print-test print.integers.radix.base.12.1 1 "#12r1" (*print-radix* t) (*print-base* 12))
  - [ ] (def-print-test print.integers.radix.base.12.2 2 "#12r2" (*print-radix* t) (*print-base* 12))
  - [ ] (def-print-test print.integers.radix.base.12.3 13 "#12r11" (*print-radix* t) (*print-base* 12))
  - [ ] (def-print-test print.integers.radix.base.12.4 -1 "#12r-1" (*print-radix* t) (*print-base* 12))
  - [ ] (def-print-test print.integers.radix.base.12.5 -2 "#12r-2" (*print-radix* t) (*print-base* 12))
  - [ ] (def-print-test print.integers.radix.base.12.6 -15 "#12r-13" (*print-radix* t) (*print-base* 12))
  - [ ] (def-print-test print.integers.radix.base.12.7 (expt 12 8)
  - [ ] (def-print-test print.integers.radix.base.12.8 (- (* 12 12 12 12))
  - [ ] (def-print-test print.integers.radix.base.12.9 (expt 12 100)
  - [ ] (def-print-test print.integers.radix.base.12.10 (- 1 (expt 12 200))
  - [ ] (def-print-test print.integers.radix.base.16.0 0 "#x0" (*print-radix* t) (*print-base* 16))
  - [ ] (def-print-test print.integers.radix.base.16.1 1 "#x1" (*print-radix* t) (*print-base* 16))
  - [ ] (def-print-test print.integers.radix.base.16.2 2 "#x2" (*print-radix* t) (*print-base* 16))
  - [ ] (def-print-test print.integers.radix.base.16.3 17 "#x11" (*print-radix* t) (*print-base* 16))
  - [ ] (def-print-test print.integers.radix.base.16.4 -1 "#x-1" (*print-radix* t) (*print-base* 16))
  - [ ] (def-print-test print.integers.radix.base.16.5 -2 "#x-2" (*print-radix* t) (*print-base* 16))
  - [ ] (def-print-test print.integers.radix.base.16.6 -19 "#x-13" (*print-radix* t) (*print-base* 16))
  - [ ] (def-print-test print.integers.radix.base.16.7 (expt 16 8)
  - [ ] (def-print-test print.integers.radix.base.16.8 (- (* 16 16 16 16))
  - [ ] (def-print-test print.integers.radix.base.16.9 (expt 16 100)
  - [ ] (def-print-test print.integers.radix.base.16.10 (- 1 (expt 16 200))
  - [ ] (def-print-test print.integers.radix.base.36.0 0 "#36r0" (*print-radix* t) (*print-base* 36))
  - [ ] (def-print-test print.integers.radix.base.36.1 1 "#36r1" (*print-radix* t) (*print-base* 36))
  - [ ] (def-print-test print.integers.radix.base.36.2 2 "#36r2" (*print-radix* t) (*print-base* 36))
  - [ ] (def-print-test print.integers.radix.base.36.3 37 "#36r11" (*print-radix* t) (*print-base* 36))
  - [ ] (def-print-test print.integers.radix.base.36.4 -1 "#36r-1" (*print-radix* t) (*print-base* 36))
  - [ ] (def-print-test print.integers.radix.base.36.5 -2 "#36r-2" (*print-radix* t) (*print-base* 36))
  - [ ] (def-print-test print.integers.radix.base.36.6 -39 "#36r-13" (*print-radix* t) (*print-base* 36))
  - [ ] (def-print-test print.integers.radix.base.36.7 (expt 36 8)
  - [ ] (def-print-test print.integers.radix.base.36.8 (- (* 36 36 36 36))
  - [ ] (def-print-test print.integers.radix.base.36.9 (expt 36 100)
  - [ ] (def-print-test print.integers.radix.base.36.10 (- 1 (expt 36 200))
  - [ ] (deftest print.integers.base.various.1
  - [ ] (deftest print.integers.base.various.2
  - [ ] (deftest print.integers.base.various.3
  - [ ] (deftest print.integers.base.various.4
  - [ ] (deftest print.integers.random.1
*** strings [0%]
**** simple-base-string.lsp [0%]
  - [ ] (deftest simple-base-string.1
  - [ ] (deftest simple-base-string.2
  - [ ] (deftest simple-base-string.3
  - [ ] (deftest simple-base-string.4
  - [ ] (deftest simple-base-string.5
  - [ ] (deftest simple-base-string.6
  - [ ] (deftest simple-base-string.7
  - [ ] (deftest simple-base-string.8
  - [ ] (deftest simple-base-string.9
  - [ ] (deftest simple-base-string.10
  - [ ] (deftest simple-base-string.11
**** string-right-trim.lsp [87%]
  - [X] (deftest string-right-trim.1
  - [X] (deftest string-right-trim.2
  - [X] (deftest string-right-trim.3
  - [X] (deftest string-right-trim.4
  - [X] (deftest string-right-trim.5
  - [X] (deftest string-right-trim.6
  - [X] (deftest string-right-trim.7
  - [X] (deftest string-right-trim.8
  - [X] (deftest string-right-trim.9
  - [X] (deftest string-right-trim.10
  - [X] (deftest string-right-trim.10a
  - [X] (deftest string-right-trim.10b
  - [X] (deftest string-right-trim.11
  - [X] (deftest string-right-trim.12
  - [X] (deftest string-right-trim.13
  - [ ] (deftest string-right-trim.14
  - [X] (deftest string-right-trim.15
  - [ ] (deftest string-right-trim.16
  - [ ] (deftest string-right-trim.17
  - [X] (deftest string-right-trim.18
  - [X] (deftest string-right-trim.19
  - [X] (deftest string-right-trim.20
  - [X] (deftest string-right-trim.21
  - [X] (deftest string-right-trim.22
  - [X] (deftest string-right-trim.23
  - [X] (deftest string-right-trim.24
  - [X] (deftest string-right-trim.25
  - [X] (deftest string-right-trim.order.1
  - [ ] (def-fold-test string-right-trim.fold.1 (string-right-trim " " "abcd "))
  - [X] (deftest string-right-trim.error.1
  - [X] (deftest string-right-trim.error.2
  - [X] (deftest string-right-trim.error.3
**** nstring-downcase.lsp [75%]
  - [X] (deftest nstring-downcase.1
  - [X] (deftest nstring-downcase.2
  - [X] (deftest nstring-downcase.3
  - [X] (deftest nstring-downcase.6
  - [X] (deftest nstring-downcase.7
  - [X] (deftest nstring-downcase.8
  - [ ] (deftest nstring-downcase.9
  - [X] (deftest nstring-downcase.10
  - [ ] (deftest nstring-downcase.11
  - [ ] (deftest nstring-downcase.12
  - [ ] (deftest nstring-downcase.13
  - [ ] (deftest nstring-downcase.14
  - [X] (deftest nstring-downcase.order.1
  - [X] (deftest nstring-downcase.order.2
  - [X] (deftest nstring-downcase.error.1
  - [X] (deftest nstring-downcase.error.2
  - [X] (deftest nstring-downcase.error.3
  - [X] (deftest nstring-downcase.error.4
  - [X] (deftest nstring-downcase.error.5
  - [X] (deftest nstring-downcase.error.6
**** string-trim.lsp [87%]
  - [X] (deftest string-trim.1
  - [X] (deftest string-trim.2
  - [X] (deftest string-trim.3
  - [X] (deftest string-trim.4
  - [X] (deftest string-trim.5
  - [X] (deftest string-trim.6
  - [X] (deftest string-trim.7
  - [X] (deftest string-trim.8
  - [X] (deftest string-trim.8a
  - [X] (deftest string-trim.9
  - [X] (deftest string-trim.10
  - [X] (deftest string-trim.10a
  - [X] (deftest string-trim.11
  - [X] (deftest string-trim.12
  - [X] (deftest string-trim.13
  - [ ] (deftest string-trim.14
  - [X] (deftest string-trim.15
  - [ ] (deftest string-trim.16
  - [ ] (deftest string-trim.17
  - [X] (deftest string-trim.18
  - [X] (deftest string-trim.19
  - [X] (deftest string-trim.20
  - [X] (deftest string-trim.21
  - [X] (deftest string-trim.22
  - [X] (deftest string-trim.23
  - [X] (deftest string-trim.24
  - [X] (deftest string-trim.25
  - [X] (deftest string-trim.order.1
  - [ ] (def-fold-test string-trim.fold.1 (string-trim " " " abcd "))
  - [X] (deftest string-trim.error.1
  - [X] (deftest string-trim.error.2
  - [X] (deftest string-trim.error.3
**** simple-string.lsp [0%]
  - [ ] (deftest simple-string.1
  - [ ] (deftest simple-string.2
  - [ ] (deftest simple-string.3
  - [ ] (deftest simple-string.4
  - [ ] (deftest simple-string.5
  - [ ] (deftest simple-string.6
  - [ ] (deftest simple-string.7
  - [ ] (deftest simple-string.8
  - [ ] (deftest simple-string.9
  - [ ] (deftest simple-string.10
  - [ ] (deftest simple-string.11
  - [ ] (deftest simple-string.12
  - [ ] (deftest simple-string.13
  - [ ] (deftest simple-string.14
  - [ ] (deftest simple-string.15
  - [ ] (deftest simple-string.16
  - [ ] (deftest simple-string.17
  - [ ] (deftest simple-string.18
**** simple-string-p.lsp [20%]
  - [ ] (deftest simple-string-p.1
  - [ ] (deftest simple-string-p.2
  - [ ] (deftest simple-string-p.3
  - [ ] (deftest simple-string-p.5
  - [ ] (deftest simple-string-p.6
  - [ ] (deftest simple-string-p.8
  - [ ] (deftest simple-string-p.9
  - [ ] (deftest simple-string-p.10
  - [X] (deftest simple-string-p.error.1
  - [X] (deftest simple-string-p.error.2
**** base-string.lsp [0%]
  - [ ] (deftest base-string.1
  - [ ] (deftest base-string.2
  - [ ] (deftest base-string.3
  - [ ] (deftest base-string.4
  - [ ] (deftest base-string.5
  - [ ] (deftest base-string.6
**** stringp.lsp [94%]
  - [ ] (deftest stringp.1
  - [X] (deftest stringp.2
  - [X] (deftest stringp.3
  - [X] (deftest stringp.4
  - [X] (deftest stringp.5
  - [X] (deftest stringp.6
  - [X] (deftest stringp.7
  - [X] (deftest stringp.8
  - [X] (deftest stringp.9
  - [X] (deftest stringp.10
  - [X] (deftest stringp.11
  - [X] (deftest stringp.12
  - [X] (deftest stringp.13
  - [X] (deftest stringp.14
  - [X] (deftest stringp.15
  - [X] (deftest stringp.error.1
  - [X] (deftest stringp.error.2
**** nstring-upcase.lsp [75%]
  - [X] (deftest nstring-upcase.1
  - [X] (deftest nstring-upcase.2
  - [X] (deftest nstring-upcase.3
  - [X] (deftest nstring-upcase.6
  - [X] (deftest nstring-upcase.7
  - [X] (deftest nstring-upcase.8
  - [ ] (deftest nstring-upcase.9
  - [X] (deftest nstring-upcase.10
  - [ ] (deftest nstring-upcase.11
  - [ ] (deftest nstring-upcase.12
  - [ ] (deftest nstring-upcase.13
  - [ ] (deftest nstring-upcase.14
  - [X] (deftest nstring-upcase.order.1
  - [X] (deftest nstring-upcase.order.2
  - [X] (deftest nstring-upcase.error.1
  - [X] (deftest nstring-upcase.error.2
  - [X] (deftest nstring-upcase.error.3
  - [X] (deftest nstring-upcase.error.4
  - [X] (deftest nstring-upcase.error.5
  - [X] (deftest nstring-upcase.error.6
**** string-comparisons.lsp [63%]
  - [X] (deftest string=.1
  - [X] (deftest string=.2
  - [ ] (deftest string=.3
  - [X] (deftest string=.4
  - [ ] (deftest string=.5
  - [ ] (deftest string=.6
  - [X] (deftest string=.7
  - [X] (deftest string=.8
  - [X] (deftest string=.9
  - [X] (deftest string=.10
  - [X] (deftest string=.11
  - [X] (deftest string=.12
  - [ ] (deftest string=.13
  - [ ] (deftest string=.14
  - [ ] (deftest string-comparison.allow-other-keys.1
  - [ ] (deftest string-comparison.allow-other-keys.2
  - [ ] (deftest string-comparison.allow-other-keys.3
  - [X] (deftest string=.order.1
  - [ ] (deftest string=.order.2
  - [ ] (deftest string=.order.3
  - [X] (deftest string<=.order.1
  - [ ] (deftest string<=.order.2
  - [ ] (deftest string<=.order.3
  - [X] (deftest string<.order.1
  - [ ] (deftest string<.order.2
  - [ ] (deftest string<.order.3
  - [ ] (deftest string/=.order.1
  - [ ] (deftest string/=.order.2
  - [ ] (deftest string/=.order.3
  - [X] (deftest string>=.order.1
  - [ ] (deftest string>=.order.2
  - [ ] (deftest string>=.order.3
  - [X] (deftest string>.order.1
  - [ ] (deftest string>.order.2
  - [ ] (deftest string>.order.3
  - [X] (deftest string-equal.order.1
  - [ ] (deftest string-equal.order.2
  - [ ] (deftest string-equal.order.3
  - [ ] (deftest string-not-greaterp.order.1
  - [ ] (deftest string-not-greaterp.order.2
  - [ ] (deftest string-not-greaterp.order.3
  - [ ] (deftest string-lessp.order.1
  - [ ] (deftest string-lessp.order.2
  - [ ] (deftest string-lessp.order.3
  - [ ] (deftest string-not-equal.order.1
  - [ ] (deftest string-not-equal.order.2
  - [ ] (deftest string-not-equal.order.3
  - [ ] (deftest string-not-lessp.order.1
  - [ ] (deftest string-not-lessp.order.2
  - [ ] (deftest string-not-lessp.order.3
  - [ ] (deftest string-greaterp.order.1
  - [ ] (deftest string-greaterp.order.2
  - [ ] (deftest string-greaterp.order.3
  - [ ] (deftest random-string-comparison-tests
  - [ ] (deftest string=.nil-array.1
  - [ ] (deftest string/=.nil-array.1
  - [ ] (deftest string<.nil-array.1
  - [ ] (deftest string<=.nil-array.1
  - [ ] (deftest string>.nil-array.1
  - [ ] (deftest string>=.nil-array.1
  - [ ] (deftest string-equal.nil-array.1
  - [ ] (deftest string-not-equal.nil-array.1
  - [ ] (deftest string-lessp.nil-array.1
  - [ ] (deftest string-not-greaterp.nil-array.1
  - [ ] (deftest string-greaterp.nil-array.1
  - [ ] (deftest string-not-lessp.nil-array.1
  - [X] (deftest string=.error.1
  - [X] (deftest string=.error.2
  - [X] (deftest string=.error.3
  - [X] (deftest string=.error.4
  - [X] (deftest string=.error.5
  - [X] (deftest string=.error.6
  - [X] (deftest string/=.error.1
  - [X] (deftest string/=.error.2
  - [X] (deftest string/=.error.3
  - [X] (deftest string/=.error.4
  - [X] (deftest string/=.error.5
  - [X] (deftest string/=.error.6
  - [X] (deftest string<.error.1
  - [X] (deftest string<.error.2
  - [X] (deftest string<.error.3
  - [X] (deftest string<.error.4
  - [X] (deftest string<.error.5
  - [X] (deftest string<.error.6
  - [X] (deftest string<=.error.1
  - [X] (deftest string<=.error.2
  - [X] (deftest string<=.error.3
  - [X] (deftest string<=.error.4
  - [X] (deftest string<=.error.5
  - [X] (deftest string<=.error.6
  - [X] (deftest string>.error.1
  - [X] (deftest string>.error.2
  - [X] (deftest string>.error.3
  - [X] (deftest string>.error.4
  - [X] (deftest string>.error.5
  - [X] (deftest string>.error.6
  - [X] (deftest string>=.error.1
  - [X] (deftest string>=.error.2
  - [X] (deftest string>=.error.3
  - [X] (deftest string>=.error.4
  - [X] (deftest string>=.error.5
  - [X] (deftest string>=.error.6
  - [X] (deftest string-equal.error.1
  - [X] (deftest string-equal.error.2
  - [X] (deftest string-equal.error.3
  - [X] (deftest string-equal.error.4
  - [X] (deftest string-equal.error.5
  - [X] (deftest string-equal.error.6
  - [X] (deftest string-not-equal.error.1
  - [X] (deftest string-not-equal.error.2
  - [X] (deftest string-not-equal.error.3
  - [X] (deftest string-not-equal.error.4
  - [X] (deftest string-not-equal.error.5
  - [X] (deftest string-not-equal.error.6
  - [X] (deftest string-lessp.error.1
  - [X] (deftest string-lessp.error.2
  - [X] (deftest string-lessp.error.3
  - [X] (deftest string-lessp.error.4
  - [X] (deftest string-lessp.error.5
  - [X] (deftest string-lessp.error.6
  - [X] (deftest string-greaterp.error.1
  - [X] (deftest string-greaterp.error.2
  - [X] (deftest string-greaterp.error.3
  - [X] (deftest string-greaterp.error.4
  - [X] (deftest string-greaterp.error.5
  - [X] (deftest string-greaterp.error.6
  - [X] (deftest string-not-lessp.error.1
  - [X] (deftest string-not-lessp.error.2
  - [X] (deftest string-not-lessp.error.3
  - [X] (deftest string-not-lessp.error.4
  - [X] (deftest string-not-lessp.error.5
  - [X] (deftest string-not-lessp.error.6
  - [X] (deftest string-not-greaterp.error.1
  - [X] (deftest string-not-greaterp.error.2
  - [X] (deftest string-not-greaterp.error.3
  - [X] (deftest string-not-greaterp.error.4
  - [X] (deftest string-not-greaterp.error.5
  - [X] (deftest string-not-greaterp.error.6
**** char-schar.lsp [55%]
  - [X] (deftest char.1
  - [X] (deftest char.2
  - [X] (deftest char.3
  - [X] (deftest char.4
  - [ ] (deftest char.5
  - [ ] (deftest char.6
  - [ ] (deftest char.7
  - [ ] (deftest char.8
  - [ ] (deftest char.9
  - [ ] (deftest char.10
  - [X] (deftest char.order.1
  - [ ] (deftest char.order.2
  - [X] (deftest char.error.1
  - [X] (deftest char.error.2
  - [X] (deftest char.error.3
  - [X] (deftest schar.1
  - [X] (deftest schar.2
  - [ ] (deftest schar.3
  - [ ] (deftest schar.4
  - [ ] (deftest schar.5
  - [ ] (deftest schar.6
  - [ ] (deftest schar.7
  - [X] (deftest schar.order.1
  - [X] (deftest schar.order.2
  - [X] (deftest schar.error.1
  - [X] (deftest schar.error.2
  - [X] (deftest schar.error.3
**** string-upcase.lsp [86%]
  - [X] (deftest string-upcase.1
  - [X] (deftest string-upcase.2
  - [X] (deftest string-upcase.3
  - [ ] (deftest string-upcase.4
  - [X] (deftest string-upcase.5
  - [X] (deftest string-upcase.6
  - [X] (deftest string-upcase.7
  - [X] (deftest string-upcase.8
  - [X] (deftest string-upcase.9
  - [X] (deftest string-upcase.10
  - [ ] (deftest string-upcase.11
  - [X] (deftest string-upcase.12
  - [X] (deftest string-upcase.13
  - [X] (deftest string-upcase.14
  - [X] (deftest string-upcase.order.1
  - [X] (deftest string-upcase.order.2
  - [ ] (def-fold-test string-upcase.fold.1 (string-upcase "abcde"))
  - [X] (deftest string-upcase.error.1
  - [X] (deftest string-upcase.error.2
  - [X] (deftest string-upcase.error.3
  - [X] (deftest string-upcase.error.4
  - [X] (deftest string-upcase.error.5
  - [X] (deftest string-upcase.error.6
**** make-string.lsp [29%]
  - [X] (deftest make-string.1
  - [ ] (deftest make-string.2
  - [ ] (deftest make-string.3
  - [ ] (deftest make-string.4
  - [ ] (deftest make-string.5
  - [X] (deftest make-string.6
  - [ ] (deftest make-string.7
  - [ ] (deftest make-string.8
  - [ ] (deftest make-string.9
  - [ ] (deftest make-string.10
  - [ ] (def-fold-test make-string.fold.1 (make-string 5 :initial-element #\a))
  - [ ] (deftest make-string.allow-other-keys.1
  - [ ] (deftest make-string.allow-other-keys.2
  - [ ] (deftest make-string.allow-other-keys.3
  - [ ] (deftest make-string.allow-other-keys.4
  - [ ] (deftest make-string.allow-other-keys.5
  - [ ] (deftest make-string.allow-other-keys.6
  - [ ] (deftest make-string.keywords.7
  - [X] (deftest make-string.error.1
  - [X] (deftest make-string.error.2
  - [X] (deftest make-string.error.3
  - [X] (deftest make-string.error.4
  - [X] (deftest make-string.error.5
  - [X] (deftest make-string.error.6
  - [ ] (deftest make-string.order.1
  - [ ] (deftest make-string.order.2
  - [ ] (deftest make-string.order.3
**** string-left-trim.lsp [90%]
  - [X] (deftest string-left-trim.1
  - [X] (deftest string-left-trim.2
  - [X] (deftest string-left-trim.3
  - [X] (deftest string-left-trim.4
  - [X] (deftest string-left-trim.5
  - [X] (deftest string-left-trim.6
  - [X] (deftest string-left-trim.7
  - [X] (deftest string-left-trim.8
  - [X] (deftest string-left-trim.9
  - [X] (deftest string-left-trim.10
  - [X] (deftest string-left-trim.10a
  - [X] (deftest string-left-trim.10b
  - [X] (deftest string-left-trim.11
  - [X] (deftest string-left-trim.12
  - [X] (deftest string-left-trim.13
  - [X] (deftest string-left-trim.14
  - [X] (deftest string-left-trim.15
  - [ ] (deftest string-left-trim.16
  - [ ] (deftest string-left-trim.17
  - [X] (deftest string-left-trim.18
  - [X] (deftest string-left-trim.19
  - [X] (deftest string-left-trim.20
  - [X] (deftest string-left-trim.21
  - [X] (deftest string-left-trim.22
  - [X] (deftest string-left-trim.23
  - [X] (deftest string-left-trim.24
  - [X] (deftest string-left-trim.25
  - [X] (deftest string-left-trim.order.1
  - [ ] (def-fold-test string-left-trim.fold.1 (string-left-trim " " " abcd"))
  - [X] (deftest string-left-trim.error.1
  - [X] (deftest string-left-trim.error.2
  - [X] (deftest string-left-trim.error.3
**** string.lsp [37%]
  - [X] (deftest string.1
  - [X] (deftest string.2
  - [ ] (deftest string.3
  - [X] (deftest string.4
  - [X] (deftest string.5
  - [X] (deftest string.6
  - [ ] (deftest string.7
  - [ ] (deftest string.8
  - [ ] (deftest string.9
  - [ ] (deftest string.10
  - [X] (deftest string.11
  - [X] (deftest string.12
  - [X] (deftest string.13
  - [ ] (deftest string.14
  - [ ] (deftest string.15
  - [ ] (deftest string.16
  - [ ] (deftest string.17
  - [ ] (deftest string.18
  - [ ] (deftest string.19
  - [ ] (deftest string.20
  - [ ] (deftest string.21
  - [ ] (deftest string.22
  - [ ] (deftest string.23
  - [ ] (deftest string.24
  - [ ] (deftest string.25
  - [X] (deftest string.26
  - [ ] (def-fold-test string.fold.1 (string #\A))
  - [X] (deftest string.error.1
  - [X] (deftest string.error.2
**** string-capitalize.lsp [26%]
  - [ ] (deftest string-capitalize.1
  - [ ] (deftest string-capitalize.2
  - [ ] (deftest string-capitalize.3
  - [ ] (deftest string-capitalize.4
  - [ ] (deftest string-capitalize.5
  - [ ] (deftest string-capitalize.6
  - [ ] (deftest string-capitalize.7
  - [ ] (deftest string-capitalize.8
  - [ ] (deftest string-capitalize.9
  - [ ] (deftest string-capitalize.10
  - [ ] (deftest string-capitalize.11
  - [ ] (deftest string-capitalize.12
  - [ ] (deftest string-capitalize.13
  - [ ] (deftest string-capitalize.14
  - [ ] (deftest string-capitalize.order.1
  - [ ] (deftest string-capitalize.order.2
  - [ ] (def-fold-test string-capitalize.fold.1 (string-capitalize "ABCDE"))
  - [X] (deftest string-capitalize.error.1
  - [X] (deftest string-capitalize.error.2
  - [X] (deftest string-capitalize.error.3
  - [X] (deftest string-capitalize.error.4
  - [X] (deftest string-capitalize.error.5
  - [X] (deftest string-capitalize.error.6
**** nstring-capitalize.lsp [28%]
  - [ ] (deftest nstring-capitalize.1
  - [ ] (deftest nstring-capitalize.2
  - [ ] (deftest nstring-capitalize.3
  - [ ] (deftest nstring-capitalize.4
  - [ ] (deftest nstring-capitalize.7
  - [ ] (deftest nstring-capitalize.8
  - [ ] (deftest nstring-capitalize.9
  - [ ] (deftest nstring-capitalize.10
  - [ ] (deftest nstring-capitalize.11
  - [ ] (deftest nstring-capitalize.12
  - [ ] (deftest nstring-capitalize.13
  - [ ] (deftest nstring-capitalize.14
  - [ ] (deftest nstring-capitalize.15
  - [ ] (deftest nstring-capitalize.order.1
  - [ ] (deftest nstring-capitalize.order.2
  - [X] (deftest nstring-capitalize.error.1
  - [X] (deftest nstring-capitalize.error.2
  - [X] (deftest nstring-capitalize.error.3
  - [X] (deftest nstring-capitalize.error.4
  - [X] (deftest nstring-capitalize.error.5
  - [X] (deftest nstring-capitalize.error.6
**** string-downcase.lsp [86%]
  - [X] (deftest string-downcase.1
  - [X] (deftest string-downcase.2
  - [X] (deftest string-downcase.3
  - [ ] (deftest string-downcase.4
  - [X] (deftest string-downcase.5
  - [X] (deftest string-downcase.6
  - [X] (deftest string-downcase.7
  - [X] (deftest string-downcase.8
  - [X] (deftest string-downcase.9
  - [X] (deftest string-downcase.10
  - [ ] (deftest string-downcase.11
  - [X] (deftest string-downcase.12
  - [X] (deftest string-downcase.13
  - [X] (deftest string-downcase.14
  - [X] (deftest string-downcase.order.1
  - [X] (deftest string-downcase.order.2
  - [ ] (def-fold-test string-downcase.fold.1 (string-downcase "ABCDE"))
  - [X] (deftest string-downcase.error.1
  - [X] (deftest string-downcase.error.2
  - [X] (deftest string-downcase.error.3
  - [X] (deftest string-downcase.error.4
  - [X] (deftest string-downcase.error.5
  - [X] (deftest string-downcase.error.6
*** misc [0%]
**** misc.lsp [0%]
  - [ ] (deftest misc.1
  - [ ] (deftest misc.2
  - [ ] (deftest misc.3
  - [ ] (deftest misc.4
  - [ ] (deftest misc.5
  - [ ] (deftest misc.6
  - [ ] (deftest misc.7
  - [ ] (deftest misc.8
  - [ ] (deftest misc.9
  - [ ] (deftest misc.10
  - [ ] (deftest misc.11
  - [ ] (deftest misc.12
  - [ ] (deftest misc.13
  - [ ] (deftest misc.14
  - [ ] (deftest misc.15
  - [ ] (deftest misc.16
  - [ ] (deftest misc.17
  - [ ] (deftest misc.18
  - [ ] (deftest misc.19
  - [ ] (deftest misc.20
  - [ ] (deftest misc.21
  - [ ] (deftest misc.22
  - [ ] (deftest misc.23
  - [ ] (deftest misc.24
  - [ ] (deftest misc.25
  - [ ] (deftest misc.26
  - [ ] (deftest misc.27
  - [ ] (deftest misc.28
  - [ ] (deftest misc.29
  - [ ] (deftest misc.30
  - [ ] (deftest misc.31
  - [ ] (deftest misc.32
  - [ ] (deftest misc.33
  - [ ] (deftest misc.34
  - [ ] (deftest misc.35
  - [ ] (deftest misc.36
  - [ ] (deftest misc.37
  - [ ] (deftest misc.38
  - [ ] (deftest misc.39
  - [ ] (deftest misc.40
  - [ ] (deftest misc.41
  - [ ] (deftest misc.42
  - [ ] (deftest misc.43
  - [ ] (deftest misc.44
  - [ ] (deftest misc.45
  - [ ] (deftest misc.46
  - [ ] (deftest misc.47
  - [ ] (deftest misc.48
  - [ ] (deftest misc.49
  - [ ] (deftest misc.50
  - [ ] (deftest misc.51
  - [ ] (deftest misc.53
  - [ ] (deftest misc.54
  - [ ] (deftest misc.55
  - [ ] (deftest misc.56
  - [ ] (deftest misc.57
  - [ ] (deftest misc.58
  - [ ] (deftest misc.59
  - [ ] (deftest misc.60
  - [ ] (deftest misc.61
  - [ ] (deftest misc.62
  - [ ] (deftest misc.63
  - [ ] (deftest misc.64
  - [ ] (deftest misc.65
  - [ ] (deftest misc.66
  - [ ] (deftest misc.67
  - [ ] (deftest misc.68
  - [ ] (deftest misc.69
  - [ ] (deftest misc.70
  - [ ] (deftest misc.71
  - [ ] (deftest misc.72
  - [ ] (deftest misc.73
  - [ ] (deftest misc.74
  - [ ] (deftest misc.75
  - [ ] (deftest misc.76
  - [ ] (deftest misc.77
  - [ ] (deftest misc.78
  - [ ] (deftest misc.79
  - [ ] (deftest misc.79a
  - [ ] (deftest misc.80
  - [ ] (deftest misc.81
  - [ ] (deftest misc.82
  - [ ] (deftest misc.83
  - [ ] (deftest misc.84
  - [ ] (deftest misc.85
  - [ ] (deftest misc.86
  - [ ] (deftest misc.87
  - [ ] (deftest misc.88
  - [ ] (deftest misc.89
  - [ ] (deftest misc.89a
  - [ ] (deftest misc.89b
  - [ ] (deftest misc.90
  - [ ] (deftest misc.91
  - [ ] (deftest misc.92
  - [ ] (deftest misc.93
  - [ ] (deftest misc.94
  - [ ] (deftest misc.95
  - [ ] (deftest misc.96
  - [ ] (deftest misc.97
  - [ ] (deftest misc.98
  - [ ] (deftest misc.99
  - [ ] (deftest misc.100
  - [ ] (deftest misc.101
  - [ ] (deftest misc.102
  - [ ] (deftest misc.103
  - [ ] (deftest misc.104
  - [ ] (deftest misc.105
  - [ ] (deftest misc.106
  - [ ] (deftest misc.107
  - [ ] (deftest misc.107a
  - [ ] (deftest misc.107b
  - [ ] (deftest misc.107c
  - [ ] (deftest misc.107d
  - [ ] (deftest misc.107e
  - [ ] (deftest misc.108
  - [ ] (deftest misc.109
  - [ ] (deftest misc.110
  - [ ] (deftest misc.110a
  - [ ] (deftest misc.111
  - [ ] (deftest misc.112
  - [ ] (deftest misc.113
  - [ ] (deftest misc.114
  - [ ] (deftest misc.115
  - [ ] (deftest misc.116
  - [ ] (deftest misc.117
  - [ ] (deftest misc.118
  - [ ] (deftest misc.119
  - [ ] (deftest misc.120
  - [ ] (deftest misc.121
  - [ ] (deftest misc.122
  - [ ] (deftest misc.123
  - [ ] (deftest misc.124
  - [ ] (deftest misc.125
  - [ ] (deftest misc.126
  - [ ] (deftest misc.127
  - [ ] (deftest misc.128
  - [ ] (deftest misc.129
  - [ ] (deftest misc.130
  - [ ] (deftest misc.131
  - [ ] (deftest misc.132
  - [ ] (deftest misc.132a
  - [ ] (deftest misc.133
  - [ ] (deftest misc.134
  - [ ] (deftest misc.135
  - [ ] (deftest misc.136
  - [ ] (deftest misc.137
  - [ ] (deftest misc.138
  - [ ] (deftest misc.139
  - [ ] (deftest misc.140
  - [ ] (deftest misc.141
  - [ ] (deftest misc.142
  - [ ] (deftest misc.143
  - [ ] (deftest misc.144
  - [ ] (deftest misc.145
  - [ ] (deftest misc.146
  - [ ] (deftest misc.147
  - [ ] (deftest misc.148
  - [ ] (deftest misc.149
  - [ ] (deftest misc.149a
  - [ ] (deftest misc.150
  - [ ] (deftest misc.150a
  - [ ] (deftest misc.150b
  - [ ] (deftest misc.150c
  - [ ] (deftest misc.150d
  - [ ] (deftest misc.151
  - [ ] (deftest misc.151a
  - [ ] (deftest misc.152
  - [ ] (deftest misc.153
  - [ ] (deftest misc.154
  - [ ] (deftest misc.155
  - [ ] (deftest misc.156
  - [ ] (deftest misc.157
  - [ ] (deftest misc.158
  - [ ] (deftest misc.159
  - [ ] (deftest misc.159a
  - [ ] (deftest misc.160
  - [ ] (deftest misc.161
  - [ ] (deftest misc.161a
  - [ ] (deftest misc.162
  - [ ] (deftest misc.163
  - [ ] (deftest misc.164
  - [ ] (deftest misc.165
  - [ ] (deftest misc.166
  - [ ] (deftest misc.167
  - [ ] (deftest misc.168
  - [ ] (deftest misc.169
  - [ ] (deftest misc.170
  - [ ] (deftest misc.170a
  - [ ] (deftest misc.171
  - [ ] (deftest misc.172
  - [ ] (deftest misc.173
  - [ ] (deftest misc.174
  - [ ] (deftest misc.174a
  - [ ] (deftest misc.174b
  - [ ] (deftest misc.175
  - [ ] (deftest misc.175a
  - [ ] (deftest misc.175b
  - [ ] (deftest misc.176
  - [ ] (deftest misc.177
  - [ ] (deftest misc.178
  - [ ] (deftest misc.179
  - [ ] (deftest misc.180
  - [ ] (deftest misc.181
  - [ ] (deftest misc.181a
  - [ ] (deftest misc.182
  - [ ] (deftest misc.183
  - [ ] (deftest misc.183a
  - [ ] (deftest misc.184
  - [ ] (deftest misc.185
  - [ ] (deftest misc.185a
  - [ ] (deftest misc.186
  - [ ] (deftest misc.187
  - [ ] (deftest misc.188
  - [ ] (deftest misc.189
  - [ ] (deftest misc.190
  - [ ] (deftest misc.191
  - [ ] (deftest misc.192
  - [ ] (deftest misc.193
  - [ ] (deftest misc.194
  - [ ] (deftest misc.195
  - [ ] (deftest misc.196
  - [ ] (deftest misc.197
  - [ ] (deftest misc.198
  - [ ] (deftest misc.199
  - [ ] (deftest misc.200
  - [ ] (deftest misc.201
  - [ ] (deftest misc.202
  - [ ] (deftest misc.203
  - [ ] (deftest misc.204
  - [ ] (deftest misc.205
  - [ ] (deftest misc.206
  - [ ] (deftest misc.207
  - [ ] (deftest misc.208
  - [ ] (deftest misc.209
  - [ ] (deftest misc.210
  - [ ] (deftest misc.210a
  - [ ] (deftest misc.211
  - [ ] (deftest misc.212
  - [ ] (deftest misc.213
  - [ ] (deftest misc.213a
  - [ ] (deftest misc.214
  - [ ] (deftest misc.215
  - [ ] (deftest misc.215a
  - [ ] (deftest misc.216
  - [ ] (deftest misc.217
  - [ ] (deftest misc.218
  - [ ] (deftest misc.219
  - [ ] (deftest misc.220
  - [ ] (deftest misc.221
  - [ ] (deftest misc.222
  - [ ] (deftest misc.223
  - [ ] (deftest misc.224
  - [ ] (deftest misc.225
  - [ ] (deftest misc.226
  - [ ] (deftest misc.227
  - [ ] (deftest misc.228
  - [ ] (deftest misc.228a
  - [ ] (deftest misc.228b
  - [ ] (deftest misc.229
  - [ ] (deftest misc.230
  - [ ] (deftest misc.231
  - [ ] (deftest misc.232
  - [ ] (deftest misc.233
  - [ ] (deftest misc.234
  - [ ] (deftest misc.235
  - [ ] (deftest misc.236
  - [ ] (deftest misc.237
  - [ ] (deftest misc.238
  - [ ] (deftest misc.238a
  - [ ] (deftest misc.239
  - [ ] (deftest misc.239a
  - [ ] (deftest misc.240
  - [ ] (deftest misc.241
  - [ ] (deftest misc.242
  - [ ] (deftest misc.243
  - [ ] (deftest misc.244
  - [ ] (deftest misc.245
  - [ ] (deftest misc.246
  - [ ] (deftest misc.247
  - [ ] (deftest misc.248
  - [ ] (deftest misc.249
  - [ ] (deftest misc.250
  - [ ] (deftest misc.251
  - [ ] (deftest misc.252
  - [ ] (deftest misc.252a
  - [ ] (deftest misc.253
  - [ ] (deftest misc.253a
  - [ ] (deftest misc.254
  - [ ] (deftest misc.255
  - [ ] (deftest misc.256
  - [ ] (deftest misc.257
  - [ ] (deftest misc.258
  - [ ] (deftest misc.259
  - [ ] (deftest misc.260
  - [ ] (deftest misc.261
  - [ ] (deftest misc.262
  - [ ] (deftest misc.263
  - [ ] (deftest misc.264
  - [ ] (deftest misc.265
  - [ ] (deftest misc.266
  - [ ] (deftest misc.266a
  - [ ] (deftest misc.266b
  - [ ] (deftest misc.267
  - [ ] (deftest misc.267a
  - [ ] (deftest misc.268
  - [ ] (deftest misc.269
  - [ ] (deftest misc.270
  - [ ] (deftest misc.271
  - [ ] (deftest misc.272
  - [ ] (deftest misc.273
  - [ ] (deftest misc.274
  - [ ] (deftest misc.274a
  - [ ] (deftest misc.275
  - [ ] (deftest misc.275a
  - [ ] (deftest misc.276
  - [ ] (deftest misc.277
  - [ ] (deftest misc.278
  - [ ] (deftest misc.279
  - [ ] (deftest misc.280
  - [ ] (deftest misc.281
  - [ ] (deftest misc.282
  - [ ] (deftest misc.283
  - [ ] (deftest misc.284
  - [ ] (deftest misc.285
  - [ ] (deftest misc.286
  - [ ] (deftest misc.287
  - [ ] (deftest misc.288
  - [ ] (deftest misc.289
  - [ ] (deftest misc.290
  - [ ] (deftest misc.290a
  - [ ] (deftest misc.291
  - [ ] (deftest misc.292
  - [ ] (deftest misc.292a
  - [ ] (deftest misc.293
  - [ ] (deftest misc.293a
  - [ ] (deftest misc.293b
  - [ ] (deftest misc.293c
  - [ ] (deftest misc.293d
  - [ ] (deftest misc.294
  - [ ] (deftest misc.294a
  - [ ] (deftest misc.295
  - [ ] (deftest misc.296
  - [ ] (deftest misc.297
  - [ ] (deftest misc.298
  - [ ] (deftest misc.299
  - [ ] (deftest misc.300
  - [ ] (deftest misc.301
  - [ ] (deftest misc.302
  - [ ] (deftest misc.303
  - [ ] (deftest misc.304
  - [ ] (deftest misc.305
  - [ ] (deftest misc.306
  - [ ] (deftest misc.307
  - [ ] (deftest misc.308
  - [ ] (deftest misc.309
  - [ ] (deftest misc.310
  - [ ] (deftest misc.311
  - [ ] (deftest misc.312
  - [ ] (deftest misc.313
  - [ ] (deftest misc.314
  - [ ] (deftest misc.316
  - [ ] (deftest misc.317
  - [ ] (deftest misc.318
  - [ ] (deftest misc.319
  - [ ] (deftest misc.320
  - [ ] (deftest misc.320a
  - [ ] (deftest misc.320b
  - [ ] (deftest misc.321
  - [ ] (deftest misc.322
  - [ ] (deftest misc.323
  - [ ] (deftest misc.324
  - [ ] (deftest misc.325
  - [ ] (deftest misc.326
  - [ ] (deftest misc.327
  - [ ] (deftest misc.327a
  - [ ] (deftest misc.328
  - [ ] (deftest misc.329
  - [ ] (deftest misc.330
  - [ ] (deftest misc.331
  - [ ] (deftest misc.332
  - [ ] (deftest misc.333
  - [ ] (deftest misc.334
  - [ ] (deftest misc.335
  - [ ] (deftest misc.336
  - [ ] (deftest misc.337
  - [ ] (deftest misc.338
  - [ ] (deftest misc.339
  - [ ] (deftest misc.340
  - [ ] (deftest misc.341
  - [ ] (deftest misc.342
  - [ ] (deftest misc.343
  - [ ] (deftest misc.344
  - [ ] (deftest misc.345
  - [ ] (deftest misc.345a
  - [ ] (deftest misc.346
  - [ ] (deftest misc.347
  - [ ] (deftest misc.348
  - [ ] (deftest misc.349
  - [ ] (deftest misc.350
  - [ ] (deftest misc.351
  - [ ] (deftest misc.352
  - [ ] (deftest misc.353
  - [ ] (deftest misc.354
  - [ ] (deftest misc.355
  - [ ] (deftest misc.356
  - [ ] (deftest misc.357
  - [ ] (deftest misc.358
  - [ ] (deftest misc.359
  - [ ] (deftest misc.360
  - [ ] (deftest misc.361
  - [ ] (deftest misc.362
  - [ ] (deftest misc.363
  - [ ] (deftest misc.364
  - [ ] (deftest misc.365
  - [ ] (deftest misc.366
  - [ ] (deftest misc.367
  - [ ] (deftest misc.368
  - [ ] (deftest misc.369
  - [ ] (deftest misc.370
  - [ ] (deftest misc.371
  - [ ] (deftest misc.372
  - [ ] (deftest misc.373
  - [ ] (deftest misc.374
  - [ ] (deftest misc.375
  - [ ] (deftest misc.376
  - [ ] (deftest misc.377
  - [ ] (deftest misc.378
  - [ ] (deftest misc.379
  - [ ] (deftest misc.380
  - [ ] (deftest misc.381
  - [ ] (deftest misc.382
  - [ ] (deftest misc.383
  - [ ] (deftest misc.384
  - [ ] (deftest misc.385
  - [ ] (deftest misc.386
  - [ ] (deftest misc.387
  - [ ] (deftest misc.388
  - [ ] (deftest misc.389
  - [ ] (deftest misc.390
  - [ ] (deftest misc.391
  - [ ] (deftest misc.392
  - [ ] (deftest misc.393
  - [ ] (deftest misc.393a
  - [ ] (deftest misc.394
  - [ ] (deftest misc.395
  - [ ] (deftest misc.396
  - [ ] (deftest misc.397
  - [ ] (deftest misc.398
  - [ ] (deftest misc.399
  - [ ] (deftest misc.400
  - [ ] (deftest misc.401
  - [ ] (deftest misc.402
  - [ ] (deftest misc.403
  - [ ] (deftest misc.404
  - [ ] (deftest misc.405
  - [ ] (deftest misc.406
  - [ ] (deftest misc.407
  - [ ] (deftest misc.408
  - [ ] (deftest misc.409
  - [ ] (deftest misc.410
  - [ ] (deftest misc.411
  - [ ] (deftest misc.412
  - [ ] (deftest misc.413
  - [ ] (deftest misc.414
  - [ ] (deftest misc.415
  - [ ] (deftest misc.416
  - [ ] (deftest misc.417
  - [ ] (deftest misc.418
  - [ ] (deftest misc.419
  - [ ] (deftest misc.420
  - [ ] (deftest misc.421
  - [ ] (deftest misc.422
  - [ ] (deftest misc.423
  - [ ] (deftest misc.424
  - [ ] (deftest misc.425
  - [ ] (deftest misc.426
  - [ ] (deftest misc.427
  - [ ] (deftest misc.428
  - [ ] (deftest misc.429
  - [ ] (deftest misc.430
  - [ ] (deftest misc.431
  - [ ] (deftest misc.432
  - [ ] (deftest misc.433
  - [ ] (deftest misc.434
  - [ ] (deftest misc.435
  - [ ] (deftest misc.436
  - [ ] (deftest misc.437
  - [ ] (deftest misc.438
  - [ ] (deftest misc.439
  - [ ] (deftest misc.440
  - [ ] (deftest misc.441
  - [ ] (deftest misc.442
  - [ ] (deftest misc.443
  - [ ] (deftest misc.446
  - [ ] (deftest misc.447
  - [ ] (deftest misc.448
  - [ ] (deftest misc.449
  - [ ] (deftest misc.450
  - [ ] (deftest misc.451
  - [ ] (deftest misc.452
  - [ ] (deftest misc.453
  - [ ] (deftest misc.454
  - [ ] (deftest misc.455
  - [ ] (deftest misc.456
  - [ ] (deftest misc.457
  - [ ] (deftest misc.458
  - [ ] (deftest misc.459
  - [ ] (deftest misc.460
  - [ ] (deftest misc.461
  - [ ] (deftest misc.462
  - [ ] (deftest misc.463
  - [ ] (deftest misc.464
  - [ ] (deftest misc.465
  - [ ] (deftest misc.466
  - [ ] (deftest misc.467
  - [ ] (deftest misc.468
  - [ ] (deftest misc.469
  - [ ] (deftest misc.470
  - [ ] (deftest misc.471
  - [ ] (deftest misc.472
  - [ ] (deftest misc.473
  - [ ] (deftest misc.474
  - [ ] (deftest misc.475
  - [ ] (deftest misc.476
  - [ ] (deftest misc.477
  - [ ] (deftest misc.478
  - [ ] (deftest misc.479
  - [ ] (deftest misc.480
  - [ ] (deftest misc.481
  - [ ] (deftest misc.482
  - [ ] (deftest misc.483
  - [ ] (deftest misc.484
  - [ ] (deftest misc.485
  - [ ] (deftest misc.486
  - [ ] (deftest misc.487
  - [ ] (deftest misc.488
  - [ ] (deftest misc.489
  - [ ] (deftest misc.490
  - [ ] (deftest misc.491
  - [ ] (deftest misc.492
  - [ ] (deftest misc.493
  - [ ] (deftest misc.494
  - [ ] (deftest misc.495
  - [ ] (deftest misc.496
  - [ ] (deftest misc.497
  - [ ] (deftest misc.498
  - [ ] (deftest misc.499
  - [ ] (deftest misc.500
  - [ ] (deftest misc.501
  - [ ] (deftest misc.502
  - [ ] (deftest misc.503
  - [ ] (deftest misc.504
  - [ ] (deftest misc.505
  - [ ] (deftest misc.506
  - [ ] (deftest misc.507
  - [ ] (deftest misc.508
  - [ ] (deftest misc.509
  - [ ] (deftest misc.510
  - [ ] (deftest misc.511
  - [ ] (deftest misc.512
  - [ ] (deftest misc.513
  - [ ] (deftest misc.514
  - [ ] (deftest misc.515
  - [ ] (deftest misc.516
  - [ ] (deftest misc.517
  - [ ] (deftest misc.518
  - [ ] (deftest misc.519
  - [ ] (deftest misc.520
  - [ ] (deftest misc.521
  - [ ] (deftest misc.522
  - [ ] (deftest misc.523
  - [ ] (deftest misc.524
  - [ ] (deftest misc.525
  - [ ] (deftest misc.526
  - [ ] (deftest misc.527
  - [ ] (deftest misc.528
  - [ ] (deftest misc.529
  - [ ] (deftest misc.530
  - [ ] (deftest misc.532
  - [ ] (deftest misc.533
  - [ ] (deftest misc.534
  - [ ] (deftest misc.535
  - [ ] (deftest misc.536
  - [ ] (deftest misc.537
  - [ ] (deftest misc.538
  - [ ] (deftest misc.539
  - [ ] (deftest misc.540
  - [ ] (deftest misc.541
  - [ ] (deftest misc.542
  - [ ] (deftest misc.543
  - [ ] (deftest misc.544
  - [ ] (deftest misc.545
  - [ ] (deftest misc.546
  - [ ] (deftest misc.547
  - [ ] (deftest misc.548
  - [ ] (deftest misc.549
  - [ ] (deftest misc.550
  - [ ] (deftest misc.551
  - [ ] (deftest misc.551a
  - [ ] (deftest misc.552
  - [ ] (deftest misc.553
  - [ ] (deftest misc.554
  - [ ] (deftest misc.555
  - [ ] (deftest misc.556
  - [ ] (deftest misc.557
  - [ ] (deftest misc.558
  - [ ] (deftest misc.559
  - [ ] (deftest misc.560
  - [ ] (deftest misc.561
  - [ ] (deftest misc.562
  - [ ] (deftest misc.563
  - [ ] (deftest misc.564
  - [ ] (deftest misc.565
  - [ ] (deftest misc.566
  - [ ] (deftest misc.567
  - [ ] (deftest misc.568
  - [ ] (deftest misc.569
  - [ ] (deftest misc.570
  - [ ] (deftest misc.571
  - [ ] (deftest misc.572
  - [ ] (deftest misc.573
  - [ ] (deftest misc.574
  - [ ] (deftest misc.575
  - [ ] (deftest misc.576
  - [ ] (deftest misc.577
  - [ ] (deftest misc.578
  - [ ] (deftest misc.579
  - [ ] (deftest misc.580
  - [ ] (deftest misc.581
  - [ ] (deftest misc.581a
  - [ ] (deftest misc.582
  - [ ] (deftest misc.583
  - [ ] (deftest misc.584
  - [ ] (deftest misc.585
  - [ ] (deftest misc.586
  - [ ] (deftest misc.587
  - [ ] (deftest misc.588
  - [ ] (deftest misc.589
  - [ ] (deftest misc.590
  - [ ] (deftest misc.591
  - [ ] (deftest misc.592
  - [ ] (deftest misc.593
  - [ ] (deftest misc.594
  - [ ] (deftest misc.595
  - [ ] (deftest misc.596
  - [ ] (deftest misc.597
  - [ ] (deftest misc.598
  - [ ] (deftest misc.599
  - [ ] (deftest misc.600
  - [ ] (deftest misc.601
  - [ ] (deftest misc.602
  - [ ] (deftest misc.603
  - [ ] (deftest misc.604
  - [ ] (deftest misc.605
  - [ ] (deftest misc.606
  - [ ] (deftest misc.607
  - [ ] (deftest misc.608
  - [ ] (deftest misc.609
  - [ ] (deftest misc.610
  - [ ] (deftest misc.611
  - [ ] (deftest misc.612
  - [ ] (deftest misc.613
  - [ ] (deftest misc.614
  - [ ] (deftest misc.615
  - [ ] (deftest misc.616
  - [ ] (deftest misc.617
  - [ ] (deftest misc.618
  - [ ] (deftest misc.619
  - [ ] (deftest misc.620
  - [ ] (deftest misc.621
  - [ ] (deftest misc.622
  - [ ] (deftest misc.623
  - [ ] (deftest misc.624
  - [ ] (deftest misc.625
  - [ ] (deftest misc.625a
  - [ ] (deftest misc.626
  - [ ] (deftest misc.628
  - [ ] (deftest misc.629
  - [ ] (deftest misc.630
  - [ ] (deftest misc.631
  - [ ] (deftest misc.632
  - [ ] (deftest misc.633
  - [ ] (deftest misc.634
  - [ ] (deftest misc.635
  - [ ] (deftest misc.636
  - [ ] (deftest misc.637
  - [ ] (deftest misc.638
  - [ ] (deftest misc.639
  - [ ] (deftest misc.640
  - [ ] (deftest misc.641
  - [ ] (deftest misc.642
  - [ ] (deftest misc.643
  - [ ] (deftest misc.644
  - [ ] (deftest misc.645
  - [ ] (deftest misc.646
  - [ ] (deftest misc.647
  - [ ] (deftest misc.648
  - [ ] (deftest misc.649
  - [ ] (deftest misc.650
  - [ ] (deftest misc.651
  - [ ] (deftest misc.652
  - [ ] (deftest misc.653
  - [ ] (deftest misc.654
  - [ ] (deftest misc.655
  - [ ] (deftest misc.656
  - [ ] (deftest misc.657
**** misc-cmucl-type-prop.lsp [0%]
  - [ ] (deftest cmucl-type-prop.1
  - [ ] (deftest cmucl-type-prop.2
  - [ ] (deftest cmucl-type-prop.3
  - [ ] (deftest cmucl-type-prop.4
  - [ ] (deftest cmucl-type-prop.5
  - [ ] (deftest cmucl-type-prop.6
  - [ ] (deftest cmucl-type-prop.7
  - [ ] (deftest cmucl-type-prop.8
  - [ ] (deftest cmucl-type-prop.9
  - [ ] (deftest cmucl-type-prop.10
  - [ ] (deftest cmucl-type-prop.11
  - [ ] (deftest cmucl-type-prop.12
  - [ ] (deftest cmucl-type-prop.13
  - [ ] (deftest cmucl-type-prop.14
  - [ ] (deftest cmucl-type-prop.15
  - [ ] (deftest cmucl-type-prop.16
  - [ ] (deftest cmucl-type-prop.17
  - [ ] (deftest cmucl-type-prop.18
  - [ ] (deftest cmucl-type-prop.19
  - [ ] (deftest cmucl-type-prop.20
  - [ ] (deftest cmucl-type-prop.21
  - [ ] (deftest cmucl-type-prop.22
  - [ ] (deftest cmucl-type-prop.23
  - [ ] (deftest cmucl-type-prop.24
  - [ ] (deftest cmucl-type-prop.25
  - [ ] (deftest cmucl-type-prop.26
  - [ ] (deftest cmucl-type-prop.27
  - [ ] (deftest cmucl-type-prop.28
  - [ ] (deftest cmucl-type-prop.29
  - [ ] (deftest cmucl-type-prop.30
  - [ ] (deftest cmucl-type-prop.31
  - [ ] (deftest cmucl-type-prop.32
  - [ ] (deftest cmucl-type-prop.33
  - [ ] (deftest cmucl-type-prop.34
*** files [0%]
**** file-write-date.lsp [40%]
  - [ ] (deftest file-write-date.1
  - [ ] (deftest file-write-date.2
  - [ ] (deftest file-write-date.3
  - [ ] (deftest file-write-date.4
  - [ ] (deftest file-write-date.5
  - [ ] (deftest file-write-date.6
  - [X] (deftest file-write-date.error.1
  - [X] (deftest file-write-date.error.2
  - [X] (deftest file-write-date.error.3
  - [X] (deftest file-write-date.error.4
**** rename-file.lsp [14%]
  - [ ] (deftest rename-file.1
  - [ ] (deftest rename-file.2
  - [ ] (deftest rename-file.4
  - [ ] (deftest rename-file.5
  - [ ] (deftest rename-file.6
  - [ ] (deftest rename-file.7
  - [X] (deftest rename-file.error.1
**** probe-file.lsp [66%]
  - [X] (deftest probe-file.1
  - [ ] (deftest probe-file.2
  - [ ] (deftest probe-file.3
  - [X] (deftest probe-file.4
  - [ ] (deftest probe-file.5
  - [X] (deftest probe-file.error.1
  - [X] (deftest probe-file.error.2
  - [X] (deftest probe-file.error.3
  - [X] (deftest probe-file.error.4
**** ensure-directories-exist.lsp [18%]
  - [ ] (deftest ensure-directories-exist.1
  - [ ] (deftest ensure-directories-exist.2
  - [ ] (deftest ensure-directories-exist.3
  - [ ] (deftest ensure-directories-exist.4
  - [ ] (deftest ensure-directories-exist.5
  - [ ] (deftest ensure-directories-exist.6
  - [ ] (deftest ensure-directories-exist.7
  - [ ] (deftest ensure-directories-exist.8
  - [ ] (deftest ensure-directories-exist.9
  - [X] (deftest ensure-directories-exist.error.1
  - [X] (deftest ensure-directories-exist.error.2
**** file-error.lsp [22%]
  - [ ] (deftest file-error.1
  - [ ] (deftest file-error-pathname.1
  - [ ] (deftest file-error-pathname.2
  - [ ] (deftest file-error-pathname.3
  - [ ] (deftest file-error-pathname.4
  - [ ] (deftest file-error-pathname.5
  - [ ] (deftest file-error-pathname.6
  - [X] (deftest file-error-pathname.error.1
  - [X] (deftest file-error-pathname.error.2
**** file-author.lsp [36%]
  - [ ] (deftest file-author.1
  - [ ] (deftest file-author.2
  - [ ] (deftest file-author.3
  - [ ] (deftest file-author.4
  - [ ] (deftest file-author.5
  - [ ] (deftest file-author.6
  - [ ] (deftest file-author.7
  - [X] (deftest file-author.error.1
  - [X] (deftest file-author.error.2
  - [X] (deftest file-author.error.3
  - [X] (deftest file-author.error.4
**** directory.lsp [30%]
  - [X] (deftest directory.1
  - [ ] (deftest directory.2
  - [ ] (deftest directory.3
  - [ ] (deftest directory.4
  - [ ] (deftest directory.5
  - [ ] (deftest directory.6
  - [ ] (deftest directory.7
  - [X] (deftest directory.8
  - [ ] (deftest directory.9
  - [X] (deftest directory.error.1
**** delete-file.lsp [12%]
  - [ ] (deftest delete-file.1
  - [ ] (deftest delete-file.2
  - [ ] (deftest delete-file.3
  - [ ] (deftest delete-file.4
  - [ ] (deftest delete-file.5
  - [X] (deftest delete-file.error.1
  - [ ] (deftest delete-file.error.2
  - [ ] (deftest delete-file.error.3
**** truename.lsp [50%]
  - [ ] (deftest truename.1
  - [ ] (deftest truename.2
  - [ ] (deftest truename.3
  - [ ] (deftest truename.4
  - [ ] (deftest truename.5
  - [ ] (deftest truename.6
  - [X] (deftest truename.error.1
  - [X] (deftest truename.error.2
  - [X] (deftest truename.error.3
  - [X] (deftest truename.error.4
  - [X] (deftest truename.error.5
  - [X] (deftest truename.error.6
*** iteration [0%]
**** dolist.lsp [65%]
  - [X] (deftest dolist.1
  - [X] (deftest dolist.2
  - [X] (deftest dolist.3
  - [X] (deftest dolist.4
  - [ ] (deftest dolist.5
  - [ ] (deftest dolist.6
  - [X] (deftest dolist.7
  - [X] (deftest dolist.8
  - [X] (deftest dolist.9
  - [X] (deftest dolist.10
  - [X] (deftest dolist.11
  - [X] (deftest dolist.12
  - [X] (deftest dolist.13
  - [X] (deftest dolist.14
  - [X] (deftest dolist.15
  - [ ] (deftest dolist.16
  - [ ] (deftest dolist.17
  - [ ] (deftest dolist.18
  - [ ] (deftest dolist.19
  - [ ] (def-macro-test dolist.error.1
**** loop.lsp [77%]
  - [X] (deftest sloop.1
  - [X] (deftest sloop.2
  - [X] (deftest sloop.3
  - [X] (deftest sloop.4
  - [X] (deftest sloop.5
  - [X] (deftest sloop.6
  - [X] (deftest sloop.7
  - [ ] (def-macro-test loop.error.1 (loop))
  - [ ] (deftest loop-finish.error.1
**** loop4.lsp [53%]
  - [X] (deftest loop.4.1
  - [X] (deftest loop.4.2
  - [ ] (deftest loop.4.3
  - [X] (deftest loop.4.4
  - [X] (deftest loop.4.5
  - [X] (deftest loop.4.6
  - [X] (deftest loop.4.7
  - [X] (deftest loop.4.8
  - [ ] (deftest loop.4.9
  - [ ] (deftest loop.4.10
  - [ ] (deftest loop.4.11
  - [ ] (deftest loop.4.12
  - [ ] (deftest loop.4.13
**** loop16.lsp [86%]
  - [X] (deftest loop.16.30
  - [X] (deftest loop.16.31
  - [X] (deftest loop.16.32
  - [X] (deftest loop.16.33
  - [X] (deftest loop.16.34
  - [X] (deftest loop.16.35
  - [X] (deftest loop.16.36
  - [X] (deftest loop.16.37
  - [X] (deftest loop.16.38
  - [X] (deftest loop.16.39
  - [X] (deftest loop.16.40
  - [X] (deftest loop.16.41
  - [X] (deftest loop.16.42
  - [X] (deftest loop.16.43
  - [X] (deftest loop.16.44
  - [X] (deftest loop.16.45
  - [X] (deftest loop.16.46
  - [X] (deftest loop.16.47
  - [X] (deftest loop.16.48
  - [X] (deftest loop.16.49
  - [X] (deftest loop.16.50
  - [X] (deftest loop.16.51
  - [X] (deftest loop.16.52
  - [X] (deftest loop.16.53
  - [X] (deftest loop.16.54
  - [X] (deftest loop.16.55
  - [X] (deftest loop.16.56
  - [X] (deftest loop.16.57
  - [X] (deftest loop.16.58
  - [X] (deftest loop.16.59
  - [X] (deftest loop.16.60
  - [X] (deftest loop.16.61
  - [X] (deftest loop.16.62
  - [X] (deftest loop.16.63
  - [X] (deftest loop.16.64
  - [X] (deftest loop.16.65
  - [X] (deftest loop.16.66
  - [X] (deftest loop.16.67
  - [X] (deftest loop.16.68
  - [X] (deftest loop.16.69
  - [ ] (deftest loop.16.70
  - [ ] (deftest loop.16.71
  - [ ] (deftest loop.16.72
  - [ ] (deftest loop.16.73
  - [ ] (deftest loop.16.74
  - [ ] (deftest loop.16.75
**** loop14.lsp [91%]
  - [X] (deftest loop.14.1
  - [X] (deftest loop.14.2
  - [X] (deftest loop.14.3
  - [X] (deftest loop.14.4
  - [X] (deftest loop.14.5
  - [X] (deftest loop.14.6
  - [X] (deftest loop.14.7
  - [X] (deftest loop.14.8
  - [X] (deftest loop.14.9
  - [X] (deftest loop.14.10
  - [X] (deftest loop.14.11
  - [X] (deftest loop.14.12
  - [X] (deftest loop.14.13
  - [X] (deftest loop.14.14
  - [X] (deftest loop.14.15
  - [X] (deftest loop.14.16
  - [X] (deftest loop.14.17
  - [X] (deftest loop.14.18
  - [X] (deftest loop.14.19
  - [X] (deftest loop.14.20
  - [X] (deftest loop.14.21
  - [X] (deftest loop.14.22
  - [X] (deftest loop.14.23
  - [X] (deftest loop.14.24
  - [X] (deftest loop.14.25
  - [X] (deftest loop.14.26
  - [X] (deftest loop.14.27
  - [X] (deftest loop.14.28
  - [X] (deftest loop.14.29
  - [X] (deftest loop.14.30
  - [X] (deftest loop.14.31
  - [X] (deftest loop.14.32
  - [X] (deftest loop.14.33
  - [X] (deftest loop.14.34
  - [X] (deftest loop.14.35
  - [X] (deftest loop.14.36
  - [X] (deftest loop.14.37
  - [X] (deftest loop.14.38
  - [X] (deftest loop.14.39
  - [X] (deftest loop.14.40
  - [X] (deftest loop.14.41
  - [X] (deftest loop.14.42
  - [X] (deftest loop.14.43
  - [X] (deftest loop.14.44
  - [X] (deftest loop.14.45
  - [ ] (deftest loop.14.46
  - [ ] (deftest loop.14.47
  - [ ] (deftest loop.14.48
  - [ ] (deftest loop.14.49
**** loop17.lsp [94%]
  - [X] (deftest loop.17.1
  - [X] (deftest loop.17.2
  - [X] (deftest loop.17.3
  - [X] (deftest loop.17.4
  - [X] (deftest loop.17.5
  - [X] (deftest loop.17.6
  - [X] (deftest loop.17.7
  - [X] (deftest loop.17.8
  - [X] (deftest loop.17.9
  - [X] (deftest loop.17.10
  - [X] (deftest loop.17.11
  - [X] (deftest loop.17.12
  - [X] (deftest loop.17.13
  - [X] (deftest loop.17.14
  - [X] (deftest loop.17.20
  - [X] (deftest loop.17.21
  - [ ] (deftest loop.17.22
**** loop3.lsp [55%]
  - [X] (deftest loop.3.1
  - [X] (deftest loop.3.2
  - [X] (deftest loop.3.3
  - [X] (deftest loop.3.4
  - [ ] (deftest loop.3.5
  - [ ] (deftest loop.3.6
  - [ ] (deftest loop.3.7
  - [X] (deftest loop.3.8
  - [X] (deftest loop.3.9
  - [ ] (deftest loop.3.10
  - [ ] (deftest loop.3.11
  - [ ] (deftest loop.3.12
  - [ ] (deftest loop.3.13
  - [X] (deftest loop.3.14
  - [X] (deftest loop.3.15
  - [X] (deftest loop.3.16
  - [X] (deftest loop.3.17
  - [ ] (deftest loop.3.18
  - [X] (deftest loop.3.19
  - [X] (deftest loop.3.20
  - [X] (deftest loop.3.21
  - [X] (deftest loop.3.22
  - [X] (deftest loop.3.23
  - [ ] (deftest loop.3.24
  - [ ] (deftest loop.3.25
  - [ ] (deftest loop.3.26
  - [ ] (deftest loop.3.27
**** dostar.lsp [58%]
  - [X] (deftest do*.1
  - [X] (deftest do*.2
  - [X] (deftest do*.3
  - [X] (deftest do*.4
  - [X] (deftest do*.5
  - [X] (deftest do*.6
  - [X] (deftest do*.7
  - [X] (deftest do*.8
  - [X] (deftest do*.9
  - [X] (deftest do*.10
  - [X] (deftest do*.11
  - [X] (deftest do*.12
  - [X] (deftest do*.13
  - [ ] (deftest do*.14
  - [X] (deftest do*.15
  - [ ] (deftest do*.16
  - [ ] (deftest do*.17
  - [ ] (deftest do*.18
  - [ ] (deftest do*.19
  - [ ] (deftest do*.20
  - [ ] (deftest do*.21
  - [ ] (deftest do*.22
  - [ ] (deftest do*.23
  - [ ] (def-macro-test do*.error.1
**** dotimes.lsp [74%]
  - [X] (deftest dotimes.1
  - [X] (deftest dotimes.2
  - [X] (deftest dotimes.3
  - [X] (deftest dotimes.3a
  - [X] (deftest dotimes.4
  - [X] (deftest dotimes.5
  - [X] (deftest dotimes.6
  - [X] (deftest dotimes.7
  - [X] (deftest dotimes.8
  - [X] (deftest dotimes.9
  - [X] (deftest dotimes.10
  - [X] (deftest dotimes.11
  - [ ] (deftest dotimes.12
  - [X] (deftest dotimes.13
  - [X] (deftest dotimes.14
  - [X] (deftest dotimes.15
  - [X] (deftest dotimes.16
  - [ ] (deftest dotimes.17
  - [ ] (deftest dotimes.17a
  - [ ] (deftest dotimes.18
  - [ ] (deftest dotimes.18a
  - [X] (deftest dotimes.19
  - [X] (deftest dotimes.20
  - [X] (deftest dotimes.21
  - [X] (deftest dotimes.22
  - [X] (deftest dotimes.23
  - [X] (deftest dotimes.23a
  - [X] (deftest dotimes.24
  - [ ] (deftest dotimes.25
  - [ ] (deftest dotimes.26
  - [ ] (def-macro-test dotimes.error.1
**** loop11.lsp [96%]
  - [X] (deftest loop.11.1
  - [X] (deftest loop.11.2
  - [X] (deftest loop.11.3
  - [X] (deftest loop.11.4
  - [X] (deftest loop.11.5
  - [X] (deftest loop.11.6
  - [X] (deftest loop.11.7
  - [X] (deftest loop.11.10
  - [X] (deftest loop.11.11
  - [X] (deftest loop.11.12
  - [X] (deftest loop.11.13
  - [X] (deftest loop.11.14
  - [X] (deftest loop.11.15
  - [X] (deftest loop.11.16
  - [X] (deftest loop.11.17
  - [X] (deftest loop.11.18
  - [X] (deftest loop.11.20
  - [X] (deftest loop.11.21
  - [X] (deftest loop.11.22
  - [X] (deftest loop.11.23
  - [X] (deftest loop.11.24
  - [X] (deftest loop.11.25
  - [X] (deftest loop.11.26
  - [X] (deftest loop.11.27
  - [X] (deftest loop.11.28
  - [X] (deftest loop.11.29
  - [X] (deftest loop.11.30
  - [X] (deftest loop.11.31
  - [X] (deftest loop.11.32
  - [X] (deftest loop.11.33
  - [X] (deftest loop.11.34
  - [ ] (deftest loop.11.35
**** loop13.lsp [95%]
  - [X] (deftest loop.13.1
  - [X] (deftest loop.13.2
  - [X] (deftest loop.13.3
  - [X] (deftest loop.13.4
  - [X] (deftest loop.13.5
  - [X] (deftest loop.13.6
  - [X] (deftest loop.13.7
  - [ ] (deftest loop.13.8
  - [X] (deftest loop.13.9
  - [X] (deftest loop.13.10
  - [X] (deftest loop.13.11
  - [X] (deftest loop.13.12
  - [X] (deftest loop.13.13
  - [X] (deftest loop.13.14
  - [X] (deftest loop.13.15
  - [X] (deftest loop.13.16
  - [X] (deftest loop.13.17
  - [X] (deftest loop.13.18
  - [X] (deftest loop.13.19
  - [X] (deftest loop.13.20
  - [X] (deftest loop.13.21
  - [X] (deftest loop.13.22
  - [X] (deftest loop.13.23
  - [X] (deftest loop.13.24
  - [X] (deftest loop.13.25
  - [X] (deftest loop.13.26
  - [X] (deftest loop.13.27
  - [X] (deftest loop.13.28
  - [X] (deftest loop.13.29
  - [X] (deftest loop.13.30
  - [X] (deftest loop.13.31
  - [X] (deftest loop.13.32
  - [X] (deftest loop.13.33
  - [X] (deftest loop.13.34
  - [X] (deftest loop.13.35
  - [X] (deftest loop.13.36
  - [X] (deftest loop.13.37
  - [X] (deftest loop.13.38
  - [X] (deftest loop.13.39
  - [X] (deftest loop.13.40
  - [X] (deftest loop.13.41
  - [X] (deftest loop.13.42
  - [X] (deftest loop.13.43
  - [X] (deftest loop.13.44
  - [X] (deftest loop.13.45
  - [X] (deftest loop.13.46
  - [X] (deftest loop.13.47
  - [X] (deftest loop.13.52
  - [X] (deftest loop.13.53
  - [X] (deftest loop.13.54
  - [X] (deftest loop.13.55
  - [X] (deftest loop.13.56
  - [X] (deftest loop.13.57
  - [X] (deftest loop.13.58
  - [X] (deftest loop.13.59
  - [X] (deftest loop.13.60
  - [X] (deftest loop.13.61
  - [X] (deftest loop.13.62
  - [X] (deftest loop.13.63
  - [X] (deftest loop.13.64
  - [X] (deftest loop.13.65
  - [X] (deftest loop.13.66
  - [X] (deftest loop.13.67
  - [X] (deftest loop.13.68
  - [X] (deftest loop.13.69
  - [X] (deftest loop.13.70
  - [X] (deftest loop.13.71
  - [X] (deftest loop.13.72
  - [X] (deftest loop.13.73
  - [X] (deftest loop.13.74
  - [X] (deftest loop.13.75
  - [X] (deftest loop.13.76
  - [X] (deftest loop.13.77
  - [X] (deftest loop.13.78
  - [X] (deftest loop.13.79
  - [X] (deftest loop.13.80
  - [X] (deftest loop.13.81
  - [X] (deftest loop.13.82
  - [X] (deftest loop.13.83
  - [X] (deftest loop.13.84
  - [X] (deftest loop.13.85
  - [X] (deftest loop.13.86
  - [X] (deftest loop.13.87
  - [ ] (deftest loop.13.88
  - [ ] (deftest loop.13.89
  - [ ] (deftest loop.13.90
**** loop1.lsp [75%]
  - [X] (deftest loop.1.1
  - [X] (deftest loop.1.2
  - [X] (deftest loop.1.3
  - [X] (deftest loop.1.4
  - [X] (deftest loop.1.5
  - [X] (deftest loop.1.6
  - [X] (deftest loop.1.7
  - [X] (deftest loop.1.8
  - [X] (deftest loop.1.9
  - [X] (deftest loop.1.10
  - [X] (deftest loop.1.11
  - [X] (deftest loop.1.12
  - [X] (deftest loop.1.13
  - [X] (deftest loop.1.14
  - [X] (deftest loop.1.15
  - [X] (deftest loop.1.16
  - [X] (deftest loop.1.17
  - [X] (deftest loop.1.18
  - [X] (deftest loop.1.19
  - [X] (deftest loop.1.20
  - [ ] (deftest loop.1.21
  - [X] (deftest loop.1.22
  - [X] (deftest loop.1.23
  - [X] (deftest loop.1.24
  - [X] (deftest loop.1.25
  - [X] (deftest loop.1.26
  - [X] (deftest loop.1.27
  - [X] (deftest loop.1.28
  - [X] (deftest loop.1.29
  - [X] (deftest loop.1.30
  - [X] (deftest loop.1.31
  - [X] (deftest loop.1.32
  - [X] (deftest loop.1.33
  - [X] (deftest loop.1.34
  - [X] (deftest loop.1.35
  - [X] (deftest loop.1.36
  - [X] (deftest loop.1.37
  - [X] (deftest loop.1.38
  - [X] (deftest loop.1.39
  - [X] (deftest loop.1.40
  - [X] (deftest loop.1.41
  - [X] (deftest loop.1.42
  - [X] (deftest loop.1.43
  - [ ] (deftest loop.1.44
  - [ ] (deftest loop.1.45
  - [ ] (deftest loop.1.46
  - [ ] (deftest loop.1.47
  - [ ] (deftest loop.1.48
  - [ ] (deftest loop.1.49
  - [X] (deftest loop.1.50
  - [X] (deftest loop.1.51
  - [X] (deftest loop.1.52
  - [X] (deftest loop.1.53
  - [X] (deftest loop.1.54
  - [X] (deftest loop.1.55
  - [X] (deftest loop.1.56
  - [ ] (deftest loop.1.57
  - [ ] (deftest loop.1.58
  - [ ] (deftest loop.1.59
  - [ ] (deftest loop.1.60
  - [ ] (deftest loop.1.61
  - [ ] (deftest loop.1.62
  - [ ] (deftest loop.1.63
  - [ ] (deftest loop.1.64
  - [ ] (deftest loop.1.65
**** loop10.lsp [89%]
  - [X] (deftest loop.10.1
  - [X] (deftest loop.10.2
  - [X] (deftest loop.10.3
  - [X] (deftest loop.10.4
  - [X] (deftest loop.10.5
  - [X] (deftest loop.10.6
  - [X] (deftest loop.10.7
  - [X] (deftest loop.10.8
  - [X] (deftest loop.10.9
  - [X] (deftest loop.10.10
  - [X] (deftest loop.10.11
  - [X] (deftest loop.10.12
  - [X] (deftest loop.10.13
  - [X] (deftest loop.10.14
  - [X] (deftest loop.10.20
  - [X] (deftest loop.10.21
  - [X] (deftest loop.10.22
  - [X] (deftest loop.10.23
  - [X] (deftest loop.10.24
  - [X] (deftest loop.10.25
  - [X] (deftest loop.10.26
  - [X] (deftest loop.10.27
  - [X] (deftest loop.10.28
  - [X] (deftest loop.10.29
  - [X] (deftest loop.10.30
  - [X] (deftest loop.10.31
  - [X] (deftest loop.10.32
  - [X] (deftest loop.10.33
  - [X] (deftest loop.10.34
  - [X] (deftest loop.10.35
  - [X] (deftest loop.10.36
  - [X] (deftest loop.10.37
  - [X] (deftest loop.10.38
  - [X] (deftest loop.10.39
  - [X] (deftest loop.10.40
  - [X] (deftest loop.10.41
  - [X] (deftest loop.10.42
  - [X] (deftest loop.10.43
  - [X] (deftest loop.10.44
  - [X] (deftest loop.10.45
  - [X] (deftest loop.10.46
  - [X] (deftest loop.10.47
  - [X] (deftest loop.10.48
  - [X] (deftest loop.10.49
  - [X] (deftest loop.10.50
  - [X] (deftest loop.10.51
  - [X] (deftest loop.10.52
  - [X] (deftest loop.10.53
  - [X] (deftest loop.10.54
  - [X] (deftest loop.10.55
  - [X] (deftest loop.10.56
  - [X] (deftest loop.10.57
  - [X] (deftest loop.10.58
  - [X] (deftest loop.10.58a
  - [X] (deftest loop.10.59
  - [X] (deftest loop.10.60
  - [X] (deftest loop.10.61
  - [X] (deftest loop.10.70
  - [X] (deftest loop.10.71
  - [X] (deftest loop.10.72
  - [ ] (deftest loop.10.73
  - [X] (deftest loop.10.74
  - [X] (deftest loop.10.75
  - [X] (deftest loop.10.76
  - [X] (deftest loop.10.77
  - [X] (deftest loop.10.78
  - [X] (deftest loop.10.79
  - [X] (deftest loop.10.80
  - [X] (deftest loop.10.81
  - [X] (deftest loop.10.82
  - [X] (deftest loop.10.83
  - [X] (deftest loop.10.84
  - [X] (deftest loop.10.85
  - [X] (deftest loop.10.86
  - [ ] (deftest loop.10.87
  - [X] (deftest loop.10.88
  - [X] (deftest loop.10.89
  - [X] (deftest loop.10.90
  - [X] (deftest loop.10.91
  - [X] (deftest loop.10.92
  - [X] (deftest loop.10.93
  - [X] (deftest loop.10.94
  - [X] (deftest loop.10.95
  - [X] (deftest loop.10.96
  - [X] (deftest loop.10.97
  - [X] (deftest loop.10.98
  - [X] (deftest loop.10.99
  - [X] (deftest loop.10.100
  - [X] (deftest loop.10.101
  - [X] (deftest loop.10.102
  - [X] (deftest loop.10.103
  - [X] (deftest loop.10.104
  - [ ] (deftest loop.10.105
  - [ ] (deftest loop.10.106
  - [ ] (deftest loop.10.107
  - [ ] (deftest loop.10.108
  - [ ] (deftest loop.10.109
  - [ ] (deftest loop.10.110
  - [ ] (deftest loop.10.111
  - [ ] (deftest loop.10.112
  - [ ] (deftest loop.10.113
**** loop7.lsp [8%]
  - [ ] (cl-test::=in-package "CL-TEST")
  - [ ] (cl-test::=in-package "CL-TEST")
  - [ ] (deftest loop.7.1
  - [ ] (deftest loop.7.2
  - [ ] (deftest loop.7.3
  - [ ] (deftest loop.7.4
  - [ ] (deftest loop.7.5
  - [ ] (deftest loop.7.6
  - [ ] (deftest loop.7.7
  - [ ] (deftest loop.7.8
  - [ ] (deftest loop.7.9
  - [ ] (deftest loop.7.10
  - [ ] (deftest loop.7.11
  - [ ] (deftest loop.7.12
  - [ ] (deftest loop.7.13
  - [ ] (deftest loop.7.14
  - [ ] (deftest loop.7.15
  - [ ] (deftest loop.7.16
  - [ ] (deftest loop.7.17
  - [X] (deftest loop.7.18
  - [X] (deftest loop.7.19
  - [X] (deftest loop.7.20
  - [ ] (deftest loop.7.21
  - [ ] (deftest loop.7.22
  - [ ] (deftest loop.7.23
  - [ ] (deftest loop.7.24
  - [ ] (deftest loop.7.25
  - [ ] (deftest loop.7.26
  - [ ] (deftest loop.7.27
  - [ ] (deftest loop.7.28
  - [ ] (deftest loop.7.29
  - [ ] (deftest loop.7.30
  - [ ] (deftest loop.7.31
  - [ ] (deftest loop.7.32
  - [ ] (deftest loop.7.33
  - [ ] (deftest loop.7.34
  - [ ] (deftest loop.7.35
**** loop2.lsp [57%]
  - [X] (deftest loop.2.1
  - [X] (deftest loop.2.2
  - [X] (deftest loop.2.3
  - [X] (deftest loop.2.4
  - [ ] (deftest loop.2.5
  - [ ] (deftest loop.2.6
  - [ ] (deftest loop.2.7
  - [X] (deftest loop.2.8
  - [X] (deftest loop.2.9
  - [ ] (deftest loop.2.10
  - [ ] (deftest loop.2.11
  - [ ] (deftest loop.2.12
  - [ ] (deftest loop.2.13
  - [X] (deftest loop.2.14
  - [X] (deftest loop.2.15
  - [X] (deftest loop.2.16
  - [X] (deftest loop.2.17
  - [ ] (deftest loop.2.18
  - [X] (deftest loop.2.19
  - [X] (deftest loop.2.20
  - [X] (deftest loop.2.21
  - [X] (deftest loop.2.22
  - [X] (deftest loop.2.23
  - [ ] (deftest loop.2.24
  - [ ] (deftest loop.2.25
  - [ ] (deftest loop.2.26
**** loop5.lsp [11%]
  - [X] (deftest loop.5.1
  - [X] (deftest loop.5.2
  - [ ] (deftest loop.5.3
  - [X] (deftest loop.5.4
  - [X] (deftest loop.5.5
  - [ ] (deftest loop.5.6
  - [ ] (deftest loop.5.7
  - [ ] (deftest loop.5.8
  - [ ] (deftest loop.5.10
  - [ ] (deftest loop.5.11
  - [ ] (deftest loop.5.12
  - [ ] (deftest loop.5.13
  - [ ] (deftest loop.5.14
  - [ ] (deftest loop.5.20
  - [ ] (deftest loop.5.21
  - [ ] (deftest loop.5.22
  - [ ] (deftest loop.5.23
  - [ ] (deftest loop.5.30
  - [ ] (deftest loop.5.32
  - [ ] (deftest loop.5.33
  - [ ] (deftest loop.5.34
  - [ ] (deftest loop.5.35
  - [ ] (deftest loop.5.36
  - [ ] (deftest loop.5.37
  - [ ] (deftest loop.5.38
  - [ ] (deftest loop.5.39
  - [ ] (deftest loop.5.40
  - [ ] (deftest loop.5.41
  - [ ] (deftest loop.5.42
  - [ ] (deftest loop.5.43
  - [ ] (deftest loop.5.44
  - [ ] (deftest loop.5.45
  - [ ] (deftest loop.5.error.1
  - [ ] (deftest loop.5.error.2
  - [ ] (deftest loop.5.error.3
  - [ ] (deftest loop.5.error.4
**** loop15.lsp [86%]
  - [X] (deftest loop.15.30
  - [X] (deftest loop.15.31
  - [X] (deftest loop.15.32
  - [X] (deftest loop.15.33
  - [X] (deftest loop.15.34
  - [X] (deftest loop.15.35
  - [X] (deftest loop.15.36
  - [X] (deftest loop.15.37
  - [X] (deftest loop.15.38
  - [X] (deftest loop.15.39
  - [X] (deftest loop.15.40
  - [X] (deftest loop.15.41
  - [X] (deftest loop.15.42
  - [X] (deftest loop.15.43
  - [X] (deftest loop.15.44
  - [X] (deftest loop.15.45
  - [X] (deftest loop.15.46
  - [X] (deftest loop.15.47
  - [X] (deftest loop.15.48
  - [X] (deftest loop.15.49
  - [X] (deftest loop.15.50
  - [X] (deftest loop.15.51
  - [X] (deftest loop.15.52
  - [X] (deftest loop.15.53
  - [X] (deftest loop.15.54
  - [X] (deftest loop.15.55
  - [X] (deftest loop.15.56
  - [X] (deftest loop.15.57
  - [X] (deftest loop.15.58
  - [X] (deftest loop.15.59
  - [X] (deftest loop.15.60
  - [X] (deftest loop.15.61
  - [X] (deftest loop.15.62
  - [X] (deftest loop.15.63
  - [X] (deftest loop.15.64
  - [X] (deftest loop.15.65
  - [X] (deftest loop.15.66
  - [X] (deftest loop.15.67
  - [X] (deftest loop.15.68
  - [X] (deftest loop.15.69
  - [ ] (deftest loop.15.70
  - [ ] (deftest loop.15.71
  - [ ] (deftest loop.15.72
  - [ ] (deftest loop.15.73
  - [ ] (deftest loop.15.74
  - [ ] (deftest loop.15.75
**** loop8.lsp [73%]
  - [X] (deftest loop.8.1
  - [X] (deftest loop.8.2
  - [X] (deftest loop.8.3
  - [X] (deftest loop.8.4
  - [X] (deftest loop.8.5
  - [X] (deftest loop.8.6
  - [X] (deftest loop.8.7
  - [X] (deftest loop.8.8
  - [X] (deftest loop.8.9
  - [X] (deftest loop.8.10
  - [ ] (deftest loop.8.11
  - [ ] (deftest loop.8.12
  - [ ] (deftest loop.8.13
  - [ ] (deftest loop.8.14
  - [ ] (deftest loop.8.15
  - [ ] (deftest loop.8.16
  - [X] (deftest loop.8.17
  - [X] (deftest loop.8.18
  - [X] (deftest loop.8.19
  - [X] (deftest loop.8.20
  - [X] (deftest loop.8.21
  - [X] (deftest loop.8.22
  - [X] (deftest loop.8.23
  - [ ] (deftest loop.8.24
  - [X] (deftest loop.8.error.1
  - [X] (deftest loop.8.error.2
**** loop12.lsp [88%]
  - [X] (deftest loop.12.1
  - [X] (deftest loop.12.2
  - [X] (deftest loop.12.3
  - [X] (deftest loop.12.4
  - [X] (deftest loop.12.5
  - [X] (deftest loop.12.6
  - [X] (deftest loop.12.7
  - [X] (deftest loop.12.8
  - [X] (deftest loop.12.9
  - [X] (deftest loop.12.10
  - [X] (deftest loop.12.11
  - [X] (deftest loop.12.12
  - [X] (deftest loop.12.13
  - [X] (deftest loop.12.21
  - [X] (deftest loop.12.22
  - [X] (deftest loop.12.23
  - [X] (deftest loop.12.24
  - [X] (deftest loop.12.25
  - [X] (deftest loop.12.26
  - [X] (deftest loop.12.30
  - [X] (deftest loop.12.31
  - [X] (deftest loop.12.32
  - [X] (deftest loop.12.33
  - [X] (deftest loop.12.41
  - [X] (deftest loop.12.42
  - [X] (deftest loop.12.43
  - [X] (deftest loop.12.error.50
  - [X] (deftest loop.12.error.50a
  - [X] (deftest loop.12.error.51
  - [X] (deftest loop.12.error.51a
  - [X] (deftest loop.12.error.52
  - [X] (deftest loop.12.error.52a
  - [X] (deftest loop.12.53
  - [X] (deftest loop.12.53a
  - [X] (deftest loop.12.54
  - [X] (deftest loop.12.54a
  - [X] (deftest loop.12.55
  - [X] (deftest loop.12.55a
  - [ ] (deftest loop.12.56
  - [ ] (deftest loop.12.57
  - [ ] (deftest loop.12.58
  - [ ] (deftest loop.12.59
  - [ ] (deftest loop.12.60
**** do.lsp [58%]
  - [X] (deftest do.1
  - [X] (deftest do.2
  - [X] (deftest do.3
  - [X] (deftest do.4
  - [X] (deftest do.5
  - [X] (deftest do.6
  - [X] (deftest do.7
  - [X] (deftest do.8
  - [X] (deftest do.9
  - [X] (deftest do.10
  - [X] (deftest do.11
  - [X] (deftest do.12
  - [X] (deftest do.13
  - [ ] (deftest do.14
  - [X] (deftest do.15
  - [ ] (deftest do.16
  - [ ] (deftest do.17
  - [ ] (deftest do.18
  - [ ] (deftest do.19
  - [ ] (deftest do.20
  - [ ] (deftest do.21
  - [ ] (deftest do.22
  - [ ] (deftest do.23
  - [ ] (def-macro-test do.error.1
**** loop9.lsp [86%]
  - [X] (deftest loop.9.1
  - [X] (deftest loop.9.2
  - [X] (deftest loop.9.3
  - [X] (deftest loop.9.4
  - [X] (deftest loop.9.5
  - [X] (deftest loop.9.6
  - [X] (deftest loop.9.7
  - [X] (deftest loop.9.8
  - [X] (deftest loop.9.9
  - [X] (deftest loop.9.10
  - [X] (deftest loop.9.11
  - [X] (deftest loop.9.12
  - [X] (deftest loop.9.20
  - [X] (deftest loop.9.21
  - [X] (deftest loop.9.22
  - [X] (deftest loop.9.23
  - [X] (deftest loop.9.24
  - [X] (deftest loop.9.25
  - [X] (deftest loop.9.26
  - [X] (deftest loop.9.27
  - [X] (deftest loop.9.28
  - [X] (deftest loop.9.30
  - [X] (deftest loop.9.31
  - [X] (deftest loop.9.32
  - [X] (deftest loop.9.33
  - [X] (deftest loop.9.34
  - [X] (deftest loop.9.35
  - [X] (deftest loop.9.36
  - [X] (deftest loop.9.37
  - [X] (deftest loop.9.38
  - [X] (deftest loop.9.40
  - [X] (deftest loop.9.41
  - [X] (deftest loop.9.42
  - [ ] (deftest loop.9.43
  - [ ] (deftest loop.9.44
  - [ ] (deftest loop.9.45
  - [ ] (deftest loop.9.46
  - [ ] (deftest loop.9.47
**** loop6.lsp [10%]
  - [ ] (deftest loop.6.1
  - [ ] (deftest loop.6.2
  - [ ] (deftest loop.6.3
  - [ ] (deftest loop.6.4
  - [ ] (deftest loop.6.5
  - [ ] (deftest loop.6.6
  - [ ] (deftest loop.6.7
  - [ ] (deftest loop.6.8
  - [ ] (deftest loop.6.9
  - [ ] (deftest loop.6.10
  - [ ] (deftest loop.6.11
  - [ ] (deftest loop.6.12
  - [ ] (deftest loop.6.13
  - [ ] (deftest loop.6.14
  - [ ] (deftest loop.6.15
  - [ ] (deftest loop.6.16
  - [ ] (deftest loop.6.17
  - [ ] (deftest loop.6.18
  - [ ] (deftest loop.6.19
  - [ ] (deftest loop.6.20
  - [ ] (deftest loop.6.21
  - [ ] (deftest loop.6.22
  - [ ] (deftest loop.6.23
  - [ ] (deftest loop.6.24
  - [ ] (deftest loop.6.25
  - [ ] (deftest loop.6.26
  - [ ] (deftest loop.6.27
  - [ ] (deftest loop.6.28
  - [ ] (deftest loop.6.29
  - [ ] (deftest loop.6.30
  - [ ] (deftest loop.6.31
  - [ ] (deftest loop.6.32
  - [ ] (deftest loop.6.33
  - [ ] (deftest loop.6.34
  - [ ] (deftest loop.6.35
  - [ ] (deftest loop.6.36
  - [ ] (deftest loop.6.37
  - [ ] (deftest loop.6.38
  - [ ] (deftest loop.6.39
  - [ ] (deftest loop.6.40
  - [ ] (deftest loop.6.41
  - [ ] (deftest loop.6.42
  - [X] (deftest loop.6.error.1
  - [X] (deftest loop.6.error.2
  - [X] (deftest loop.6.error.3
  - [X] (deftest loop.6.error.4
  - [X] (deftest loop.6.error.5
*** structures [0%]
**** structures-03.lsp [0%]
  - [ ] (deftest structure-boa-test-01/1
  - [ ] (deftest structure-boa-test-02/1
  - [ ] (deftest structure-boa-test-02/2
  - [ ] (deftest structure-boa-test-02/3
  - [ ] (deftest structure-boa-test-03/1
  - [ ] (deftest structure-boa-test-03/2
  - [ ] (deftest structure-boa-test-04/1
  - [ ] (deftest structure-boa-test-04/2
  - [ ] (deftest structure-boa-test-05/1
  - [ ] (deftest structure-boa-test-05/2
  - [ ] (deftest structure-boa-test-05/3
  - [ ] (deftest structure-boa-test-05/4
  - [ ] (deftest structure-boa-test-06/1
  - [ ] (deftest structure-boa-test-06/2
  - [ ] (deftest structure-boa-test-06/3
  - [ ] (deftest structure-boa-test-06/4
  - [ ] (deftest structure-boa-test-07/1
  - [ ] (deftest structure-boa-test-07/2
  - [ ] (deftest structure-boa-test-07/3
  - [ ] (deftest structure-boa-test-07/4
  - [ ] (deftest structure-boa-test-08/1
  - [ ] (deftest structure-boa-test-09/1
  - [ ] (deftest structure-boa-test-09/2
  - [ ] (deftest structure-boa-test-09/3
  - [ ] (deftest structure-boa-test-09/4
  - [ ] (deftest structure-boa-test-09/5
  - [ ] (deftest structure-boa-test-09/6
  - [ ] (deftest structure-boa-test-09/7
  - [ ] (deftest structure-boa-test-10/1
  - [ ] (deftest structure-boa-test-11/1
  - [ ] (deftest structure-boa-12/1
  - [ ] (deftest structure-boa-12/2
  - [ ] (deftest structure-boa-12/3
  - [ ] (deftest structure-boa-test-13/1
  - [ ] (deftest structure-boa-test-13/2
  - [ ] (deftest structure-boa-test-13/3
  - [ ] (deftest structure-boa-test-13/4
  - [ ] (deftest structure-boa-test-13/5
  - [ ] (deftest structure-boa-test-13/6
  - [ ] (deftest structure-boa-test-13/7
  - [ ] (deftest structure-boa-test-13/8
  - [ ] (deftest structure-boa-test-14/1
  - [ ] (deftest structure-boa-test-14/2
  - [ ] (deftest structure-boa-test-14/3
  - [ ] (deftest structure-boa-test-14/4
  - [ ] (deftest structure-boa-test-14/5
  - [ ] (deftest structure-boa-test-15/1
  - [ ] (deftest structure-boa-test-15/2
  - [ ] (deftest structure-boa-test-15/3
  - [ ] (deftest structure-boa-test-15/4
  - [ ] (deftest structure-boa-test-15/5
  - [ ] (deftest structure-boa-test-15/6
  - [ ] (deftest structure-boa-test-15/7
  - [ ] (deftest structure-boa-test-15/8
  - [ ] (deftest structure-boa-test-16/1
  - [ ] (deftest structure-boa-test-16/2
  - [ ] (deftest structure-boa-test-16/3
  - [ ] (deftest structure-boa-test-16/4
  - [ ] (deftest structure-boa-test-16/5
  - [ ] (deftest structure-boa-test-16/6
  - [ ] (deftest structure-boa-test-16/7
  - [ ] (deftest structure-boa-test-16/8
  - [ ] (deftest structure-boa-test-16/10
  - [ ] (deftest structure-boa-test-16/11
  - [ ] (def-macro-test struct.error.1 (defstruct nonexistent-structure-type a b c))
**** structures-01.lsp [0%]
  - [ ] (deftest structure-1-1
  - [ ] (deftest structure-1-2
  - [ ] (deftest structure-1-3
  - [ ] (deftest structure-1-4
  - [ ] (deftest structure-1-5
  - [ ] (deftest structure-1-6
  - [ ] (deftest structure-1-7
  - [ ] (deftest structure-1-8
  - [ ] (deftest structure-1-9
  - [ ] (deftest structure-1-10
  - [ ] (deftest structure-1-11
  - [ ] (deftest structure-1-12
  - [ ] (deftest structure-1-13
  - [ ] (deftest structure-1-14
  - [ ] (deftest structure-1-15
**** structures-02.lsp [0%]
  - [ ] (deftest structure-2-1
  - [ ] (deftest structure-2-2
  - [ ] (deftest structure-2-3
  - [ ] (deftest structure-2-4
  - [ ] (deftest structure-2-5
  - [ ] (deftest structure-2-6
  - [ ] (deftest structure-2-7
  - [ ] (deftest structure-2-8
  - [ ] (defstruct-with-tests struct-test-03 a b c d)
  - [ ] (defstruct-with-tests (struct-test-04) a b c)
  - [ ] (defstruct-with-tests (struct-test-05 :constructor) a05 b05 c05)
  - [ ] (defstruct-with-tests (struct-test-06 (:constructor)) a06 b06 c06)
  - [ ] (defstruct-with-tests (struct-test-07 :conc-name) a07 b07)
  - [ ] (defstruct-with-tests (struct-test-08 (:conc-name)) a08 b08)
  - [ ] (defstruct-with-tests (struct-test-09 (:conc-name nil)) a09 b09)
  - [ ] (defstruct-with-tests (struct-test-10 (:conc-name "")) a10 b10)
  - [ ] (defstruct-with-tests (struct-test-11 (:conc-name "BLAH-")) a11 b11)
  - [ ] (defstruct-with-tests (struct-test-12 (:conc-name BLAH-)) a12 b12)
  - [ ] (defstruct-with-tests (struct-test-13 (:conc-name #\X)) foo-a13 foo-b13)
  - [ ] (defstruct-with-tests (struct-test-14 (:predicate)) a14 b14)
  - [ ] (defstruct-with-tests (struct-test-15 (:predicate nil)) a15 b15)
  - [ ] (defstruct-with-tests (struct-test-16 :predicate) a16 b16)
  - [ ] (defstruct-with-tests (struct-test-17
  - [ ] (defstruct-with-tests (struct-test-18 :copier) a18 b18)
  - [ ] (defstruct-with-tests (struct-test-19 (:copier)) a19 b19)
  - [ ] (defstruct-with-tests (struct-test-20 (:copier nil)) a20 b20)
  - [ ] (defstruct-with-tests (struct-test-21 (:copier struct-test-21-alt-copier))
  - [ ] (defstruct-with-tests struct-test-22 (a22) (b22))
  - [ ] (defstruct-with-tests struct-test-23 (a23 1) (b23 2))
  - [ ] (defstruct-with-tests struct-test-24
  - [ ] (defstruct-with-tests struct-test-25)
  - [ ] (defstruct-with-tests struct-test-26
  - [ ] (defstruct-with-tests struct-test-27
  - [ ] (defstruct-with-tests struct-test-28
  - [ ] (defstruct-with-tests struct-test-29
  - [ ] (defstruct-with-tests struct-test-30 #:a30 #:b30)
  - [ ] (defstruct-with-tests #:struct-test-31 a31 b31)
  - [ ] (defstruct-with-tests struct-test-32
  - [ ] (defstruct-with-tests (struct-test-33 (:conc-name))
  - [ ] (defstruct-with-tests (struct-test-34 :conc-name)
  - [ ] (defstruct-with-tests (struct-test-35 (:conc-name nil))
  - [ ] (defstruct-with-tests (struct-test-36 (:conc-name ""))
  - [ ] (defstruct-with-tests (struct-test-37 (:type list)) a37 b37 c37)
  - [ ] (deftest structure-37-1
  - [ ] (defstruct-with-tests (struct-test-38 (:type list) :named) a38 b38 c38)
  - [ ] (deftest structure-38-1
  - [ ] (defstruct-with-tests (struct-test-39 (:predicate nil)
  - [ ] (deftest structure-39-1
  - [ ] (defstruct-with-tests (struct-test-40 (:type vector)) a40 b40)
  - [ ] (defstruct-with-tests (struct-test-41 (:type vector) :named) a41 b41)
  - [ ] (defstruct-with-tests (struct-test-42 (:type (vector t))) a42 b42)
  - [ ] (defstruct-with-tests (struct-test-43 (:type (vector t)) :named) a43 b43)
  - [ ] (defstruct-with-tests (struct-test-44 (:type list))
  - [ ] (deftest structs-are-disjoint
  - [ ] (defstruct-with-tests (struct-test-45 (:type list) (:initial-offset 2))
  - [ ] (deftest structure-45-1
  - [ ] (defstruct-with-tests (struct-test-46 (:type list)
  - [ ] (deftest structure-46-1
  - [ ] (defstruct-with-tests (struct-test-47 (:type list)
  - [ ] (deftest structure-47-1
  - [ ] (defstruct-with-tests (struct-test-48 (:type list)
  - [ ] (deftest structure-48-1
  - [ ] (defstruct-with-tests (struct-test-49 (:type (vector bit)))
  - [ ] (defstruct-with-tests (struct-test-50 (:type (vector character)))
  - [ ] (defstruct-with-tests (struct-test-51 (:type (vector (integer 0 255))))
  - [ ] (defstruct-with-tests (struct-test-52 (:type vector)
  - [ ] (defstruct-with-tests (struct-test-53 (:type vector)
  - [ ] (deftest structure-53-1
  - [ ] (defstruct-with-tests (struct-test-54 (:type vector)
  - [ ] (deftest structure-54-1
  - [ ] (defstruct-with-tests (struct-test-55 (:type list)
  - [ ] (deftest structure-55-1
  - [ ] (defstruct-with-tests (struct-test-56 (:type list)
  - [ ] (deftest structure-56-1
  - [ ] (defstruct-with-tests (struct-test-57 (:include struct-test-22))
  - [ ] (defstruct-with-tests struct-test-58
  - [ ] (defstruct-with-tests (struct-test-59 (:include struct-test-58))
  - [ ] (defstruct-with-tests struct-test-60
  - [ ] (deftest structure-60-1
  - [ ] (deftest structure-61-1
  - [ ] (deftest structure-62-1
  - [ ] (deftest structure-62-2
  - [ ] (defstruct-with-tests :struct-test-63 a63 b63 c63)
  - [ ] (defstruct-with-tests struct-test-64 :a63 :b63 :c63)
  - [ ] (defstruct-with-tests struct-test-65
  - [ ] (defstruct-with-tests struct-test-66 nil)
  - [ ] (defstruct-with-tests struct-test-67
  - [ ] (defstruct-with-tests (struct-test-68 (:include struct-test-67))
  - [ ] (defstruct-with-tests (struct-test-69 (:type (vector single-float))
  - [ ] (defstruct-with-tests (struct-test-70 (:type list)
  - [ ] (deftest copy-structure.error.1
  - [ ] (deftest copy-structure.error.2
  - [ ] (deftest defstruct.error.3
  - [ ] (deftest defstruct.error.4
**** structure-00.lsp [0%]
  - [ ] (deftest subtypep-works-with-classes
  - [ ] (deftest typep-works-with-classes
**** structures-04.lsp [0%]
  - [ ] (deftest struct-include.1
  - [ ] (deftest struct-include.2
  - [ ] (deftest struct-include.3
  - [ ] (deftest struct-include.4
  - [ ] (deftest struct-include.5
  - [ ] (deftest struct-include.5a
  - [ ] (deftest struct-include.6
  - [ ] (deftest struct-include.7
*** arrays [0%]
**** fill-pointer.lsp [83%]
  - [X] (deftest fill-pointer.1
  - [X] (deftest fill-pointer.2
  - [X] (deftest fill-pointer.3
  - [X] (deftest fill-pointer.order.1
  - [X] (deftest fill-pointer.order.2
  - [X] (deftest fill-pointer.error.1
  - [X] (deftest fill-pointer.error.2
  - [ ] (deftest fill-pointer.error.3
  - [X] (deftest fill-pointer.error.4
  - [X] (deftest fill-pointer.error.5
  - [ ] (deftest fill-pointer.error.6
  - [X] (deftest fill-pointer.error.7
**** array-dimension.lsp [50%]
  - [ ] (deftest array-dimension.1
  - [ ] (deftest array-dimension.2
  - [X] (deftest array-dimension.3
  - [X] (deftest array-dimension.4
  - [X] (deftest array-dimension.5
  - [ ] (deftest array-dimension.6
  - [ ] (deftest array-dimension.7
  - [ ] (deftest array-dimension.8
  - [ ] (deftest array-dimension.order.1
  - [X] (deftest array-dimension.error.1
  - [X] (deftest array-dimension.error.2
  - [X] (deftest array-dimension.error.3
**** bit-nand.lsp [0%]
  - [ ] (deftest bit-nand.1
  - [ ] (deftest bit-nand.2
  - [ ] (deftest bit-nand.3
  - [ ] (deftest bit-nand.4
  - [ ] (deftest bit-nand.5
  - [ ] (deftest bit-nand.6
  - [ ] (deftest bit-nand.7
  - [ ] (deftest bit-nand.8
  - [ ] (deftest bit-nand.9
  - [ ] (deftest bit-nand.10
  - [ ] (deftest bit-nand.11
  - [ ] (deftest bit-nand.12
  - [ ] (deftest bit-nand.13
  - [ ] (deftest bit-nand.14
  - [ ] (deftest bit-nand.15
  - [ ] (deftest bit-nand.16
  - [ ] (deftest bit-nand.17
  - [ ] (deftest bit-nand.18
  - [ ] (deftest bit-nand.19
  - [ ] (deftest bit-nand.20
  - [ ] (deftest bit-nand.21
  - [ ] (deftest bit-nand.22
  - [ ] (deftest bit-nand.order.1
  - [ ] (def-fold-test bit-nand.fold.1 (bit-nand #*00101 #*10100))
  - [ ] (deftest bit-nand.random.1
  - [ ] (deftest bit-nand.error.1
  - [ ] (deftest bit-nand.error.2
  - [ ] (deftest bit-nand.error.3
**** bit-orc2.lsp [0%]
  - [ ] (deftest bit-orc2.1
  - [ ] (deftest bit-orc2.2
  - [ ] (deftest bit-orc2.3
  - [ ] (deftest bit-orc2.4
  - [ ] (deftest bit-orc2.5
  - [ ] (deftest bit-orc2.6
  - [ ] (deftest bit-orc2.7
  - [ ] (deftest bit-orc2.8
  - [ ] (deftest bit-orc2.9
  - [ ] (deftest bit-orc2.10
  - [ ] (deftest bit-orc2.11
  - [ ] (deftest bit-orc2.12
  - [ ] (deftest bit-orc2.13
  - [ ] (deftest bit-orc2.14
  - [ ] (deftest bit-orc2.15
  - [ ] (deftest bit-orc2.16
  - [ ] (deftest bit-orc2.17
  - [ ] (deftest bit-orc2.18
  - [ ] (deftest bit-orc2.19
  - [ ] (deftest bit-orc2.20
  - [ ] (deftest bit-orc2.21
  - [ ] (deftest bit-orc2.22
  - [ ] (deftest bit-orc2.order.1
  - [ ] (deftest bit-orc2.fold.1
  - [ ] (deftest bit-orc2.random.1
  - [ ] (deftest bit-orc2.error.1
  - [ ] (deftest bit-orc2.error.2
  - [ ] (deftest bit-orc2.error.3
**** array-misc.lsp [33%]
  - [X] (deftest array-dimension-limit.1
  - [ ] (deftest array-dimension-limit.2
  - [ ] (deftest array-total-size-limit.1
  - [ ] (deftest array-total-size-limit.2
  - [X] (deftest array-rank-limit.1
  - [ ] (deftest array-rank-limit.2
**** make-array.lsp [4%]

  - [X] (deftest make-array.1
  - [ ] (deftest make-array.1a
  - [X] (deftest make-array.2
  - [X] (deftest make-array.2a
  - [X] (deftest make-array.2b
  - [X] (deftest make-array.2c
  - [ ] (deftest make-array.2d
  - [ ] (deftest make-array.3
  - [ ] (deftest make-array.4
  - [ ] (deftest make-array.4a
  - [ ] (deftest make-array.4b
  - [ ] (deftest make-array.4c
  - [ ] (deftest make-array.5
  - [ ] (deftest make-array.5a
  - [ ] (deftest make-array.6
  - [ ] (deftest make-array.6a
  - [ ] (deftest make-array.6b
  - [ ] (deftest make-array.7
  - [ ] (deftest make-array.7a
  - [ ] (deftest make-array.7b
  - [ ] (deftest make-array.8
  - [ ] (deftest make-array.8a
  - [ ] (deftest make-array.8b
  - [ ] (deftest make-array.8c
  - [ ] (deftest make-array.8d
  - [ ] (deftest make-array.8e
  - [ ] (deftest make-array.8f
  - [ ] (deftest make-array.9
  - [ ] (deftest make-array.10
  - [ ] (deftest make-array.11
  - [ ] (deftest make-array.12
  - [ ] (deftest make-array.12a
  - [ ] (deftest make-array.12b
  - [ ] (deftest make-array.12c
  - [ ] (deftest make-array.13
  - [ ] (deftest make-array.14
  - [ ] (deftest make-array.15
  - [ ] (deftest make-array.16
  - [ ] (deftest make-array.17
  - [ ] (deftest make-array.18
  - [ ] (deftest make-array.19
  - [ ] (deftest make-array.20
  - [ ] (deftest make-array.21
  - [ ] (deftest make-array.22
  - [ ] (deftest make-array.23
  - [ ] (deftest make-array.25
  - [ ] (deftest make-array.26
  - [ ] (deftest make-array.27
  - [ ] (deftest make-array.28
  - [ ] (deftest make-array.29
  - [ ] (deftest make-array.30
  - [ ] (deftest make-array.31
  - [ ] (deftest make-array.32
  - [ ] (deftest make-array.33
  - [ ] (deftest make-array.34
  - [ ] (deftest make-array.35
  - [ ] (deftest make-array.36
  - [ ] (deftest make-array.adjustable.1
  - [ ] (deftest make-array.adjustable.2
  - [ ] (deftest make-array.adjustable.3
  - [ ] (deftest make-array.adjustable.4
  - [ ] (deftest make-array.adjustable.5
  - [ ] (deftest make-array.adjustable.6
  - [ ] (deftest make-array.adjustable.7
  - [ ] (deftest make-array.adjustable.7a
  - [ ] (deftest make-array.adjustable.7b
  - [ ] (deftest make-array.adjustable.7c
  - [ ] (deftest make-array.adjustable.8
  - [ ] (deftest make-array.adjustable.9
  - [ ] (deftest make-array.adjustable.10
  - [ ] (deftest make-array.adjustable.11
  - [ ] (deftest make-array.displaced.1
  - [ ] (deftest make-array.displaced.2
  - [ ] (deftest make-array.displaced.3
  - [ ] (deftest make-array.displaced.4
  - [ ] (deftest make-array.displaced.5
  - [ ] (deftest make-array.displaced.6
  - [ ] (deftest make-array.displaced.7
  - [ ] (deftest make-array.displaced.8
  - [ ] (deftest make-array.displaced.9
  - [ ] (deftest make-array.displaced.10
  - [ ] (deftest make-array.displaced.11
  - [ ] (deftest make-array.displaced.12
  - [ ] (deftest make-array.displaced.13
  - [ ] (deftest make-array.displaced.14
  - [ ] (deftest make-array.displaced.15
  - [ ] (deftest make-array.displaced.16
  - [ ] (deftest make-array.displaced.17
  - [ ] (deftest make-array.displaced.18
  - [ ] (deftest make-array.displaced.19
  - [ ] (deftest make-array.displaced.20
  - [ ] (deftest make-array.displaced.21
  - [ ] (deftest make-array.displaced.22
  - [ ] (deftest make-array.displaced.23
  - [ ] (deftest make-array.displaced.24
  - [ ] (deftest make-array.displaced.25
  - [ ] (deftest make-array.displaced.26
  - [ ] (deftest make-array.displaced.27
  - [ ] (deftest make-array.displaced.28
  - [ ] (deftest make-array.displaced.29
  - [ ] (deftest make-array.displaced.30
  - [ ] (deftest make-array.displaced.31
  - [ ] (deftest make-array.allow-other-keys.1
  - [ ] (deftest make-array.allow-other-keys.2
  - [ ] (deftest make-array.allow-other-keys.3
  - [ ] (deftest make-array.allow-other-keys.4
  - [ ] (deftest make-array.allow-other-keys.5
  - [ ] (deftest make-array.allow-other-keys.6
  - [ ] (deftest make-array.allow-other-keys.7
  - [ ] (deftest make-array.keywords.8.
  - [ ] (deftest make-array.error.1
  - [ ] (deftest make-array.error.2
  - [ ] (deftest make-array.error.3
  - [ ] (deftest make-array.error.4
  - [ ] (deftest make-array.error.5
  - [ ] (deftest make-array.error.6
  - [ ] (deftest make-array.order.1
  - [ ] (deftest make-array.order.2
**** array-element-type.lsp [33%]
  - [ ] (deftest array-element-type.1
  - [ ] (deftest array-element-type.order.1
  - [X] (deftest array-element-type.error.1
  - [X] (deftest array-element-type.error.2
  - [ ] (deftest array-element-type.error.3
  - [ ] (deftest array-element-type.error.4
**** bit-and.lsp [0%]
  - [ ] (deftest bit-and.1
  - [ ] (deftest bit-and.2
  - [ ] (deftest bit-and.3
  - [ ] (deftest bit-and.4
  - [ ] (deftest bit-and.5
  - [ ] (deftest bit-and.6
  - [ ] (deftest bit-and.7
  - [ ] (deftest bit-and.8
  - [ ] (deftest bit-and.9
  - [ ] (deftest bit-and.10
  - [ ] (deftest bit-and.11
  - [ ] (deftest bit-and.12
  - [ ] (deftest bit-and.13
  - [ ] (deftest bit-and.14
  - [ ] (deftest bit-and.15
  - [ ] (deftest bit-and.16
  - [ ] (deftest bit-and.17
  - [ ] (deftest bit-and.18
  - [ ] (deftest bit-and.19
  - [ ] (deftest bit-and.20
  - [ ] (deftest bit-and.21
  - [ ] (deftest bit-and.22
  - [ ] (deftest bit-and.order.1
  - [ ] (def-fold-test bit-and.fold.1 (bit-and #*01101 #*01011))
  - [ ] (deftest bit-and.random.1
  - [ ] (deftest bit-and.error.1
  - [ ] (deftest bit-and.error.2
  - [ ] (deftest bit-and.error.3
**** upgraded-array-element-type.lsp [18%]
  - [ ] (deftest upgraded-array-element-type.1
  - [ ] (deftest upgraded-array-element-type.2
  - [ ] (deftest upgraded-array-element-type.3
  - [ ] (deftest upgraded-array-element-type.4
  - [ ] (deftest upgraded-array-element-type.5
  - [ ] (deftest upgraded-array-element-type.6
  - [ ] (deftest upgraded-array-element-type.7
  - [ ] (deftest upgraded-array-element-type.8
  - [ ] (deftest upgraded-array-element-type.nil.1
  - [X] (deftest upgraded-array-element-type.error.1
  - [X] (deftest upgraded-array-element-type.error.2
**** sbit.lsp [11%]
  - [X] (deftest sbit.1
  - [ ] (deftest sbit.2
  - [ ] (deftest sbit.3
  - [ ] (deftest sbit.4
  - [ ] (deftest sbit.5
  - [ ] (deftest sbit.6
  - [ ] (deftest sbit.order.1
  - [ ] (deftest sbit.order.2
  - [ ] (deftest sbit.error.1
**** array-as-class.lsp [0%]
  - [ ] (deftest array-as-class.1
  - [ ] (deftest array-as-class.2
  - [ ] (deftest array-as-class.3
  - [ ] (deftest array-as-class.4
  - [ ] (deftest array-as-class.5
  - [ ] (deftest array-as-class.6
  - [ ] (deftest array-as-class.7
  - [ ] (deftest array-as-class.8
  - [ ] (deftest array-as-class.9
  - [ ] (deftest array-as-class.10
  - [ ] (deftest array-as-class.11
  - [ ] (deftest array-as-class.12
  - [ ] (deftest array-as-class.13
  - [ ] (deftest array-as-class.14
  - [ ] (deftest array-as-class.15
**** array-rank.lsp [44%]
  - [X] (deftest array-rank.1
  - [ ] (deftest array-rank.2
  - [ ] (deftest array-rank.3
  - [ ] (deftest array-rank.order.1
  - [X] (deftest array-rank.error.1
  - [X] (deftest array-rank.error.2
  - [ ] (deftest array-rank.error.3
  - [X] (deftest array-rank.error.4
  - [ ] (deftest array-rank.error.5
**** vector-pop.lsp [80%]
  - [X] (deftest vector-pop.1
  - [X] (deftest vector-pop.error.1
  - [ ] (deftest vector-pop.error.2
  - [X] (deftest vector-pop.error.3
  - [X] (deftest vector-pop.error.4
**** array-row-major-index.lsp [14%]
  - [ ] (deftest array-row-major-index.1
  - [ ] (deftest array-row-major-index.2
  - [ ] (deftest array-row-major-index.3
  - [ ] (deftest array-row-major-index.4
  - [ ] (deftest array-row-major-index.5
  - [ ] (deftest array-row-major-index.order.1
  - [X] (deftest array-row-major-index.error.1
**** aref.lsp [52%]
  - [ ] (deftest aref.1
  - [X] (deftest aref.2
  - [X] (deftest aref.3
  - [X] (deftest aref.4
  - [X] (deftest aref.5
  - [X] (deftest aref.6
  - [X] (deftest aref.7
  - [X] (deftest aref.order.1
  - [X] (deftest aref.order.2
  - [X] (deftest setf-aref.1
  - [ ] (deftest setf-aref.2
  - [X] (deftest setf-aref.3
  - [X] (deftest setf-aref.4
  - [ ] (deftest setf-aref.5
  - [ ] (deftest setf-aref.6
  - [ ] (deftest setf-aref.7
  - [ ] (deftest setf-aref.order.1
  - [ ] (deftest aref.special-integer.1
  - [ ] (deftest aref.special-strings.1
  - [ ] (deftest aref.error.1
  - [ ] (deftest aref.error.2
**** simple-bit-vector.lsp [0%]
  - [ ] (deftest simple-bit-vector.2
  - [ ] (deftest simple-bit-vector.3
  - [ ] (deftest simple-bit-vector.4
  - [ ] (deftest simple-bit-vector.5
  - [ ] (deftest simple-bit-vector.6
  - [ ] (deftest simple-bit-vector.7
  - [ ] (deftest simple-bit-vector.8
  - [ ] (deftest simple-bit-vector.9
  - [ ] (deftest simple-bit-vector.10
  - [ ] (deftest simple-bit-vector.11
  - [ ] (deftest simple-bit-vector.12
  - [ ] (deftest simple-bit-vector.13
  - [ ] (deftest simple-bit-vector.14
  - [ ] (deftest simple-bit-vector.15
  - [ ] (deftest simple-bit-vector.16
  - [ ] (deftest simple-bit-vector.17
**** vector.lsp [26%]
  - [X] (deftest vector.type.1
  - [X] (deftest vector.type.2
  - [X] (deftest vector.type.3
  - [X] (deftest vector.type.4
  - [X] (deftest vector.type.5
  - [X] (deftest vector.type.6
  - [X] (deftest vector.type.7
  - [X] (deftest vector.type.8
  - [X] (deftest vector.type.9
  - [ ] (deftest vector.type.10
  - [ ] (deftest vector.type.11
  - [ ] (deftest vector.type.12
  - [ ] (deftest vector.type.13
  - [ ] (deftest vector.type.14
  - [ ] (deftest vector.type.15
  - [ ] (deftest vector.type.16
  - [ ] (deftest vector.type.17
  - [ ] (deftest vector.type.18
  - [ ] (deftest vector.type.19
  - [ ] (deftest vector.type.20
  - [ ] (deftest vector.type.21
  - [ ] (deftest vector.type.23
  - [ ] (deftest vector.type.23a
  - [ ] (deftest vector.type.24
  - [ ] (deftest vector.type.25
  - [ ] (deftest vector.type.26
  - [ ] (deftest vector.type.27
  - [ ] (deftest vector.type.28
  - [ ] (deftest vector.type.29
  - [ ] (deftest vector.type.30
  - [ ] (deftest vector.type.31
  - [ ] (deftest vector.type.32
  - [ ] (deftest vector.type.33
  - [ ] (deftest vector.type.34
  - [X] (deftest vector.type.35
  - [ ] (deftest vector.type.36
  - [ ] (deftest vector.type.37
  - [ ] (deftest vector.type.38
  - [ ] (deftest vector.type.39
  - [ ] (deftest vector.type.40
  - [X] (deftest vector.type.41
  - [X] (deftest vector.type.42
  - [X] (deftest vector.type.43
  - [X] (deftest vector.type.44
  - [X] (deftest vector-as-class.1
  - [ ] (deftest vector-as-class.2
  - [ ] (deftest vector-as-class.3
  - [ ] (deftest vector-as-class.4
  - [ ] (deftest vector-as-class.5
  - [ ] (deftest vector-as-class.6
  - [ ] (deftest vector-as-class.7
  - [ ] (deftest vector-as-class.8
  - [ ] (deftest vector-as-class.9
  - [ ] (deftest vector-as-class.10
  - [ ] (deftest vector-as-class.11
  - [ ] (deftest vector-as-class.12
  - [ ] (deftest vector-as-class.13
  - [ ] (deftest vector-as-class.14
  - [ ] (deftest vector-as-class.15
  - [ ] (deftest vector-as-class.16
  - [ ] (deftest vector-as-class.17
  - [ ] (deftest vector-as-class.18
  - [X] (deftest vector.1
  - [X] (deftest vector.2
  - [ ] (deftest vector.3
  - [ ] (deftest vector.4
  - [ ] (deftest vector.5
  - [ ] (deftest vector.6
  - [ ] (deftest vector.7
  - [ ] (deftest vector.8
  - [X] (deftest vector.9
  - [ ] (deftest vector.10
  - [X] (deftest vector.order.1
**** array-dimensions.lsp [0%]
  - [ ] (deftest array-dimensions.1
  - [ ] (deftest array-dimensions.2
  - [ ] (deftest array-dimensions.3
  - [ ] (deftest array-dimensions.4
  - [ ] (deftest array-dimensions.5
  - [ ] (deftest array-dimensions.6
  - [ ] (deftest array-dimensions.7
  - [ ] (deftest array-dimensions.8
  - [ ] (deftest array-dimensions.error.1
  - [ ] (deftest array-dimensions.error.2
  - [ ] (deftest array-dimensions.error.3
  - [ ] (deftest array-dimensions.error.4
  - [ ] (deftest array-dimensions.error.5
**** bit-andc1.lsp [0%]
  - [ ] (deftest bit-andc1.1
  - [ ] (deftest bit-andc1.2
  - [ ] (deftest bit-andc1.3
  - [ ] (deftest bit-andc1.4
  - [ ] (deftest bit-andc1.5
  - [ ] (deftest bit-andc1.6
  - [ ] (deftest bit-andc1.7
  - [ ] (deftest bit-andc1.8
  - [ ] (deftest bit-andc1.9
  - [ ] (deftest bit-andc1.10
  - [ ] (deftest bit-andc1.11
  - [ ] (deftest bit-andc1.12
  - [ ] (deftest bit-andc1.13
  - [ ] (deftest bit-andc1.14
  - [ ] (deftest bit-andc1.15
  - [ ] (deftest bit-andc1.16
  - [ ] (deftest bit-andc1.17
  - [ ] (deftest bit-andc1.18
  - [ ] (deftest bit-andc1.19
  - [ ] (deftest bit-andc1.20
  - [ ] (deftest bit-andc1.21
  - [ ] (deftest bit-andc1.22
  - [ ] (deftest bit-andc1.order.1
  - [ ] (def-fold-test bit-andc1.fold.1 (bit-andc1 #*10010 #*01011))
  - [ ] (deftest bit-andc1.random.1
  - [ ] (deftest bit-andc1.error.1
  - [ ] (deftest bit-andc1.error.2
  - [ ] (deftest bit-andc1.error.3
**** simple-vector-p.lsp [0%]
  - [ ] (deftest simple-vector-p.1
  - [ ] (deftest simple-vector-p.2
  - [ ] (deftest simple-vector-p.4
  - [ ] (deftest simple-vector-p.7
  - [ ] (deftest simple-vector-p.8
  - [ ] (deftest simple-vector-p.9
  - [ ] (deftest simple-vector-p.10
  - [ ] (deftest simple-vector-p.11
  - [ ] (deftest simple-vector-p.12
  - [ ] (deftest simple-vector-p.error.1
  - [ ] (deftest simple-vector-p.error.2
**** array-displacement.lsp [14%]
  - [ ] (deftest array-displacement.7
  - [ ] (deftest array-displacement.8
  - [ ] (deftest array-displacement.9
  - [ ] (deftest array-displacement.10
  - [ ] (deftest array-displacement.11
  - [ ] (deftest array-displacement.12
  - [ ] (deftest array-displacement.13
  - [ ] (deftest array-displacement.14
  - [ ] (deftest array-displacement.15
  - [ ] (deftest array-displacement.order.1
  - [X] (deftest array-displacement.error.1
  - [X] (deftest array-displacement.error.2
  - [ ] (deftest array-displacement.error.3
  - [ ] (deftest array-displacement.error.4
**** simple-array-t.lsp [0%]
  - [ ] (deftest simple-array-t.2.1
  - [ ] (deftest simple-array-t.2.2
  - [ ] (deftest simple-array-t.2.3
  - [ ] (deftest simple-array-t.2.4
  - [ ] (deftest simple-array-t.2.5
  - [ ] (deftest simple-array-t.2.6
  - [ ] (deftest simple-array-t.3.1
  - [ ] (deftest simple-array-t.3.2
  - [ ] (deftest simple-array-t.3.3
  - [ ] (deftest simple-array-t.3.4
  - [ ] (deftest simple-array-t.3.5
  - [ ] (deftest simple-array-t.3.6
  - [ ] (deftest simple-array-t.4.1
  - [ ] (deftest simple-array-t.4.2
  - [ ] (deftest simple-array-t.4.3
  - [ ] (deftest simple-array-t.4.4
  - [ ] (deftest simple-array-t.4.5
  - [ ] (deftest simple-array-t.4.6
  - [ ] (deftest simple-array-t.5.1
  - [ ] (deftest simple-array-t.5.2
  - [ ] (deftest simple-array-t.5.3
  - [ ] (deftest simple-array-t.5.4
  - [ ] (deftest simple-array-t.5.5
  - [ ] (deftest simple-array-t.5.6
  - [ ] (deftest simple-array-t.6.1
  - [ ] (deftest simple-array-t.6.2
  - [ ] (deftest simple-array-t.6.3
  - [ ] (deftest simple-array-t.6.4
  - [ ] (deftest simple-array-t.6.5
  - [ ] (deftest simple-array-t.6.6
  - [ ] (deftest simple-array-t.7.1
  - [ ] (deftest simple-array-t.7.2
  - [ ] (deftest simple-array-t.7.3
  - [ ] (deftest simple-array-t.7.4
  - [ ] (deftest simple-array-t.7.5
  - [ ] (deftest simple-array-t.7.6
  - [ ] (deftest simple-array-t.8.1
  - [ ] (deftest simple-array-t.8.2
  - [ ] (deftest simple-array-t.8.3
  - [ ] (deftest simple-array-t.8.4
  - [ ] (deftest simple-array-t.8.5
  - [ ] (deftest simple-array-t.8.6
  - [ ] (deftest simple-array-t.8.7
  - [ ] (deftest simple-array-t.8.8
  - [ ] (deftest simple-array-t.8.9
  - [ ] (deftest simple-array-t.8.10
  - [ ] (deftest simple-array-t.8.11
  - [ ] (deftest simple-array-t.8.12
  - [ ] (deftest simple-array-t.8.13
  - [ ] (deftest simple-array-t.8.14
  - [ ] (deftest simple-array-t.9.1
  - [ ] (deftest simple-array-t.9.2
  - [ ] (deftest simple-array-t.9.3
  - [ ] (deftest simple-array-t.9.4
  - [ ] (deftest simple-array-t.9.5
  - [ ] (deftest simple-array-t.9.6
  - [ ] (deftest simple-array-t.9.7
  - [ ] (deftest simple-array-t.9.8
  - [ ] (deftest simple-array-t.9.9
  - [ ] (deftest simple-array-t.9.10
  - [ ] (deftest simple-array-t.9.11
  - [ ] (deftest simple-array-t.9.12
  - [ ] (deftest simple-array-t.9.13
**** bit-andc2.lsp [0%]
  - [ ] (deftest bit-andc2.1
  - [ ] (deftest bit-andc2.2
  - [ ] (deftest bit-andc2.3
  - [ ] (deftest bit-andc2.4
  - [ ] (deftest bit-andc2.5
  - [ ] (deftest bit-andc2.6
  - [ ] (deftest bit-andc2.7
  - [ ] (deftest bit-andc2.8
  - [ ] (deftest bit-andc2.9
  - [ ] (deftest bit-andc2.10
  - [ ] (deftest bit-andc2.11
  - [ ] (deftest bit-andc2.12
  - [ ] (deftest bit-andc2.13
  - [ ] (deftest bit-andc2.14
  - [ ] (deftest bit-andc2.15
  - [ ] (deftest bit-andc2.16
  - [ ] (deftest bit-andc2.17
  - [ ] (deftest bit-andc2.18
  - [ ] (deftest bit-andc2.19
  - [ ] (deftest bit-andc2.20
  - [ ] (deftest bit-andc2.21
  - [ ] (deftest bit-andc2.22
  - [ ] (deftest bit-andc2.order.1
  - [ ] (def-fold-test bit-andc2.fold.1 (bit-andc2 #*01101 #*10100))
  - [ ] (deftest bit-andc2.random.1
  - [ ] (deftest bit-andc2.error.1
  - [ ] (deftest bit-andc2.error.2
  - [ ] (deftest bit-andc2.error.3
**** simple-array.lsp [0%]
  - [ ] (deftest simple-array.1.1
  - [ ] (deftest simple-array.1.2
  - [ ] (deftest simple-array.1.3
  - [ ] (deftest simple-array.1.4
  - [ ] (deftest simple-array.1.5
  - [ ] (deftest simple-array.1.6
  - [ ] (deftest simple-array.1.7
  - [ ] (deftest simple-array.1.8
  - [ ] (deftest simple-array.1.9
  - [ ] (deftest simple-array.1.10
  - [ ] (deftest simple-array.1.11
  - [ ] (deftest simple-array.1.12
  - [ ] (deftest simple-array.1.13
  - [ ] (deftest simple-array.2.1
  - [ ] (deftest simple-array.2.2
  - [ ] (deftest simple-array.2.3
  - [ ] (deftest simple-array.2.4
  - [ ] (deftest simple-array.2.5
  - [ ] (deftest simple-array.2.6
  - [ ] (deftest simple-array.3.1
  - [ ] (deftest simple-array.3.2
  - [ ] (deftest simple-array.3.3
  - [ ] (deftest simple-array.3.4
  - [ ] (deftest simple-array.3.5
  - [ ] (deftest simple-array.3.6
  - [ ] (deftest simple-array.4.1
  - [ ] (deftest simple-array.4.2
  - [ ] (deftest simple-array.4.3
  - [ ] (deftest simple-array.4.4
  - [ ] (deftest simple-array.4.5
  - [ ] (deftest simple-array.4.6
  - [ ] (deftest simple-array.5.1
  - [ ] (deftest simple-array.5.2
  - [ ] (deftest simple-array.5.3
  - [ ] (deftest simple-array.5.4
  - [ ] (deftest simple-array.5.5
  - [ ] (deftest simple-array.5.6
  - [ ] (deftest simple-array.6.1
  - [ ] (deftest simple-array.6.2
  - [ ] (deftest simple-array.6.3
  - [ ] (deftest simple-array.6.4
  - [ ] (deftest simple-array.6.5
  - [ ] (deftest simple-array.6.6
  - [ ] (deftest simple-array.7.1
  - [ ] (deftest simple-array.7.2
  - [ ] (deftest simple-array.7.3
  - [ ] (deftest simple-array.7.4
  - [ ] (deftest simple-array.7.5
  - [ ] (deftest simple-array.7.6
  - [ ] (deftest simple-array.8.1
  - [ ] (deftest simple-array.8.2
  - [ ] (deftest simple-array.8.3
  - [ ] (deftest simple-array.8.4
  - [ ] (deftest simple-array.8.5
  - [ ] (deftest simple-array.8.6
  - [ ] (deftest simple-array.8.7
  - [ ] (deftest simple-array.8.8
  - [ ] (deftest simple-array.8.9
  - [ ] (deftest simple-array.8.10
  - [ ] (deftest simple-array.8.11
  - [ ] (deftest simple-array.8.12
  - [ ] (deftest simple-array.8.13
  - [ ] (deftest simple-array.8.14
  - [ ] (deftest simple-array.9.1
  - [ ] (deftest simple-array.9.2
  - [ ] (deftest simple-array.9.3
  - [ ] (deftest simple-array.9.4
  - [ ] (deftest simple-array.9.5
  - [ ] (deftest simple-array.9.6
  - [ ] (deftest simple-array.9.7
  - [ ] (deftest simple-array.9.8
  - [ ] (deftest simple-array.9.9
  - [ ] (deftest simple-array.9.10
  - [ ] (deftest simple-array.9.11
  - [ ] (deftest simple-array.9.12
  - [ ] (deftest simple-array.9.13
**** arrayp.lsp [20%]
  - [X] (deftest arrayp.1
  - [X] (deftest arrayp.2
  - [ ] (deftest arrayp.3
  - [ ] (deftest arrayp.4
  - [ ] (deftest arrayp.5
  - [ ] (deftest arrayp.6
  - [ ] (deftest arrayp.7
  - [ ] (deftest arrayp.order.1
  - [ ] (deftest arrayp.error.1
  - [ ] (deftest arrayp.error.2
**** bit-vector-p.lsp [0%]
  - [ ] (deftest bit-vector-p.2
  - [ ] (deftest bit-vector-p.3
  - [ ] (deftest bit-vector-p.4
  - [ ] (deftest bit-vector-p.5
  - [ ] (deftest bit-vector-p.6
  - [ ] (deftest bit-vector-p.7
  - [ ] (deftest bit-vector-p.8
  - [ ] (deftest bit-vector-p.9
  - [ ] (deftest bit-vector-p.10
  - [ ] (deftest bit-vector-p.11
  - [ ] (deftest bit-vector-p.12
  - [ ] (deftest bit-vector-p.13
  - [ ] (deftest bit-vector-p.order.1
  - [ ] (deftest bit-vector-p.order.2
  - [ ] (deftest bit-vector-p.error.1
  - [ ] (deftest bit-vector-p.error.2
**** bit.lsp [9%]
  - [X] (deftest bit.1
  - [ ] (deftest bit.2
  - [ ] (deftest bit.3
  - [ ] (deftest bit.4
  - [ ] (deftest bit.5
  - [ ] (deftest bit.6
  - [ ] (deftest bit.7
  - [ ] (deftest bit.8
  - [ ] (deftest bit.order.1
  - [ ] (deftest bit.order.2
  - [ ] (deftest bit.error.1
**** vectorp.lsp [47%]
  - [X] (deftest vectorp.1
  - [X] (deftest vectorp.2
  - [X] (deftest vectorp.3
  - [X] (deftest vectorp.4
  - [X] (deftest vectorp.5
  - [X] (deftest vectorp.6
  - [ ] (deftest vectorp.7
  - [X] (deftest vectorp.8
  - [X] (deftest vectorp.9
  - [ ] (deftest vectorp.10
  - [ ] (deftest vectorp.11
  - [ ] (deftest vectorp.12
  - [ ] (deftest vectorp.13
  - [ ] (deftest vectorp.14
  - [ ] (deftest vectorp.15
  - [ ] (deftest vectorp.error.1
  - [ ] (deftest vectorp.error.2
**** vector-push-extend.lsp [10%]
  - [X] (deftest vector-push-extend.1
  - [X] (deftest vector-push-extend.2
  - [X] (deftest vector-push-extend.3
  - [ ] (deftest vector-push-extend.4
  - [X] (deftest vector-push-extend.5
  - [ ] (deftest vector-push-extend.6
  - [X] (deftest vector-push-extend.7
  - [ ] (deftest vector-push-extend.8
  - [ ] (deftest vector-push-extend.9
  - [ ] (deftest vector-push-extend.10
  - [ ] (deftest vector-push-extend.11
  - [ ] (deftest vector-push-extend.12
  - [ ] (deftest vector-push-extend.13
  - [ ] (deftest vector-push-extend.14
  - [ ] (deftest vector-push-extend.15
  - [ ] (deftest vector-push-extend.16
  - [ ] (deftest vector-push-extend.17
  - [ ] (deftest vector-push-extend.18
  - [ ] (deftest vector-push-extend.19
  - [ ] (deftest vector-push-extend.20
  - [ ] (deftest vector-push-extend.21
  - [ ] (deftest vector-push-extend.22
  - [ ] (deftest vector-push-extend.23
  - [ ] (deftest vector-push-extend.24
  - [ ] (deftest vector-push-extend.25
  - [ ] (deftest vector-push-extend.26
  - [ ] (deftest vector-push-extend.27
  - [ ] (deftest vector-push-extend.28
  - [ ] (deftest vector-push-extend.29
  - [ ] (deftest vector-push-extend.30
  - [ ] (deftest vector-push-extend.error.1
  - [ ] (deftest vector-push-extend.error.2
  - [ ] (deftest vector-push-extend.error.3
  - [ ] (deftest vector-push-extend.error.4
  - [ ] (deftest vector-push-extend.error.5
  - [ ] (deftest vector-push-extend.error.6
  - [ ] (deftest vector-push-extend.error.7
  - [ ] (deftest vector-push-extend.error.8
  - [ ] (deftest vector-push-extend.error.9
  - [ ] (deftest vector-push-extend.error.10
  - [ ] (deftest vector-push-extend.error.11
  - [ ] (deftest vector-push-extend.error.12
  - [ ] (deftest vector-push-extend.error.13
  - [ ] (deftest vector-push-extend.error.14
  - [ ] (deftest vector-push-extend.error.15
  - [ ] (deftest vector-push-extend.error.16
  - [ ] (deftest vector-push-extend.error.17
**** vector-push.lsp [11%]
  - [X] (deftest vector-push.1
  - [ ] (deftest vector-push.2
  - [X] (deftest vector-push.3
  - [ ] (deftest vector-push.4
  - [X] (deftest vector-push.5
  - [ ] (deftest vector-push.6
  - [X] (deftest vector-push.7
  - [ ] (deftest vector-push.8
  - [ ] (deftest vector-push.9
  - [ ] (deftest vector-push.10
  - [ ] (deftest vector-push.11
  - [ ] (deftest vector-push.12
  - [ ] (deftest vector-push.13
  - [ ] (deftest vector-push.14
  - [ ] (deftest vector-push.15
  - [ ] (deftest vector-push.16
  - [ ] (deftest vector-push.17
  - [ ] (deftest vector-push.18
  - [ ] (deftest vector-push.19
  - [ ] (deftest vector-push.20
  - [ ] (deftest vector-push.error.1
  - [ ] (deftest vector-push.error.2
  - [ ] (deftest vector-push.error.3
  - [ ] (deftest vector-push.error.4
  - [ ] (deftest vector-push.error.5
  - [ ] (deftest vector-push.error.6
  - [ ] (deftest vector-push.error.7
  - [ ] (deftest vector-push.error.8
  - [ ] (deftest vector-push.error.9
  - [ ] (deftest vector-push.error.10
  - [ ] (deftest vector-push.error.11
  - [ ] (deftest vector-push.error.12
  - [ ] (deftest vector-push.error.13
  - [ ] (deftest vector-push.error.14
  - [ ] (deftest vector-push.error.15
  - [ ] (deftest vector-push.error.16
**** adjust-array.lsp [0%]
  - [ ] (def-adjust-array-test adjust-array.1
  - [ ] (def-adjust-array-test adjust-array.2
  - [ ] (def-adjust-array-test adjust-array.3
  - [ ] (def-adjust-array-test adjust-array.4
  - [ ] (def-adjust-array-fp-test adjust-array.5
  - [ ] (def-adjust-array-fp-test adjust-array.6
  - [ ] (def-adjust-array-fp-test adjust-array.7
  - [ ] (def-adjust-array-fp-test adjust-array.8
  - [ ] (def-adjust-array-fp-test adjust-array.9
  - [ ] (deftest adjust-array.10
  - [ ] (deftest adjust-array.11
  - [ ] (deftest adjust-array.12
  - [ ] (deftest adjust-array.13
  - [ ] (deftest adjust-array.14
  - [ ] (deftest adjust-array.15
  - [ ] (deftest adjust-array.16
  - [ ] (def-adjust-array-test adjust-array.17
  - [ ] (def-adjust-array-test adjust-array.18
  - [ ] (def-adjust-array-test adjust-array.19
  - [ ] (deftest adjust-array.20
  - [ ] (def-adjust-array-test adjust-array.21
  - [ ] (def-adjust-array-test adjust-array.22
  - [ ] (deftest adjust-array.23
  - [ ] (deftest adjust-array.24
  - [ ] (deftest adjust-array.25
  - [ ] (deftest adjust-array.26
  - [ ] (deftest adjust-array.27
  - [ ] (deftest adjust-array.28
  - [ ] (deftest adjust-array.29
  - [ ] (deftest adjust-array.30
  - [ ] (deftest adjust-array.31
  - [ ] (deftest adjust-array.32
  - [ ] (deftest adjust-array.33
  - [ ] (deftest adjust-array.34
  - [ ] (deftest adjust-array.35
  - [ ] (deftest adjust-array.36
  - [ ] (deftest adjust-array.37
  - [ ] (def-adjust-array-test adjust-array.adjustable.1
  - [ ] (def-adjust-array-test adjust-array.adjustable.2
  - [ ] (def-adjust-array-test adjust-array.adjustable.3
  - [ ] (def-adjust-array-test adjust-array.adjustable.4
  - [ ] (def-adjust-array-fp-test adjust-array.adjustable.5
  - [ ] (def-adjust-array-fp-test adjust-array.adjustable.6
  - [ ] (def-adjust-array-fp-test adjust-array.adjustable.7
  - [ ] (def-adjust-array-fp-test adjust-array.adjustable.8
  - [ ] (def-adjust-array-fp-test adjust-array.adjustable.9
  - [ ] (deftest adjust-array.adjustable.10
  - [ ] (deftest adjust-array.adjustable.11
  - [ ] (deftest adjust-array.adjustable.12
  - [ ] (deftest adjust-array.adjustable.13
  - [ ] (def-adjust-array-test adjust-array.string.1
  - [ ] (def-adjust-array-test adjust-array.string.2
  - [ ] (def-adjust-array-test adjust-array.string.3
  - [ ] (def-adjust-array-test adjust-array.string.4
  - [ ] (def-adjust-array-fp-test adjust-array.string.5
  - [ ] (def-adjust-array-fp-test adjust-array.string.6
  - [ ] (def-adjust-array-fp-test adjust-array.string.7
  - [ ] (def-adjust-array-fp-test adjust-array.string.8
  - [ ] (def-adjust-array-fp-test adjust-array.string.9
  - [ ] (deftest adjust-array.string.10
  - [ ] (deftest adjust-array.string.11
  - [ ] (deftest adjust-array.string.12
  - [ ] (deftest adjust-array.string.13
  - [ ] (deftest adjust-array.string.14
  - [ ] (deftest adjust-array.string.15
  - [ ] (deftest adjust-array.string.16
  - [ ] (def-adjust-array-test adjust-array.string.17
  - [ ] (def-adjust-array-test adjust-array.string.18
  - [ ] (def-adjust-array-test adjust-array.string.19
  - [ ] (deftest adjust-array.string.20
  - [ ] (def-adjust-array-test adjust-array.string.adjustable.1
  - [ ] (def-adjust-array-test adjust-array.string.adjustable.2
  - [ ] (def-adjust-array-test adjust-array.string.adjustable.3
  - [ ] (def-adjust-array-test adjust-array.string.adjustable.4
  - [ ] (def-adjust-array-fp-test adjust-array.string.adjustable.5
  - [ ] (def-adjust-array-fp-test adjust-array.string.adjustable.6
  - [ ] (def-adjust-array-fp-test adjust-array.string.adjustable.7
  - [ ] (def-adjust-array-fp-test adjust-array.string.adjustable.8
  - [ ] (def-adjust-array-fp-test adjust-array.string.adjustable.9
  - [ ] (deftest adjust-array.string.adjustable.10
  - [ ] (deftest adjust-array.string.adjustable.11
  - [ ] (deftest adjust-array.string.adjustable.12
  - [ ] (deftest adjust-array.string.adjustable.13
  - [ ] (def-adjust-array-test adjust-array.string.21
  - [ ] (def-adjust-array-test adjust-array.string.22
  - [ ] (def-adjust-array-test adjust-array.bit-vector.1
  - [ ] (def-adjust-array-test adjust-array.bit-vector.2
  - [ ] (def-adjust-array-test adjust-array.bit-vector.3
  - [ ] (def-adjust-array-test adjust-array.bit-vector.4
  - [ ] (def-adjust-array-fp-test adjust-array.bit-vector.5
  - [ ] (def-adjust-array-fp-test adjust-array.bit-vector.6
  - [ ] (def-adjust-array-fp-test adjust-array.bit-vector.7
  - [ ] (def-adjust-array-fp-test adjust-array.bit-vector.8
  - [ ] (def-adjust-array-fp-test adjust-array.bit-vector.9
  - [ ] (deftest adjust-array.bit-vector.10
  - [ ] (deftest adjust-array.bit-vector.11
  - [ ] (deftest adjust-array.bit-vector.12
  - [ ] (deftest adjust-array.bit-vector.13
  - [ ] (deftest adjust-array.bit-vector.14
  - [ ] (deftest adjust-array.bit-vector.15
  - [ ] (deftest adjust-array.bit-vector.16
  - [ ] (def-adjust-array-test adjust-array.bit-vector.17
  - [ ] (def-adjust-array-test adjust-array.bit-vector.18
  - [ ] (def-adjust-array-test adjust-array.bit-vector.19
  - [ ] (deftest adjust-array.bit-vector.20
  - [ ] (def-adjust-array-test adjust-array.bit-vector.21
  - [ ] (def-adjust-array-test adjust-array.bit-vector.22
  - [ ] (def-adjust-array-test adjust-array.bit-vector.adjustable.1
  - [ ] (def-adjust-array-test adjust-array.bit-vector.adjustable.2
  - [ ] (def-adjust-array-test adjust-array.bit-vector.adjustable.3
  - [ ] (def-adjust-array-test adjust-array.bit-vector.adjustable.4
  - [ ] (def-adjust-array-fp-test adjust-array.bit-vector.adjustable.5
  - [ ] (def-adjust-array-fp-test adjust-array.bit-vector.adjustable.6
  - [ ] (def-adjust-array-fp-test adjust-array.bit-vector.adjustable.7
  - [ ] (def-adjust-array-fp-test adjust-array.bit-vector.adjustable.8
  - [ ] (def-adjust-array-fp-test adjust-array.bit-vector.adjustable.9
  - [ ] (deftest adjust-array.bit-vector.adjustable.10
  - [ ] (deftest adjust-array.bit-vector.adjustable.11
  - [ ] (deftest adjust-array.bit-vector.adjustable.12
  - [ ] (deftest adjust-array.bit-vector.adjustable.13
  - [ ] (deftest adjust-array.error.1
  - [ ] (deftest adjust-array.error.2
  - [ ] (deftest adjust-array.error.3
  - [ ] (deftest adjust-array.error.4
  - [ ] (deftest adjust-array.error.5
  - [ ] (deftest adjust-array.error.6
**** bit-not.lsp [0%]
  - [ ] (deftest bit-not.1
  - [ ] (deftest bit-not.2
  - [ ] (deftest bit-not.3
  - [ ] (deftest bit-not.4
  - [ ] (deftest bit-not.5
  - [ ] (deftest bit-not.6
  - [ ] (deftest bit-not.7
  - [ ] (deftest bit-not.8
  - [ ] (deftest bit-not.9
  - [ ] (deftest bit-not.10
  - [ ] (deftest bit-not.11
  - [ ] (deftest bit-not.12
  - [ ] (deftest bit-not.13
  - [ ] (deftest bit-not.14
  - [ ] (deftest bit-not.15
  - [ ] (deftest bit-not.16
  - [ ] (deftest bit-not.17
  - [ ] (deftest bit-not.order.1
  - [ ] (def-fold-test bit-not.fold.1 (bit-not #*00101))
  - [ ] (deftest bit-not.error.1
  - [ ] (deftest bit-not.error.2
**** bit-nor.lsp [0%]
  - [ ] (deftest bit-nor.1
  - [ ] (deftest bit-nor.2
  - [ ] (deftest bit-nor.3
  - [ ] (deftest bit-nor.4
  - [ ] (deftest bit-nor.5
  - [ ] (deftest bit-nor.6
  - [ ] (deftest bit-nor.7
  - [ ] (deftest bit-nor.8
  - [ ] (deftest bit-nor.9
  - [ ] (deftest bit-nor.10
  - [ ] (deftest bit-nor.11
  - [ ] (deftest bit-nor.12
  - [ ] (deftest bit-nor.13
  - [ ] (deftest bit-nor.14
  - [ ] (deftest bit-nor.15
  - [ ] (deftest bit-nor.16
  - [ ] (deftest bit-nor.17
  - [ ] (deftest bit-nor.18
  - [ ] (deftest bit-nor.19
  - [ ] (deftest bit-nor.20
  - [ ] (deftest bit-nor.21
  - [ ] (deftest bit-nor.22
  - [ ] (deftest bit-nor.order.1
  - [ ] (def-fold-test bit-nor.fold.1 (bit-nor #*00101 #*10100))
  - [ ] (deftest bit-nor.random.1
  - [ ] (deftest bit-nor.error.1
  - [ ] (deftest bit-nor.error.2
  - [ ] (deftest bit-nor.error.3
**** bit-orc1.lsp [0%]
  - [ ] (deftest bit-orc1.1
  - [ ] (deftest bit-orc1.2
  - [ ] (deftest bit-orc1.3
  - [ ] (deftest bit-orc1.4
  - [ ] (deftest bit-orc1.5
  - [ ] (deftest bit-orc1.6
  - [ ] (deftest bit-orc1.7
  - [ ] (deftest bit-orc1.8
  - [ ] (deftest bit-orc1.9
  - [ ] (deftest bit-orc1.10
  - [ ] (deftest bit-orc1.11
  - [ ] (deftest bit-orc1.12
  - [ ] (deftest bit-orc1.13
  - [ ] (deftest bit-orc1.14
  - [ ] (deftest bit-orc1.15
  - [ ] (deftest bit-orc1.16
  - [ ] (deftest bit-orc1.17
  - [ ] (deftest bit-orc1.18
  - [ ] (deftest bit-orc1.19
  - [ ] (deftest bit-orc1.20
  - [ ] (deftest bit-orc1.21
  - [ ] (deftest bit-orc1.22
  - [ ] (deftest bit-orc1.order.1
  - [ ] (deftest bit-orc1.fold.1
  - [ ] (deftest bit-orc1.random.1
  - [ ] (deftest bit-orc1.error.1
  - [ ] (deftest bit-orc1.error.2
  - [ ] (deftest bit-orc1.error.3
**** simple-bit-vector-p.lsp [0%]
  - [ ] (deftest simple-bit-vector-p.2
  - [ ] (deftest simple-bit-vector-p.3
  - [ ] (deftest simple-bit-vector-p.4
  - [ ] (deftest simple-bit-vector-p.5
  - [ ] (deftest simple-bit-vector-p.6
  - [ ] (deftest simple-bit-vector-p.7
  - [ ] (deftest simple-bit-vector-p.8
  - [ ] (deftest simple-bit-vector-p.9
  - [ ] (deftest simple-bit-vector-p.10
  - [ ] (deftest simple-bit-vector-p.11
  - [ ] (deftest simple-bit-vector-p.12
  - [ ] (deftest simple-bit-vector-p.error.1
  - [ ] (deftest simple-bit-vector-p.error.2
**** array-t.lsp [0%]
  - [ ] (deftest array-t.2.1
  - [ ] (deftest array-t.2.2
  - [ ] (deftest array-t.2.3
  - [ ] (deftest array-t.2.4
  - [ ] (deftest array-t.2.5
  - [ ] (deftest array-t.2.6
  - [ ] (deftest array-t.3.1
  - [ ] (deftest array-t.3.2
  - [ ] (deftest array-t.3.3
  - [ ] (deftest array-t.3.4
  - [ ] (deftest array-t.3.5
  - [ ] (deftest array-t.3.6
  - [ ] (deftest array-t.4.1
  - [ ] (deftest array-t.4.2
  - [ ] (deftest array-t.4.3
  - [ ] (deftest array-t.4.4
  - [ ] (deftest array-t.4.5
  - [ ] (deftest array-t.4.6
  - [ ] (deftest array-t.5.1
  - [ ] (deftest array-t.5.2
  - [ ] (deftest array-t.5.3
  - [ ] (deftest array-t.5.4
  - [ ] (deftest array-t.5.5
  - [ ] (deftest array-t.5.6
  - [ ] (deftest array-t.6.1
  - [ ] (deftest array-t.6.2
  - [ ] (deftest array-t.6.3
  - [ ] (deftest array-t.6.4
  - [ ] (deftest array-t.6.5
  - [ ] (deftest array-t.6.6
  - [ ] (deftest array-t.7.1
  - [ ] (deftest array-t.7.2
  - [ ] (deftest array-t.7.3
  - [ ] (deftest array-t.7.4
  - [ ] (deftest array-t.7.5
  - [ ] (deftest array-t.7.6
  - [ ] (deftest array-t.8.1
  - [ ] (deftest array-t.8.2
  - [ ] (deftest array-t.8.3
  - [ ] (deftest array-t.8.4
  - [ ] (deftest array-t.8.5
  - [ ] (deftest array-t.8.6
  - [ ] (deftest array-t.8.7
  - [ ] (deftest array-t.8.8
  - [ ] (deftest array-t.8.9
  - [ ] (deftest array-t.8.10
  - [ ] (deftest array-t.8.11
  - [ ] (deftest array-t.8.12
  - [ ] (deftest array-t.8.13
  - [ ] (deftest array-t.8.14
  - [ ] (deftest array-t.9.1
  - [ ] (deftest array-t.9.2
  - [ ] (deftest array-t.9.3
  - [ ] (deftest array-t.9.4
  - [ ] (deftest array-t.9.5
  - [ ] (deftest array-t.9.6
  - [ ] (deftest array-t.9.7
  - [ ] (deftest array-t.9.8
  - [ ] (deftest array-t.9.9
  - [ ] (deftest array-t.9.10
  - [ ] (deftest array-t.9.11
  - [ ] (deftest array-t.9.12
  - [ ] (deftest array-t.9.13
**** bit-ior.lsp [0%]
  - [ ] (deftest bit-ior.1
  - [ ] (deftest bit-ior.2
  - [ ] (deftest bit-ior.3
  - [ ] (deftest bit-ior.4
  - [ ] (deftest bit-ior.5
  - [ ] (deftest bit-ior.6
  - [ ] (deftest bit-ior.7
  - [ ] (deftest bit-ior.8
  - [ ] (deftest bit-ior.9
  - [ ] (deftest bit-ior.10
  - [ ] (deftest bit-ior.11
  - [ ] (deftest bit-ior.12
  - [ ] (deftest bit-ior.13
  - [ ] (deftest bit-ior.14
  - [ ] (deftest bit-ior.15
  - [ ] (deftest bit-ior.16
  - [ ] (deftest bit-ior.17
  - [ ] (deftest bit-ior.18
  - [ ] (deftest bit-ior.19
  - [ ] (deftest bit-ior.20
  - [ ] (deftest bit-ior.21
  - [ ] (deftest bit-ior.22
  - [ ] (deftest bit-ior.order.1
  - [ ] (def-fold-test bit-ior.fold.1 (bit-ior #*00101 #*10100))
  - [ ] (deftest bit-ior.random.1
  - [ ] (deftest bit-ior.error.1
  - [ ] (deftest bit-ior.error.2
  - [ ] (deftest bit-ior.error.3
**** array-has-fill-pointer-p.lsp [20%]
  - [ ] (deftest array-has-fill-pointer-p.1
  - [ ] (deftest array-has-fill-pointer-p.2
  - [ ] (deftest array-has-fill-pointer-p.3
  - [ ] (deftest array-has-fill-pointer-p.4
  - [ ] (deftest array-has-fill-pointer-p.5
  - [ ] (deftest array-has-fill-pointer-p.order.1
  - [X] (deftest array-has-fill-pointer-p.error.1
  - [X] (deftest array-has-fill-pointer-p.error.2
  - [ ] (deftest array-has-fill-pointer-p.error.3
  - [ ] (deftest array-has-fill-pointer-p.error.4
**** svref.lsp [100%]
  - [X] (deftest svref.1
  - [X] (deftest svref.2
  - [X] (deftest svref.order.1
  - [X] (deftest svref.order.2
  - [X] (deftest svref.error.1
  - [X] (deftest svref.error.2
  - [X] (deftest svref.error.3
  - [X] (deftest svref.error.4
**** row-major-aref.lsp [7%]
  - [ ] (deftest row-major-aref.1
  - [X] (deftest row-major-aref.2
  - [ ] (deftest row-major-aref.3
  - [ ] (deftest row-major-aref.4
  - [ ] (deftest row-major-aref.5
  - [ ] (deftest row-major-aref.6
  - [ ] (deftest row-major-aref.7
  - [ ] (deftest row-major-aref.8
  - [ ] (deftest row-major-aref.9
  - [ ] (deftest row-major-aref.10
  - [ ] (deftest row-major-aref.order.1
  - [ ] (deftest row-major-aref.order.2
  - [ ] (deftest row-major-aref.error.1
**** adjustable-array-p.lsp [30%]
  - [ ] (deftest adjustable-array-p.1
  - [ ] (deftest adjustable-array-p.2
  - [ ] (deftest adjustable-array-p.3
  - [ ] (deftest adjustable-array-p.4
  - [ ] (deftest adjustable-array-p.5
  - [ ] (deftest adjustable-array-p.6
  - [ ] (deftest adjustable-array-p.order.1
  - [X] (deftest adjustable-array-p.error.1
  - [X] (deftest adjustable-array-p.error.2
  - [ ] (deftest adjustable-array-p.error.3
  - [ ] (deftest adjustable-array-p.error.4
  - [X] (deftest adjustable-array-p.error.5
  - [X] (deftest adjustable-array-p.error.6
**** bit-xor.lsp [0%]
  - [ ] (deftest bit-xor.1
  - [ ] (deftest bit-xor.2
  - [ ] (deftest bit-xor.3
  - [ ] (deftest bit-xor.4
  - [ ] (deftest bit-xor.5
  - [ ] (deftest bit-xor.6
  - [ ] (deftest bit-xor.7
  - [ ] (deftest bit-xor.8
  - [ ] (deftest bit-xor.9
  - [ ] (deftest bit-xor.10
  - [ ] (deftest bit-xor.11
  - [ ] (deftest bit-xor.12
  - [ ] (deftest bit-xor.13
  - [ ] (deftest bit-xor.14
  - [ ] (deftest bit-xor.15
  - [ ] (deftest bit-xor.16
  - [ ] (deftest bit-xor.17
  - [ ] (deftest bit-xor.18
  - [ ] (deftest bit-xor.19
  - [ ] (deftest bit-xor.20
  - [ ] (deftest bit-xor.21
  - [ ] (deftest bit-xor.22
  - [ ] (deftest bit-xor.order.1
  - [ ] (def-fold-test bit-xor.fold.1 (bit-xor #*00101 #*10100))
  - [ ] (deftest bit-xor.random.1
  - [ ] (deftest bit-xor.error.1
  - [ ] (deftest bit-xor.error.2
  - [ ] (deftest bit-xor.error.3
**** array-total-size.lsp [8%]
  - [X] (deftest array-total-size.1
  - [ ] (deftest array-total-size.2
  - [ ] (deftest array-total-size.3
  - [ ] (deftest array-total-size.4
  - [ ] (deftest array-total-size.5
  - [ ] (deftest array-total-size.6
  - [ ] (deftest array-total-size.order.1
  - [ ] (deftest array-total-size.error.1
  - [ ] (deftest array-total-size.error.2
  - [ ] (deftest array-total-size.error.3
  - [ ] (deftest array-total-size.error.4
  - [ ] (deftest array-total-size.error.5
**** bit-vector.lsp [40%]
  - [X] (deftest bit-vector.1
  - [X] (deftest bit-vector.2
  - [X] (deftest bit-vector.3
  - [X] (deftest bit-vector.4
  - [X] (deftest bit-vector.5
  - [X] (deftest bit-vector.6
  - [X] (deftest bit-vector.7
  - [X] (deftest bit-vector.8
  - [X] (deftest bit-vector.9
  - [X] (deftest bit-vector.10
  - [X] (deftest bit-vector.11
  - [ ] (deftest bit-vector.12
  - [ ] (deftest bit-vector.13
  - [ ] (deftest bit-vector.14
  - [ ] (deftest bit-vector.15
  - [ ] (deftest bit-vector.16
  - [ ] (deftest bit-vector.17
  - [ ] (deftest bit-vector.class.2
  - [ ] (deftest bit-vector.class.3
  - [ ] (deftest bit-vector.class.4
  - [ ] (deftest bit-vector.class.5
  - [ ] (deftest bit-vector.class.6
  - [ ] (deftest bit-vector.class.7
  - [ ] (deftest bit-vector.class.8
  - [ ] (deftest bit-vector.class.9
  - [ ] (deftest bit-vector.class.10
  - [ ] (deftest bit-vector.class.11
**** array.lsp [14%]
  - [X] (deftest array.1.1
  - [ ] (deftest array.1.2
  - [ ] (deftest array.1.3
  - [X] (deftest array.1.4
  - [X] (deftest array.1.5
  - [X] (deftest array.1.6
  - [X] (deftest array.1.7
  - [X] (deftest array.1.8
  - [X] (deftest array.1.9
  - [X] (deftest array.1.10
  - [X] (deftest array.1.11
  - [X] (deftest array.1.12
  - [X] (deftest array.1.13
  - [ ] (deftest array.2.1
  - [ ] (deftest array.2.2
  - [ ] (deftest array.2.3
  - [ ] (deftest array.2.4
  - [ ] (deftest array.2.5
  - [ ] (deftest array.2.6
  - [ ] (deftest array.3.1
  - [ ] (deftest array.3.2
  - [ ] (deftest array.3.3
  - [ ] (deftest array.3.4
  - [ ] (deftest array.3.5
  - [ ] (deftest array.3.6
  - [ ] (deftest array.4.1
  - [ ] (deftest array.4.2
  - [ ] (deftest array.4.3
  - [ ] (deftest array.4.4
  - [ ] (deftest array.4.5
  - [ ] (deftest array.4.6
  - [ ] (deftest array.5.1
  - [ ] (deftest array.5.2
  - [ ] (deftest array.5.3
  - [ ] (deftest array.5.4
  - [ ] (deftest array.5.5
  - [ ] (deftest array.5.6
  - [ ] (deftest array.6.1
  - [ ] (deftest array.6.2
  - [ ] (deftest array.6.3
  - [ ] (deftest array.6.4
  - [ ] (deftest array.6.5
  - [ ] (deftest array.6.6
  - [ ] (deftest array.7.1
  - [ ] (deftest array.7.2
  - [ ] (deftest array.7.3
  - [ ] (deftest array.7.4
  - [ ] (deftest array.7.5
  - [ ] (deftest array.7.6
  - [ ] (deftest array.8.1
  - [ ] (deftest array.8.2
  - [ ] (deftest array.8.3
  - [ ] (deftest array.8.4
  - [ ] (deftest array.8.5
  - [ ] (deftest array.8.6
  - [ ] (deftest array.8.7
  - [ ] (deftest array.8.8
  - [ ] (deftest array.8.9
  - [ ] (deftest array.8.10
  - [ ] (deftest array.8.11
  - [ ] (deftest array.8.12
  - [ ] (deftest array.8.13
  - [ ] (deftest array.8.14
  - [ ] (deftest array.9.1
  - [ ] (deftest array.9.2
  - [ ] (deftest array.9.3
  - [ ] (deftest array.9.4
  - [ ] (deftest array.9.5
  - [ ] (deftest array.9.6
  - [ ] (deftest array.9.7
  - [ ] (deftest array.9.8
  - [ ] (deftest array.9.9
  - [ ] (deftest array.9.10
  - [ ] (deftest array.9.11
  - [ ] (deftest array.9.12
  - [ ] (deftest array.9.13
**** bit-eqv.lsp [0%]
  - [ ] (deftest bit-eqv.1
  - [ ] (deftest bit-eqv.2
  - [ ] (deftest bit-eqv.3
  - [ ] (deftest bit-eqv.4
  - [ ] (deftest bit-eqv.5
  - [ ] (deftest bit-eqv.6
  - [ ] (deftest bit-eqv.7
  - [ ] (deftest bit-eqv.8
  - [ ] (deftest bit-eqv.9
  - [ ] (deftest bit-eqv.10
  - [ ] (deftest bit-eqv.11
  - [ ] (deftest bit-eqv.12
  - [ ] (deftest bit-eqv.13
  - [ ] (deftest bit-eqv.14
  - [ ] (deftest bit-eqv.15
  - [ ] (deftest bit-eqv.16
  - [ ] (deftest bit-eqv.17
  - [ ] (deftest bit-eqv.18
  - [ ] (deftest bit-eqv.19
  - [ ] (deftest bit-eqv.20
  - [ ] (deftest bit-eqv.21
  - [ ] (deftest bit-eqv.22
  - [ ] (deftest bit-eqv.order.1
  - [ ] (def-fold-test bit-eqv.fold.1 (bit-eqv #*01101 #*10100))
  - [ ] (deftest bit-eqv.random.1
  - [ ] (deftest bit-eqv.error.1
  - [ ] (deftest bit-eqv.error.2
  - [ ] (deftest bit-eqv.error.3
**** array-in-bounds-p.lsp [0%]
  - [ ] (deftest array-in-bounds-p.1
  - [ ] (deftest array-in-bounds-p.2
  - [ ] (deftest array-in-bounds-p.3
  - [ ] (deftest array-in-bounds-p.4
  - [ ] (deftest array-in-bounds-p.5
  - [ ] (deftest array-in-bounds-p.6
  - [ ] (deftest array-in-bounds-p.7
  - [ ] (deftest array-in-bounds-p.8
  - [ ] (deftest array-in-bounds-p.9
  - [ ] (deftest array-in-bounds-p.10
  - [ ] (deftest array-in-bounds-p.11
  - [ ] (deftest array-in-bounds-p.12
  - [ ] (deftest array-in-bounds-p.13
  - [ ] (deftest array-in-bounds-p.14
  - [ ] (deftest array-in-bounds-p.15
  - [ ] (deftest array-in-bounds-p.16
  - [ ] (deftest array-in-bounds-p.17
  - [ ] (deftest array-in-bounds-p.18
  - [ ] (deftest array-in-bounds-p.19
  - [ ] (deftest array-in-bounds-p.20
  - [ ] (deftest array-in-bounds-p.21
  - [ ] (deftest array-in-bounds-p.22
  - [ ] (deftest array-in-bounds-p.23
  - [ ] (deftest array-in-bounds-p.24
  - [ ] (deftest array-in-bounds-p.25
  - [ ] (deftest array-in-bounds-p.order.1
  - [ ] (deftest array-in-bounds-p.error.1
*** symbols [0%]
**** make-symbol.lsp [47%]
  - [X] (deftest make-symbol.1
  - [ ] (deftest make-symbol.2
  - [ ] (deftest make-symbol.3
  - [ ] (deftest make-symbol.4
  - [X] (deftest make-symbol.5
  - [X] (deftest make-symbol.6
  - [X] (deftest make-symbol.7
  - [X] (deftest make-symbol.8
  - [X] (deftest make-symbol.9
  - [X] (deftest make-symbol.10
  - [ ] (deftest make-symbol.11
  - [ ] (deftest make-symbol.12
  - [ ] (deftest make-symbol.13
  - [ ] (deftest make-symbol.14
  - [ ] (deftest make-symbol.15
  - [ ] (deftest make-symbol.16
  - [X] (deftest make-symbol.order.1
  - [ ] (deftest make-symbol.error.1
  - [X] (deftest make-symbol.error.9
  - [X] (deftest make-symbol.error.10
  - [ ] (deftest make-symbol.error.11
**** symbol-name.lsp [83%]
  - [X] (deftest symbol-name.1
  - [X] (deftest symbol-name.2
  - [X] (deftest symbol-name.3
  - [X] (deftest symbol-name.error.1
  - [X] (deftest symbol-name.error.2
  - [ ] (deftest symbol-name.error.3
**** boundp.lsp [53%]
  - [X] (deftest boundp.error.1
  - [X] (deftest boundp.error.2
  - [ ] (deftest boundp.error.3
  - [ ] (deftest boundp.error.4
  - [ ] (deftest boundp.error.5
  - [ ] (deftest boundp.error.6
  - [X] (deftest boundp.1
  - [X] (deftest boundp.2
  - [X] (deftest boundp.3
  - [X] (deftest boundp.4
  - [ ] (deftest boundp.5
  - [ ] (deftest boundp.6
  - [X] (deftest boundp.order.1
**** get.lsp [80%]
  - [X] (deftest get.1
  - [X] (deftest get.2
  - [X] (deftest get.3
  - [ ] (deftest get.4
  - [X] (deftest get.5
  - [X] (deftest get.6
  - [X] (deftest get.order.1
  - [X] (deftest get.order.2
  - [X] (deftest get.order.3
  - [X] (deftest get.order.4
  - [X] (deftest get.error.1
  - [X] (deftest get.error.2
  - [X] (deftest get.error.3
  - [ ] (deftest get.error.4
  - [ ] (deftest get.error.5
**** symbol-function.lsp [50%]
  - [X] (deftest symbol-function.1
  - [X] (deftest symbol-function.error.1
  - [X] (deftest symbol-function.error.2
  - [ ] (deftest symbol-function.error.3
  - [ ] (deftest symbol-function.error.4
  - [ ] (deftest symbol-function.error.5
**** gensym.lsp [83%]
  - [X] (deftest gensym.1
  - [X] (deftest gensym.2
  - [X] (deftest gensym.3
  - [X] (deftest gensym.4
  - [X] (deftest gensym.5
  - [X] (deftest gensym.6
  - [X] (deftest gensym.7
  - [ ] (deftest gensym.8
  - [X] (deftest gensym.9
  - [X] (deftest gensym.10
  - [X] (deftest gensym.11
  - [X] (deftest gensym.12
  - [X] (deftest gensym.13
  - [ ] (deftest gensym-counter.1
  - [ ] (deftest gensym.error.1
  - [X] (deftest gensym.error.7
  - [X] (deftest gensym.error.8
  - [X] (deftest gensym.error.9
**** symbolp.lsp [60%]
  - [X] (deftest symbolp.1
  - [ ] (deftest symbolp.2
  - [ ] (deftest symbolp.3
  - [X] (deftest symbolp.error.1
  - [X] (deftest symbolp.error.2
**** keywordp.lsp [93%]
  - [X] (deftest keywordp.1 (keywordp 'hefalump)   nil)
  - [X] (deftest keywordp.2 (keywordp 17)          nil)
  - [X] (deftest keywordp.3 (notnot-mv (keywordp :stream))         t)
  - [X] (deftest keywordp.4 (notnot-mv (keywordp ':stream))        t)
  - [X] (deftest keywordp.5 (keywordp nil)         nil)
  - [X] (deftest keywordp.6 (notnot-mv (keywordp :nil))          t)
  - [X] (deftest keywordp.7 (keywordp '(:stream))    nil)
  - [X] (deftest keywordp.8 (keywordp "rest")     nil)
  - [X] (deftest keywordp.9 (keywordp ":rest")    nil)
  - [X] (deftest keywordp.10 (keywordp '&body) nil)
  - [X] (deftest keywordp.12 (keywordp t)          nil)
  - [ ] (deftest keywordp.13
  - [X] (deftest keywordp.order.1
  - [X] (deftest keywordp.error.1 (signals-error (keywordp) program-error) t)
  - [X] (deftest keywordp.error.2 (signals-error (keywordp :x :x) program-error) t)
**** remprop.lsp [50%]
  - [X] (deftest remprop.1
  - [ ] (deftest remprop.2
  - [ ] (deftest remprop.3
  - [ ] (deftest remprop.4
  - [X] (deftest remprop.error.1
  - [X] (deftest remprop.error.2
  - [X] (deftest remprop.error.3
  - [ ] (deftest remprop.error.4
**** special-operator-p.lsp [33%]
  - [ ] (deftest special-operator-p.1
  - [ ] (deftest special-operator-p.2
  - [ ] (deftest special-operator-p.order.1
  - [ ] (deftest special-operator-p.error.1
  - [X] (deftest special-operator-p.error.2
  - [X] (deftest special-operator-p.error.3
**** set.lsp [83%]
  - [ ] (deftest set.1
  - [X] (deftest set.2
  - [X] (deftest set.error.1
  - [X] (deftest set.error.2
  - [X] (deftest set.error.3
  - [X] (deftest set.error.4
**** gentemp.lsp [11%]
  - [ ] (deftest gentemp.1
  - [ ] (deftest gentemp.2
  - [ ] (deftest gentemp.3
  - [ ] (deftest gentemp.4
  - [ ] (deftest gentemp.5
  - [ ] (deftest gentemp.6
  - [ ] (deftest gentemp.error.1
  - [ ] (deftest gentemp.error.2
  - [X] (deftest gentemp.error.3
**** cl-symbols.lsp [98%]
  - [X] (deftest symbol-&allow-other-keys (test-if-not-in-cl-package "&allow-other-keys") nil)
  - [X] (deftest symbol-&aux (test-if-not-in-cl-package "&aux") nil)
  - [X] (deftest symbol-&body (test-if-not-in-cl-package "&body") nil)
  - [X] (deftest symbol-&environment (test-if-not-in-cl-package "&environment") nil)
  - [X] (deftest symbol-&key (test-if-not-in-cl-package "&key") nil)
  - [X] (deftest symbol-&optional (test-if-not-in-cl-package "&optional") nil)
  - [X] (deftest symbol-&rest (test-if-not-in-cl-package "&rest") nil)
  - [X] (deftest symbol-&whole (test-if-not-in-cl-package "&whole") nil)
  - [X] (deftest symbol-* (test-if-not-in-cl-package "*") nil)
  - [X] (deftest symbol-** (test-if-not-in-cl-package "**") nil)
  - [X] (deftest symbol-*** (test-if-not-in-cl-package "***") nil)
  - [X] (deftest symbol-*break-on-signals* (test-if-not-in-cl-package "*break-on-signals*") nil)
  - [X] (deftest symbol-*compile-file-pathname* (test-if-not-in-cl-package "*compile-file-pathname*") nil)
  - [X] (deftest symbol-*compile-file-truename* (test-if-not-in-cl-package "*compile-file-truename*") nil)
  - [X] (deftest symbol-*compile-print* (test-if-not-in-cl-package "*compile-print*") nil)
  - [X] (deftest symbol-*compile-verbose* (test-if-not-in-cl-package "*compile-verbose*") nil)
  - [X] (deftest symbol-*debug-io* (test-if-not-in-cl-package "*debug-io*") nil)
  - [X] (deftest symbol-*debugger-hook* (test-if-not-in-cl-package "*debugger-hook*") nil)
  - [X] (deftest symbol-*default-pathname-defaults* (test-if-not-in-cl-package "*default-pathname-defaults*") nil)
  - [X] (deftest symbol-*error-output* (test-if-not-in-cl-package "*error-output*") nil)
  - [X] (deftest symbol-*features* (test-if-not-in-cl-package "*features*") nil)
  - [X] (deftest symbol-*gensym-counter* (test-if-not-in-cl-package "*gensym-counter*") nil)
  - [X] (deftest symbol-*load-pathname* (test-if-not-in-cl-package "*load-pathname*") nil)
  - [X] (deftest symbol-*load-print* (test-if-not-in-cl-package "*load-print*") nil)
  - [X] (deftest symbol-*load-truename* (test-if-not-in-cl-package "*load-truename*") nil)
  - [X] (deftest symbol-*load-verbose* (test-if-not-in-cl-package "*load-verbose*") nil)
  - [X] (deftest symbol-*macroexpand-hook* (test-if-not-in-cl-package "*macroexpand-hook*") nil)
  - [X] (deftest symbol-*modules* (test-if-not-in-cl-package "*modules*") nil)
  - [X] (deftest symbol-*package* (test-if-not-in-cl-package "*package*") nil)
  - [X] (deftest symbol-*print-array* (test-if-not-in-cl-package "*print-array*") nil)
  - [X] (deftest symbol-*print-base* (test-if-not-in-cl-package "*print-base*") nil)
  - [X] (deftest symbol-*print-case* (test-if-not-in-cl-package "*print-case*") nil)
  - [X] (deftest symbol-*print-circle* (test-if-not-in-cl-package "*print-circle*") nil)
  - [X] (deftest symbol-*print-escape* (test-if-not-in-cl-package "*print-escape*") nil)
  - [X] (deftest symbol-*print-gensym* (test-if-not-in-cl-package "*print-gensym*") nil)
  - [X] (deftest symbol-*print-length* (test-if-not-in-cl-package "*print-length*") nil)
  - [X] (deftest symbol-*print-level* (test-if-not-in-cl-package "*print-level*") nil)
  - [X] (deftest symbol-*print-lines* (test-if-not-in-cl-package "*print-lines*") nil)
  - [X] (deftest symbol-*print-miser-width* (test-if-not-in-cl-package "*print-miser-width*") nil)
  - [X] (deftest symbol-*print-pprint-dispatch* (test-if-not-in-cl-package "*print-pprint-dispatch*") nil)
  - [X] (deftest symbol-*print-pretty* (test-if-not-in-cl-package "*print-pretty*") nil)
  - [X] (deftest symbol-*print-radix* (test-if-not-in-cl-package "*print-radix*") nil)
  - [X] (deftest symbol-*print-readably* (test-if-not-in-cl-package "*print-readably*") nil)
  - [X] (deftest symbol-*print-right-margin* (test-if-not-in-cl-package "*print-right-margin*") nil)
  - [X] (deftest symbol-*query-io* (test-if-not-in-cl-package "*query-io*") nil)
  - [X] (deftest symbol-*random-state* (test-if-not-in-cl-package "*random-state*") nil)
  - [X] (deftest symbol-*read-base* (test-if-not-in-cl-package "*read-base*") nil)
  - [X] (deftest symbol-*read-default-float-format* (test-if-not-in-cl-package "*read-default-float-format*") nil)
  - [X] (deftest symbol-*read-eval* (test-if-not-in-cl-package "*read-eval*") nil)
  - [X] (deftest symbol-*read-suppress* (test-if-not-in-cl-package "*read-suppress*") nil)
  - [X] (deftest symbol-*readtable* (test-if-not-in-cl-package "*readtable*") nil)
  - [X] (deftest symbol-*standard-input* (test-if-not-in-cl-package "*standard-input*") nil)
  - [X] (deftest symbol-*standard-output* (test-if-not-in-cl-package "*standard-output*") nil)
  - [X] (deftest symbol-*terminal-io* (test-if-not-in-cl-package "*terminal-io*") nil)
  - [X] (deftest symbol-*trace-output* (test-if-not-in-cl-package "*trace-output*") nil)
  - [X] (deftest symbol-+ (test-if-not-in-cl-package "+") nil)
  - [X] (deftest symbol-++ (test-if-not-in-cl-package "++") nil)
  - [X] (deftest symbol-+++ (test-if-not-in-cl-package "+++") nil)
  - [X] (deftest symbol-- (test-if-not-in-cl-package "-") nil)
  - [X] (deftest symbol-/ (test-if-not-in-cl-package "/") nil)
  - [X] (deftest symbol-// (test-if-not-in-cl-package "//") nil)
  - [X] (deftest symbol-/// (test-if-not-in-cl-package "///") nil)
  - [X] (deftest symbol-/= (test-if-not-in-cl-package "/=") nil)
  - [X] (deftest symbol-1+ (test-if-not-in-cl-package "1+") nil)
  - [X] (deftest symbol-1- (test-if-not-in-cl-package "1-") nil)
  - [X] (deftest symbol-< (test-if-not-in-cl-package "<") nil)
  - [X] (deftest symbol-<= (test-if-not-in-cl-package "<=") nil)
  - [X] (deftest symbol-= (test-if-not-in-cl-package "=") nil)
  - [X] (deftest symbol-> (test-if-not-in-cl-package ">") nil)
  - [X] (deftest symbol->= (test-if-not-in-cl-package ">=") nil)
  - [X] (deftest symbol-abort (test-if-not-in-cl-package "abort") nil)
  - [X] (deftest symbol-abs (test-if-not-in-cl-package "abs") nil)
  - [X] (deftest symbol-acons (test-if-not-in-cl-package "acons") nil)
  - [X] (deftest symbol-acos (test-if-not-in-cl-package "acos") nil)
  - [X] (deftest symbol-acosh (test-if-not-in-cl-package "acosh") nil)
  - [X] (deftest symbol-add-method (test-if-not-in-cl-package "add-method") nil)
  - [X] (deftest symbol-adjoin (test-if-not-in-cl-package "adjoin") nil)
  - [X] (deftest symbol-adjust-array (test-if-not-in-cl-package "adjust-array") nil)
  - [X] (deftest symbol-adjustable-array-p (test-if-not-in-cl-package "adjustable-array-p") nil)
  - [X] (deftest symbol-allocate-instance (test-if-not-in-cl-package "allocate-instance") nil)
  - [X] (deftest symbol-alpha-char-p (test-if-not-in-cl-package "alpha-char-p") nil)
  - [X] (deftest symbol-alphanumericp (test-if-not-in-cl-package "alphanumericp") nil)
  - [X] (deftest symbol-and (test-if-not-in-cl-package "and") nil)
  - [X] (deftest symbol-append (test-if-not-in-cl-package "append") nil)
  - [X] (deftest symbol-apply (test-if-not-in-cl-package "apply") nil)
  - [X] (deftest symbol-apropos (test-if-not-in-cl-package "apropos") nil)
  - [X] (deftest symbol-apropos-list (test-if-not-in-cl-package "apropos-list") nil)
  - [X] (deftest symbol-aref (test-if-not-in-cl-package "aref") nil)
  - [X] (deftest symbol-arithmetic-error (test-if-not-in-cl-package "arithmetic-error") nil)
  - [X] (deftest symbol-arithmetic-error-operands (test-if-not-in-cl-package "arithmetic-error-operands") nil)
  - [X] (deftest symbol-arithmetic-error-operation (test-if-not-in-cl-package "arithmetic-error-operation") nil)
  - [X] (deftest symbol-array (test-if-not-in-cl-package "array") nil)
  - [X] (deftest symbol-array-dimension (test-if-not-in-cl-package "array-dimension") nil)
  - [X] (deftest symbol-array-dimension-limit (test-if-not-in-cl-package "array-dimension-limit") nil)
  - [X] (deftest symbol-array-dimensions (test-if-not-in-cl-package "array-dimensions") nil)
  - [X] (deftest symbol-array-displacement (test-if-not-in-cl-package "array-displacement") nil)
  - [X] (deftest symbol-array-element-type (test-if-not-in-cl-package "array-element-type") nil)
  - [X] (deftest symbol-array-has-fill-pointer-p (test-if-not-in-cl-package "array-has-fill-pointer-p") nil)
  - [X] (deftest symbol-array-in-bounds-p (test-if-not-in-cl-package "array-in-bounds-p") nil)
  - [X] (deftest symbol-array-rank (test-if-not-in-cl-package "array-rank") nil)
  - [X] (deftest symbol-array-rank-limit (test-if-not-in-cl-package "array-rank-limit") nil)
  - [X] (deftest symbol-array-row-major-index (test-if-not-in-cl-package "array-row-major-index") nil)
  - [X] (deftest symbol-array-total-size (test-if-not-in-cl-package "array-total-size") nil)
  - [X] (deftest symbol-array-total-size-limit (test-if-not-in-cl-package "array-total-size-limit") nil)
  - [X] (deftest symbol-arrayp (test-if-not-in-cl-package "arrayp") nil)
  - [X] (deftest symbol-ash (test-if-not-in-cl-package "ash") nil)
  - [X] (deftest symbol-asin (test-if-not-in-cl-package "asin") nil)
  - [X] (deftest symbol-asinh (test-if-not-in-cl-package "asinh") nil)
  - [X] (deftest symbol-assert (test-if-not-in-cl-package "assert") nil)
  - [X] (deftest symbol-assoc (test-if-not-in-cl-package "assoc") nil)
  - [X] (deftest symbol-assoc-if (test-if-not-in-cl-package "assoc-if") nil)
  - [X] (deftest symbol-assoc-if-not (test-if-not-in-cl-package "assoc-if-not") nil)
  - [X] (deftest symbol-atan (test-if-not-in-cl-package "atan") nil)
  - [X] (deftest symbol-atanh (test-if-not-in-cl-package "atanh") nil)
  - [X] (deftest symbol-atom (test-if-not-in-cl-package "atom") nil)
  - [X] (deftest symbol-base-char (test-if-not-in-cl-package "base-char") nil)
  - [X] (deftest symbol-base-string (test-if-not-in-cl-package "base-string") nil)
  - [X] (deftest symbol-bignum (test-if-not-in-cl-package "bignum") nil)
  - [X] (deftest symbol-bit (test-if-not-in-cl-package "bit") nil)
  - [X] (deftest symbol-bit-and (test-if-not-in-cl-package "bit-and") nil)
  - [X] (deftest symbol-bit-andc1 (test-if-not-in-cl-package "bit-andc1") nil)
  - [X] (deftest symbol-bit-andc2 (test-if-not-in-cl-package "bit-andc2") nil)
  - [X] (deftest symbol-bit-eqv (test-if-not-in-cl-package "bit-eqv") nil)
  - [X] (deftest symbol-bit-ior (test-if-not-in-cl-package "bit-ior") nil)
  - [X] (deftest symbol-bit-nand (test-if-not-in-cl-package "bit-nand") nil)
  - [X] (deftest symbol-bit-nor (test-if-not-in-cl-package "bit-nor") nil)
  - [X] (deftest symbol-bit-not (test-if-not-in-cl-package "bit-not") nil)
  - [X] (deftest symbol-bit-orc1 (test-if-not-in-cl-package "bit-orc1") nil)
  - [X] (deftest symbol-bit-orc2 (test-if-not-in-cl-package "bit-orc2") nil)
  - [X] (deftest symbol-bit-vector (test-if-not-in-cl-package "bit-vector") nil)
  - [X] (deftest symbol-bit-vector-p (test-if-not-in-cl-package "bit-vector-p") nil)
  - [X] (deftest symbol-bit-xor (test-if-not-in-cl-package "bit-xor") nil)
  - [X] (deftest symbol-block (test-if-not-in-cl-package "block") nil)
  - [X] (deftest symbol-boole (test-if-not-in-cl-package "boole") nil)
  - [X] (deftest symbol-boole-1 (test-if-not-in-cl-package "boole-1") nil)
  - [X] (deftest symbol-boole-2 (test-if-not-in-cl-package "boole-2") nil)
  - [X] (deftest symbol-boole-and (test-if-not-in-cl-package "boole-and") nil)
  - [X] (deftest symbol-boole-andc1 (test-if-not-in-cl-package "boole-andc1") nil)
  - [X] (deftest symbol-boole-andc2 (test-if-not-in-cl-package "boole-andc2") nil)
  - [X] (deftest symbol-boole-c1 (test-if-not-in-cl-package "boole-c1") nil)
  - [X] (deftest symbol-boole-c2 (test-if-not-in-cl-package "boole-c2") nil)
  - [X] (deftest symbol-boole-clr (test-if-not-in-cl-package "boole-clr") nil)
  - [X] (deftest symbol-boole-eqv (test-if-not-in-cl-package "boole-eqv") nil)
  - [X] (deftest symbol-boole-ior (test-if-not-in-cl-package "boole-ior") nil)
  - [X] (deftest symbol-boole-nand (test-if-not-in-cl-package "boole-nand") nil)
  - [X] (deftest symbol-boole-nor (test-if-not-in-cl-package "boole-nor") nil)
  - [X] (deftest symbol-boole-orc1 (test-if-not-in-cl-package "boole-orc1") nil)
  - [X] (deftest symbol-boole-orc2 (test-if-not-in-cl-package "boole-orc2") nil)
  - [X] (deftest symbol-boole-set (test-if-not-in-cl-package "boole-set") nil)
  - [X] (deftest symbol-boole-xor (test-if-not-in-cl-package "boole-xor") nil)
  - [X] (deftest symbol-boolean (test-if-not-in-cl-package "boolean") nil)
  - [X] (deftest symbol-both-case-p (test-if-not-in-cl-package "both-case-p") nil)
  - [X] (deftest symbol-boundp (test-if-not-in-cl-package "boundp") nil)
  - [X] (deftest symbol-break (test-if-not-in-cl-package "break") nil)
  - [X] (deftest symbol-broadcast-stream (test-if-not-in-cl-package "broadcast-stream") nil)
  - [X] (deftest symbol-broadcast-stream-streams (test-if-not-in-cl-package "broadcast-stream-streams") nil)
  - [X] (deftest symbol-built-in-class (test-if-not-in-cl-package "built-in-class") nil)
  - [X] (deftest symbol-butlast (test-if-not-in-cl-package "butlast") nil)
  - [X] (deftest symbol-byte (test-if-not-in-cl-package "byte") nil)
  - [X] (deftest symbol-byte-position (test-if-not-in-cl-package "byte-position") nil)
  - [X] (deftest symbol-byte-size (test-if-not-in-cl-package "byte-size") nil)
  - [X] (deftest symbol-caaaar (test-if-not-in-cl-package "caaaar") nil)
  - [X] (deftest symbol-caaadr (test-if-not-in-cl-package "caaadr") nil)
  - [X] (deftest symbol-caaar (test-if-not-in-cl-package "caaar") nil)
  - [X] (deftest symbol-caadar (test-if-not-in-cl-package "caadar") nil)
  - [X] (deftest symbol-caaddr (test-if-not-in-cl-package "caaddr") nil)
  - [X] (deftest symbol-caadr (test-if-not-in-cl-package "caadr") nil)
  - [X] (deftest symbol-caar (test-if-not-in-cl-package "caar") nil)
  - [X] (deftest symbol-cadaar (test-if-not-in-cl-package "cadaar") nil)
  - [X] (deftest symbol-cadadr (test-if-not-in-cl-package "cadadr") nil)
  - [X] (deftest symbol-cadar (test-if-not-in-cl-package "cadar") nil)
  - [X] (deftest symbol-caddar (test-if-not-in-cl-package "caddar") nil)
  - [X] (deftest symbol-cadddr (test-if-not-in-cl-package "cadddr") nil)
  - [X] (deftest symbol-caddr (test-if-not-in-cl-package "caddr") nil)
  - [X] (deftest symbol-cadr (test-if-not-in-cl-package "cadr") nil)
  - [X] (deftest symbol-call-arguments-limit (test-if-not-in-cl-package "call-arguments-limit") nil)
  - [X] (deftest symbol-call-method (test-if-not-in-cl-package "call-method") nil)
  - [X] (deftest symbol-call-next-method (test-if-not-in-cl-package "call-next-method") nil)
  - [X] (deftest symbol-car (test-if-not-in-cl-package "car") nil)
  - [X] (deftest symbol-case (test-if-not-in-cl-package "case") nil)
  - [X] (deftest symbol-catch (test-if-not-in-cl-package "catch") nil)
  - [X] (deftest symbol-ccase (test-if-not-in-cl-package "ccase") nil)
  - [X] (deftest symbol-cdaaar (test-if-not-in-cl-package "cdaaar") nil)
  - [X] (deftest symbol-cdaadr (test-if-not-in-cl-package "cdaadr") nil)
  - [X] (deftest symbol-cdaar (test-if-not-in-cl-package "cdaar") nil)
  - [X] (deftest symbol-cdadar (test-if-not-in-cl-package "cdadar") nil)
  - [X] (deftest symbol-cdaddr (test-if-not-in-cl-package "cdaddr") nil)
  - [X] (deftest symbol-cdadr (test-if-not-in-cl-package "cdadr") nil)
  - [X] (deftest symbol-cdar (test-if-not-in-cl-package "cdar") nil)
  - [X] (deftest symbol-cddaar (test-if-not-in-cl-package "cddaar") nil)
  - [X] (deftest symbol-cddadr (test-if-not-in-cl-package "cddadr") nil)
  - [X] (deftest symbol-cddar (test-if-not-in-cl-package "cddar") nil)
  - [X] (deftest symbol-cdddar (test-if-not-in-cl-package "cdddar") nil)
  - [X] (deftest symbol-cddddr (test-if-not-in-cl-package "cddddr") nil)
  - [X] (deftest symbol-cdddr (test-if-not-in-cl-package "cdddr") nil)
  - [X] (deftest symbol-cddr (test-if-not-in-cl-package "cddr") nil)
  - [X] (deftest symbol-cdr (test-if-not-in-cl-package "cdr") nil)
  - [X] (deftest symbol-ceiling (test-if-not-in-cl-package "ceiling") nil)
  - [X] (deftest symbol-cell-error (test-if-not-in-cl-package "cell-error") nil)
  - [X] (deftest symbol-cell-error-name (test-if-not-in-cl-package "cell-error-name") nil)
  - [X] (deftest symbol-cerror (test-if-not-in-cl-package "cerror") nil)
  - [X] (deftest symbol-change-class (test-if-not-in-cl-package "change-class") nil)
  - [X] (deftest symbol-char (test-if-not-in-cl-package "char") nil)
  - [X] (deftest symbol-char-code (test-if-not-in-cl-package "char-code") nil)
  - [X] (deftest symbol-char-code-limit (test-if-not-in-cl-package "char-code-limit") nil)
  - [X] (deftest symbol-char-downcase (test-if-not-in-cl-package "char-downcase") nil)
  - [X] (deftest symbol-char-equal (test-if-not-in-cl-package "char-equal") nil)
  - [X] (deftest symbol-char-greaterp (test-if-not-in-cl-package "char-greaterp") nil)
  - [X] (deftest symbol-char-int (test-if-not-in-cl-package "char-int") nil)
  - [X] (deftest symbol-char-lessp (test-if-not-in-cl-package "char-lessp") nil)
  - [X] (deftest symbol-char-name (test-if-not-in-cl-package "char-name") nil)
  - [X] (deftest symbol-char-not-equal (test-if-not-in-cl-package "char-not-equal") nil)
  - [X] (deftest symbol-char-not-greaterp (test-if-not-in-cl-package "char-not-greaterp") nil)
  - [X] (deftest symbol-char-not-lessp (test-if-not-in-cl-package "char-not-lessp") nil)
  - [X] (deftest symbol-char-upcase (test-if-not-in-cl-package "char-upcase") nil)
  - [X] (deftest symbol-char/= (test-if-not-in-cl-package "char/=") nil)
  - [X] (deftest symbol-char< (test-if-not-in-cl-package "char<") nil)
  - [X] (deftest symbol-char<= (test-if-not-in-cl-package "char<=") nil)
  - [X] (deftest symbol-char= (test-if-not-in-cl-package "char=") nil)
  - [X] (deftest symbol-char> (test-if-not-in-cl-package "char>") nil)
  - [X] (deftest symbol-char>= (test-if-not-in-cl-package "char>=") nil)
  - [X] (deftest symbol-character (test-if-not-in-cl-package "character") nil)
  - [X] (deftest symbol-characterp (test-if-not-in-cl-package "characterp") nil)
  - [X] (deftest symbol-check-type (test-if-not-in-cl-package "check-type") nil)
  - [X] (deftest symbol-cis (test-if-not-in-cl-package "cis") nil)
  - [X] (deftest symbol-class (test-if-not-in-cl-package "class") nil)
  - [X] (deftest symbol-class-name (test-if-not-in-cl-package "class-name") nil)
  - [X] (deftest symbol-class-of (test-if-not-in-cl-package "class-of") nil)
  - [X] (deftest symbol-clear-input (test-if-not-in-cl-package "clear-input") nil)
  - [X] (deftest symbol-clear-output (test-if-not-in-cl-package "clear-output") nil)
  - [X] (deftest symbol-close (test-if-not-in-cl-package "close") nil)
  - [X] (deftest symbol-clrhash (test-if-not-in-cl-package "clrhash") nil)
  - [X] (deftest symbol-code-char (test-if-not-in-cl-package "code-char") nil)
  - [X] (deftest symbol-coerce (test-if-not-in-cl-package "coerce") nil)
  - [X] (deftest symbol-compilation-speed (test-if-not-in-cl-package "compilation-speed") nil)
  - [X] (deftest symbol-compile (test-if-not-in-cl-package "compile") nil)
  - [X] (deftest symbol-compile-file (test-if-not-in-cl-package "compile-file") nil)
  - [X] (deftest symbol-compile-file-pathname (test-if-not-in-cl-package "compile-file-pathname") nil)
  - [X] (deftest symbol-compiled-function (test-if-not-in-cl-package "compiled-function") nil)
  - [X] (deftest symbol-compiled-function-p (test-if-not-in-cl-package "compiled-function-p") nil)
  - [X] (deftest symbol-compiler-macro (test-if-not-in-cl-package "compiler-macro") nil)
  - [X] (deftest symbol-compiler-macro-function (test-if-not-in-cl-package "compiler-macro-function") nil)
  - [X] (deftest symbol-complement (test-if-not-in-cl-package "complement") nil)
  - [X] (deftest symbol-complex (test-if-not-in-cl-package "complex") nil)
  - [X] (deftest symbol-complexp (test-if-not-in-cl-package "complexp") nil)
  - [X] (deftest symbol-compute-applicable-methods (test-if-not-in-cl-package "compute-applicable-methods") nil)
  - [X] (deftest symbol-compute-restarts (test-if-not-in-cl-package "compute-restarts") nil)
  - [X] (deftest symbol-concatenate (test-if-not-in-cl-package "concatenate") nil)
  - [X] (deftest symbol-concatenated-stream (test-if-not-in-cl-package "concatenated-stream") nil)
  - [X] (deftest symbol-concatenated-stream-streams (test-if-not-in-cl-package "concatenated-stream-streams") nil)
  - [X] (deftest symbol-cond (test-if-not-in-cl-package "cond") nil)
  - [X] (deftest symbol-condition (test-if-not-in-cl-package "condition") nil)
  - [X] (deftest symbol-conjugate (test-if-not-in-cl-package "conjugate") nil)
  - [X] (deftest symbol-cons (test-if-not-in-cl-package "cons") nil)
  - [X] (deftest symbol-consp (test-if-not-in-cl-package "consp") nil)
  - [X] (deftest symbol-constantly (test-if-not-in-cl-package "constantly") nil)
  - [X] (deftest symbol-constantp (test-if-not-in-cl-package "constantp") nil)
  - [X] (deftest symbol-continue (test-if-not-in-cl-package "continue") nil)
  - [X] (deftest symbol-control-error (test-if-not-in-cl-package "control-error") nil)
  - [X] (deftest symbol-copy-alist (test-if-not-in-cl-package "copy-alist") nil)
  - [X] (deftest symbol-copy-list (test-if-not-in-cl-package "copy-list") nil)
  - [X] (deftest symbol-copy-pprint-dispatch (test-if-not-in-cl-package "copy-pprint-dispatch") nil)
  - [X] (deftest symbol-copy-readtable (test-if-not-in-cl-package "copy-readtable") nil)
  - [X] (deftest symbol-copy-seq (test-if-not-in-cl-package "copy-seq") nil)
  - [X] (deftest symbol-copy-structure (test-if-not-in-cl-package "copy-structure") nil)
  - [X] (deftest symbol-copy-symbol (test-if-not-in-cl-package "copy-symbol") nil)
  - [X] (deftest symbol-copy-tree (test-if-not-in-cl-package "copy-tree") nil)
  - [X] (deftest symbol-cos (test-if-not-in-cl-package "cos") nil)
  - [X] (deftest symbol-cosh (test-if-not-in-cl-package "cosh") nil)
  - [X] (deftest symbol-count (test-if-not-in-cl-package "count") nil)
  - [X] (deftest symbol-count-if (test-if-not-in-cl-package "count-if") nil)
  - [X] (deftest symbol-count-if-not (test-if-not-in-cl-package "count-if-not") nil)
  - [X] (deftest symbol-ctypecase (test-if-not-in-cl-package "ctypecase") nil)
  - [X] (deftest symbol-debug (test-if-not-in-cl-package "debug") nil)
  - [X] (deftest symbol-decf (test-if-not-in-cl-package "decf") nil)
  - [X] (deftest symbol-declaim (test-if-not-in-cl-package "declaim") nil)
  - [X] (deftest symbol-declaration (test-if-not-in-cl-package "declaration") nil)
  - [X] (deftest symbol-declare (test-if-not-in-cl-package "declare") nil)
  - [X] (deftest symbol-decode-float (test-if-not-in-cl-package "decode-float") nil)
  - [X] (deftest symbol-decode-universal-time (test-if-not-in-cl-package "decode-universal-time") nil)
  - [X] (deftest symbol-defclass (test-if-not-in-cl-package "defclass") nil)
  - [X] (deftest symbol-defconstant (test-if-not-in-cl-package "defconstant") nil)
  - [X] (deftest symbol-defgeneric (test-if-not-in-cl-package "defgeneric") nil)
  - [X] (deftest symbol-define-compiler-macro (test-if-not-in-cl-package "define-compiler-macro") nil)
  - [X] (deftest symbol-define-condition (test-if-not-in-cl-package "define-condition") nil)
  - [X] (deftest symbol-define-method-combination (test-if-not-in-cl-package "define-method-combination") nil)
  - [X] (deftest symbol-define-modify-macro (test-if-not-in-cl-package "define-modify-macro") nil)
  - [X] (deftest symbol-define-setf-expander (test-if-not-in-cl-package "define-setf-expander") nil)
  - [X] (deftest symbol-define-symbol-macro (test-if-not-in-cl-package "define-symbol-macro") nil)
  - [X] (deftest symbol-defmacro (test-if-not-in-cl-package "defmacro") nil)
  - [X] (deftest symbol-defmethod (test-if-not-in-cl-package "defmethod") nil)
  - [X] (deftest symbol-defpackage (test-if-not-in-cl-package "defpackage") nil)
  - [X] (deftest symbol-defparameter (test-if-not-in-cl-package "defparameter") nil)
  - [X] (deftest symbol-defsetf (test-if-not-in-cl-package "defsetf") nil)
  - [X] (deftest symbol-defstruct (test-if-not-in-cl-package "defstruct") nil)
  - [X] (deftest symbol-deftype (test-if-not-in-cl-package "deftype") nil)
  - [X] (deftest symbol-defun (test-if-not-in-cl-package "defun") nil)
  - [X] (deftest symbol-defvar (test-if-not-in-cl-package "defvar") nil)
  - [X] (deftest symbol-delete (test-if-not-in-cl-package "delete") nil)
  - [X] (deftest symbol-delete-duplicates (test-if-not-in-cl-package "delete-duplicates") nil)
  - [X] (deftest symbol-delete-file (test-if-not-in-cl-package "delete-file") nil)
  - [X] (deftest symbol-delete-if (test-if-not-in-cl-package "delete-if") nil)
  - [X] (deftest symbol-delete-if-not (test-if-not-in-cl-package "delete-if-not") nil)
  - [X] (deftest symbol-delete-package (test-if-not-in-cl-package "delete-package") nil)
  - [X] (deftest symbol-denominator (test-if-not-in-cl-package "denominator") nil)
  - [X] (deftest symbol-deposit-field (test-if-not-in-cl-package "deposit-field") nil)
  - [X] (deftest symbol-describe (test-if-not-in-cl-package "describe") nil)
  - [X] (deftest symbol-describe-object (test-if-not-in-cl-package "describe-object") nil)
  - [X] (deftest symbol-destructuring-bind (test-if-not-in-cl-package "destructuring-bind") nil)
  - [X] (deftest symbol-digit-char (test-if-not-in-cl-package "digit-char") nil)
  - [X] (deftest symbol-digit-char-p (test-if-not-in-cl-package "digit-char-p") nil)
  - [X] (deftest symbol-directory (test-if-not-in-cl-package "directory") nil)
  - [X] (deftest symbol-directory-namestring (test-if-not-in-cl-package "directory-namestring") nil)
  - [X] (deftest symbol-disassemble (test-if-not-in-cl-package "disassemble") nil)
  - [X] (deftest symbol-division-by-zero (test-if-not-in-cl-package "division-by-zero") nil)
  - [X] (deftest symbol-do (test-if-not-in-cl-package "do") nil)
  - [X] (deftest symbol-do* (test-if-not-in-cl-package "do*") nil)
  - [X] (deftest symbol-do-all-symbols (test-if-not-in-cl-package "do-all-symbols") nil)
  - [X] (deftest symbol-do-external-symbols (test-if-not-in-cl-package "do-external-symbols") nil)
  - [X] (deftest symbol-do-symbols (test-if-not-in-cl-package "do-symbols") nil)
  - [X] (deftest symbol-documentation (test-if-not-in-cl-package "documentation") nil)
  - [X] (deftest symbol-dolist (test-if-not-in-cl-package "dolist") nil)
  - [X] (deftest symbol-dotimes (test-if-not-in-cl-package "dotimes") nil)
  - [X] (deftest symbol-double-float (test-if-not-in-cl-package "double-float") nil)
  - [X] (deftest symbol-double-float-epsilon (test-if-not-in-cl-package "double-float-epsilon") nil)
  - [X] (deftest symbol-double-float-negative-epsilon (test-if-not-in-cl-package "double-float-negative-epsilon") nil)
  - [X] (deftest symbol-dpb (test-if-not-in-cl-package "dpb") nil)
  - [X] (deftest symbol-dribble (test-if-not-in-cl-package "dribble") nil)
  - [X] (deftest symbol-dynamic-extent (test-if-not-in-cl-package "dynamic-extent") nil)
  - [X] (deftest symbol-ecase (test-if-not-in-cl-package "ecase") nil)
  - [X] (deftest symbol-echo-stream (test-if-not-in-cl-package "echo-stream") nil)
  - [X] (deftest symbol-echo-stream-input-stream (test-if-not-in-cl-package "echo-stream-input-stream") nil)
  - [X] (deftest symbol-echo-stream-output-stream (test-if-not-in-cl-package "echo-stream-output-stream") nil)
  - [X] (deftest symbol-ed (test-if-not-in-cl-package "ed") nil)
  - [X] (deftest symbol-eighth (test-if-not-in-cl-package "eighth") nil)
  - [X] (deftest symbol-elt (test-if-not-in-cl-package "elt") nil)
  - [X] (deftest symbol-encode-universal-time (test-if-not-in-cl-package "encode-universal-time") nil)
  - [X] (deftest symbol-end-of-file (test-if-not-in-cl-package "end-of-file") nil)
  - [X] (deftest symbol-endp (test-if-not-in-cl-package "endp") nil)
  - [X] (deftest symbol-enough-namestring (test-if-not-in-cl-package "enough-namestring") nil)
  - [X] (deftest symbol-ensure-directories-exist (test-if-not-in-cl-package "ensure-directories-exist") nil)
  - [X] (deftest symbol-ensure-generic-function (test-if-not-in-cl-package "ensure-generic-function") nil)
  - [X] (deftest symbol-eq (test-if-not-in-cl-package "eq") nil)
  - [X] (deftest symbol-eql (test-if-not-in-cl-package "eql") nil)
  - [X] (deftest symbol-equal (test-if-not-in-cl-package "equal") nil)
  - [X] (deftest symbol-equalp (test-if-not-in-cl-package "equalp") nil)
  - [X] (deftest symbol-error (test-if-not-in-cl-package "error") nil)
  - [X] (deftest symbol-etypecase (test-if-not-in-cl-package "etypecase") nil)
  - [X] (deftest symbol-eval (test-if-not-in-cl-package "eval") nil)
  - [X] (deftest symbol-eval-when (test-if-not-in-cl-package "eval-when") nil)
  - [X] (deftest symbol-evenp (test-if-not-in-cl-package "evenp") nil)
  - [X] (deftest symbol-every (test-if-not-in-cl-package "every") nil)
  - [X] (deftest symbol-exp (test-if-not-in-cl-package "exp") nil)
  - [X] (deftest symbol-export (test-if-not-in-cl-package "export") nil)
  - [X] (deftest symbol-expt (test-if-not-in-cl-package "expt") nil)
  - [X] (deftest symbol-extended-char (test-if-not-in-cl-package "extended-char") nil)
  - [X] (deftest symbol-fboundp (test-if-not-in-cl-package "fboundp") nil)
  - [X] (deftest symbol-fceiling (test-if-not-in-cl-package "fceiling") nil)
  - [X] (deftest symbol-fdefinition (test-if-not-in-cl-package "fdefinition") nil)
  - [X] (deftest symbol-ffloor (test-if-not-in-cl-package "ffloor") nil)
  - [X] (deftest symbol-fifth (test-if-not-in-cl-package "fifth") nil)
  - [X] (deftest symbol-file-author (test-if-not-in-cl-package "file-author") nil)
  - [X] (deftest symbol-file-error (test-if-not-in-cl-package "file-error") nil)
  - [X] (deftest symbol-file-error-pathname (test-if-not-in-cl-package "file-error-pathname") nil)
  - [X] (deftest symbol-file-length (test-if-not-in-cl-package "file-length") nil)
  - [X] (deftest symbol-file-namestring (test-if-not-in-cl-package "file-namestring") nil)
  - [X] (deftest symbol-file-position (test-if-not-in-cl-package "file-position") nil)
  - [X] (deftest symbol-file-stream (test-if-not-in-cl-package "file-stream") nil)
  - [X] (deftest symbol-file-string-length (test-if-not-in-cl-package "file-string-length") nil)
  - [X] (deftest symbol-file-write-date (test-if-not-in-cl-package "file-write-date") nil)
  - [X] (deftest symbol-fill (test-if-not-in-cl-package "fill") nil)
  - [X] (deftest symbol-fill-pointer (test-if-not-in-cl-package "fill-pointer") nil)
  - [X] (deftest symbol-find (test-if-not-in-cl-package "find") nil)
  - [X] (deftest symbol-find-all-symbols (test-if-not-in-cl-package "find-all-symbols") nil)
  - [X] (deftest symbol-find-class (test-if-not-in-cl-package "find-class") nil)
  - [X] (deftest symbol-find-if (test-if-not-in-cl-package "find-if") nil)
  - [X] (deftest symbol-find-if-not (test-if-not-in-cl-package "find-if-not") nil)
  - [X] (deftest symbol-find-method (test-if-not-in-cl-package "find-method") nil)
  - [X] (deftest symbol-find-package (test-if-not-in-cl-package "find-package") nil)
  - [X] (deftest symbol-find-restart (test-if-not-in-cl-package "find-restart") nil)
  - [X] (deftest symbol-find-symbol (test-if-not-in-cl-package "find-symbol") nil)
  - [X] (deftest symbol-finish-output (test-if-not-in-cl-package "finish-output") nil)
  - [X] (deftest symbol-first (test-if-not-in-cl-package "first") nil)
  - [X] (deftest symbol-fixnum (test-if-not-in-cl-package "fixnum") nil)
  - [X] (deftest symbol-flet (test-if-not-in-cl-package "flet") nil)
  - [X] (deftest symbol-float (test-if-not-in-cl-package "float") nil)
  - [X] (deftest symbol-float-digits (test-if-not-in-cl-package "float-digits") nil)
  - [X] (deftest symbol-float-precision (test-if-not-in-cl-package "float-precision") nil)
  - [X] (deftest symbol-float-radix (test-if-not-in-cl-package "float-radix") nil)
  - [X] (deftest symbol-float-sign (test-if-not-in-cl-package "float-sign") nil)
  - [X] (deftest symbol-floating-point-inexact (test-if-not-in-cl-package "floating-point-inexact") nil)
  - [X] (deftest symbol-floating-point-invalid-operation (test-if-not-in-cl-package "floating-point-invalid-operation") nil)
  - [X] (deftest symbol-floating-point-overflow (test-if-not-in-cl-package "floating-point-overflow") nil)
  - [X] (deftest symbol-floating-point-underflow (test-if-not-in-cl-package "floating-point-underflow") nil)
  - [X] (deftest symbol-floatp (test-if-not-in-cl-package "floatp") nil)
  - [X] (deftest symbol-floor (test-if-not-in-cl-package "floor") nil)
  - [X] (deftest symbol-fmakunbound (test-if-not-in-cl-package "fmakunbound") nil)
  - [X] (deftest symbol-force-output (test-if-not-in-cl-package "force-output") nil)
  - [X] (deftest symbol-format (test-if-not-in-cl-package "format") nil)
  - [X] (deftest symbol-formatter (test-if-not-in-cl-package "formatter") nil)
  - [X] (deftest symbol-fourth (test-if-not-in-cl-package "fourth") nil)
  - [X] (deftest symbol-fresh-line (test-if-not-in-cl-package "fresh-line") nil)
  - [X] (deftest symbol-fround (test-if-not-in-cl-package "fround") nil)
  - [X] (deftest symbol-ftruncate (test-if-not-in-cl-package "ftruncate") nil)
  - [X] (deftest symbol-ftype (test-if-not-in-cl-package "ftype") nil)
  - [X] (deftest symbol-funcall (test-if-not-in-cl-package "funcall") nil)
  - [X] (deftest symbol-function-test (test-if-not-in-cl-package "function") nil)
  - [X] (deftest symbol-function-keywords (test-if-not-in-cl-package "function-keywords") nil)
  - [X] (deftest symbol-function-lambda-expression (test-if-not-in-cl-package "function-lambda-expression") nil)
  - [X] (deftest symbol-functionp (test-if-not-in-cl-package "functionp") nil)
  - [X] (deftest symbol-gcd (test-if-not-in-cl-package "gcd") nil)
  - [X] (deftest symbol-generic-function (test-if-not-in-cl-package "generic-function") nil)
  - [X] (deftest symbol-gensym (test-if-not-in-cl-package "gensym") nil)
  - [X] (deftest symbol-gentemp (test-if-not-in-cl-package "gentemp") nil)
  - [X] (deftest symbol-get (test-if-not-in-cl-package "get") nil)
  - [X] (deftest symbol-get-decoded-time (test-if-not-in-cl-package "get-decoded-time") nil)
  - [X] (deftest symbol-get-dispatch-macro-character (test-if-not-in-cl-package "get-dispatch-macro-character") nil)
  - [X] (deftest symbol-get-internal-real-time (test-if-not-in-cl-package "get-internal-real-time") nil)
  - [X] (deftest symbol-get-internal-run-time (test-if-not-in-cl-package "get-internal-run-time") nil)
  - [X] (deftest symbol-get-macro-character (test-if-not-in-cl-package "get-macro-character") nil)
  - [X] (deftest symbol-get-output-stream-string (test-if-not-in-cl-package "get-output-stream-string") nil)
  - [X] (deftest symbol-get-properties (test-if-not-in-cl-package "get-properties") nil)
  - [X] (deftest symbol-get-setf-expansion (test-if-not-in-cl-package "get-setf-expansion") nil)
  - [X] (deftest symbol-get-universal-time (test-if-not-in-cl-package "get-universal-time") nil)
  - [X] (deftest symbol-getf (test-if-not-in-cl-package "getf") nil)
  - [X] (deftest symbol-gethash (test-if-not-in-cl-package "gethash") nil)
  - [X] (deftest symbol-go (test-if-not-in-cl-package "go") nil)
  - [X] (deftest symbol-graphic-char-p (test-if-not-in-cl-package "graphic-char-p") nil)
  - [X] (deftest symbol-handler-bind (test-if-not-in-cl-package "handler-bind") nil)
  - [X] (deftest symbol-handler-case (test-if-not-in-cl-package "handler-case") nil)
  - [X] (deftest symbol-hash-table (test-if-not-in-cl-package "hash-table") nil)
  - [X] (deftest symbol-hash-table-count (test-if-not-in-cl-package "hash-table-count") nil)
  - [X] (deftest symbol-hash-table-p (test-if-not-in-cl-package "hash-table-p") nil)
  - [X] (deftest symbol-hash-table-rehash-size (test-if-not-in-cl-package "hash-table-rehash-size") nil)
  - [X] (deftest symbol-hash-table-rehash-threshold (test-if-not-in-cl-package "hash-table-rehash-threshold") nil)
  - [X] (deftest symbol-hash-table-size (test-if-not-in-cl-package "hash-table-size") nil)
  - [X] (deftest symbol-hash-table-test (test-if-not-in-cl-package "hash-table-test") nil)
  - [X] (deftest symbol-host-namestring (test-if-not-in-cl-package "host-namestring") nil)
  - [X] (deftest symbol-identity (test-if-not-in-cl-package "identity") nil)
  - [X] (deftest symbol-if (test-if-not-in-cl-package "if") nil)
  - [X] (deftest symbol-ignorable (test-if-not-in-cl-package "ignorable") nil)
  - [X] (deftest symbol-ignore (test-if-not-in-cl-package "ignore") nil)
  - [X] (deftest symbol-ignore-errors (test-if-not-in-cl-package "ignore-errors") nil)
  - [X] (deftest symbol-imagpart (test-if-not-in-cl-package "imagpart") nil)
  - [X] (deftest symbol-import (test-if-not-in-cl-package "import") nil)
  - [X] (deftest symbol-in-package (test-if-not-in-cl-package "in-package") nil)
  - [X] (deftest symbol-incf (test-if-not-in-cl-package "incf") nil)
  - [X] (deftest symbol-initialize-instance (test-if-not-in-cl-package "initialize-instance") nil)
  - [X] (deftest symbol-inline (test-if-not-in-cl-package "inline") nil)
  - [X] (deftest symbol-input-stream-p (test-if-not-in-cl-package "input-stream-p") nil)
  - [X] (deftest symbol-inspect (test-if-not-in-cl-package "inspect") nil)
  - [X] (deftest symbol-integer (test-if-not-in-cl-package "integer") nil)
  - [X] (deftest symbol-integer-decode-float (test-if-not-in-cl-package "integer-decode-float") nil)
  - [X] (deftest symbol-integer-length (test-if-not-in-cl-package "integer-length") nil)
  - [X] (deftest symbol-integerp (test-if-not-in-cl-package "integerp") nil)
  - [X] (deftest symbol-interactive-stream-p (test-if-not-in-cl-package "interactive-stream-p") nil)
  - [X] (deftest symbol-intern (test-if-not-in-cl-package "intern") nil)
  - [X] (deftest symbol-internal-time-units-per-second (test-if-not-in-cl-package "internal-time-units-per-second") nil)
  - [X] (deftest symbol-intersection (test-if-not-in-cl-package "intersection") nil)
  - [X] (deftest symbol-invalid-method-error (test-if-not-in-cl-package "invalid-method-error") nil)
  - [X] (deftest symbol-invoke-debugger (test-if-not-in-cl-package "invoke-debugger") nil)
  - [X] (deftest symbol-invoke-restart (test-if-not-in-cl-package "invoke-restart") nil)
  - [X] (deftest symbol-invoke-restart-interactively (test-if-not-in-cl-package "invoke-restart-interactively") nil)
  - [X] (deftest symbol-isqrt (test-if-not-in-cl-package "isqrt") nil)
  - [X] (deftest symbol-keyword (test-if-not-in-cl-package "keyword") nil)
  - [X] (deftest symbol-keywordp (test-if-not-in-cl-package "keywordp") nil)
  - [X] (deftest symbol-labels (test-if-not-in-cl-package "labels") nil)
  - [X] (deftest symbol-lambda (test-if-not-in-cl-package "lambda") nil)
  - [X] (deftest symbol-lambda-list-keywords (test-if-not-in-cl-package "lambda-list-keywords") nil)
  - [X] (deftest symbol-lambda-parameters-limit (test-if-not-in-cl-package "lambda-parameters-limit") nil)
  - [X] (deftest symbol-last (test-if-not-in-cl-package "last") nil)
  - [X] (deftest symbol-lcm (test-if-not-in-cl-package "lcm") nil)
  - [X] (deftest symbol-ldb (test-if-not-in-cl-package "ldb") nil)
  - [X] (deftest symbol-ldb-test (test-if-not-in-cl-package "ldb-test") nil)
  - [X] (deftest symbol-ldiff (test-if-not-in-cl-package "ldiff") nil)
  - [X] (deftest symbol-least-negative-double-float (test-if-not-in-cl-package "least-negative-double-float") nil)
  - [X] (deftest symbol-least-negative-long-float (test-if-not-in-cl-package "least-negative-long-float") nil)
  - [X] (deftest symbol-least-negative-normalized-double-float (test-if-not-in-cl-package "least-negative-normalized-double-float") nil)
  - [X] (deftest symbol-least-negative-normalized-long-float (test-if-not-in-cl-package "least-negative-normalized-long-float") nil)
  - [X] (deftest symbol-least-negative-normalized-short-float (test-if-not-in-cl-package "least-negative-normalized-short-float") nil)
  - [X] (deftest symbol-least-negative-normalized-single-float (test-if-not-in-cl-package "least-negative-normalized-single-float") nil)
  - [X] (deftest symbol-least-negative-short-float (test-if-not-in-cl-package "least-negative-short-float") nil)
  - [X] (deftest symbol-least-negative-single-float (test-if-not-in-cl-package "least-negative-single-float") nil)
  - [X] (deftest symbol-least-positive-double-float (test-if-not-in-cl-package "least-positive-double-float") nil)
  - [X] (deftest symbol-least-positive-long-float (test-if-not-in-cl-package "least-positive-long-float") nil)
  - [X] (deftest symbol-least-positive-normalized-double-float (test-if-not-in-cl-package "least-positive-normalized-double-float") nil)
  - [X] (deftest symbol-least-positive-normalized-long-float (test-if-not-in-cl-package "least-positive-normalized-long-float") nil)
  - [X] (deftest symbol-least-positive-normalized-short-float (test-if-not-in-cl-package "least-positive-normalized-short-float") nil)
  - [X] (deftest symbol-least-positive-normalized-single-float (test-if-not-in-cl-package "least-positive-normalized-single-float") nil)
  - [X] (deftest symbol-least-positive-short-float (test-if-not-in-cl-package "least-positive-short-float") nil)
  - [X] (deftest symbol-least-positive-single-float (test-if-not-in-cl-package "least-positive-single-float") nil)
  - [X] (deftest symbol-length (test-if-not-in-cl-package "length") nil)
  - [X] (deftest symbol-let (test-if-not-in-cl-package "let") nil)
  - [X] (deftest symbol-let* (test-if-not-in-cl-package "let*") nil)
  - [X] (deftest symbol-lisp-implementation-type (test-if-not-in-cl-package "lisp-implementation-type") nil)
  - [X] (deftest symbol-lisp-implementation-version (test-if-not-in-cl-package "lisp-implementation-version") nil)
  - [X] (deftest symbol-list (test-if-not-in-cl-package "list") nil)
  - [X] (deftest symbol-list* (test-if-not-in-cl-package "list*") nil)
  - [X] (deftest symbol-list-all-packages (test-if-not-in-cl-package "list-all-packages") nil)
  - [X] (deftest symbol-list-length (test-if-not-in-cl-package "list-length") nil)
  - [X] (deftest symbol-listen (test-if-not-in-cl-package "listen") nil)
  - [X] (deftest symbol-listp (test-if-not-in-cl-package "listp") nil)
  - [X] (deftest symbol-load (test-if-not-in-cl-package "load") nil)
  - [X] (deftest symbol-load-logical-pathname-translations (test-if-not-in-cl-package "load-logical-pathname-translations") nil)
  - [X] (deftest symbol-load-time-value (test-if-not-in-cl-package "load-time-value") nil)
  - [X] (deftest symbol-locally (test-if-not-in-cl-package "locally") nil)
  - [X] (deftest symbol-log (test-if-not-in-cl-package "log") nil)
  - [X] (deftest symbol-logand (test-if-not-in-cl-package "logand") nil)
  - [X] (deftest symbol-logandc1 (test-if-not-in-cl-package "logandc1") nil)
  - [X] (deftest symbol-logandc2 (test-if-not-in-cl-package "logandc2") nil)
  - [X] (deftest symbol-logbitp (test-if-not-in-cl-package "logbitp") nil)
  - [X] (deftest symbol-logcount (test-if-not-in-cl-package "logcount") nil)
  - [X] (deftest symbol-logeqv (test-if-not-in-cl-package "logeqv") nil)
  - [X] (deftest symbol-logical-pathname (test-if-not-in-cl-package "logical-pathname") nil)
  - [X] (deftest symbol-logical-pathname-translations (test-if-not-in-cl-package "logical-pathname-translations") nil)
  - [X] (deftest symbol-logior (test-if-not-in-cl-package "logior") nil)
  - [X] (deftest symbol-lognand (test-if-not-in-cl-package "lognand") nil)
  - [X] (deftest symbol-lognor (test-if-not-in-cl-package "lognor") nil)
  - [X] (deftest symbol-lognot (test-if-not-in-cl-package "lognot") nil)
  - [X] (deftest symbol-logorc1 (test-if-not-in-cl-package "logorc1") nil)
  - [X] (deftest symbol-logorc2 (test-if-not-in-cl-package "logorc2") nil)
  - [X] (deftest symbol-logtest (test-if-not-in-cl-package "logtest") nil)
  - [X] (deftest symbol-logxor (test-if-not-in-cl-package "logxor") nil)
  - [X] (deftest symbol-long-float (test-if-not-in-cl-package "long-float") nil)
  - [X] (deftest symbol-long-float-epsilon (test-if-not-in-cl-package "long-float-epsilon") nil)
  - [X] (deftest symbol-long-float-negative-epsilon (test-if-not-in-cl-package "long-float-negative-epsilon") nil)
  - [X] (deftest symbol-long-site-name (test-if-not-in-cl-package "long-site-name") nil)
  - [X] (deftest symbol-loop (test-if-not-in-cl-package "loop") nil)
  - [X] (deftest symbol-loop-finish (test-if-not-in-cl-package "loop-finish") nil)
  - [X] (deftest symbol-lower-case-p (test-if-not-in-cl-package "lower-case-p") nil)
  - [X] (deftest symbol-machine-instance (test-if-not-in-cl-package "machine-instance") nil)
  - [X] (deftest symbol-machine-type (test-if-not-in-cl-package "machine-type") nil)
  - [X] (deftest symbol-machine-version (test-if-not-in-cl-package "machine-version") nil)
  - [X] (deftest symbol-macro-function (test-if-not-in-cl-package "macro-function") nil)
  - [X] (deftest symbol-macroexpand (test-if-not-in-cl-package "macroexpand") nil)
  - [X] (deftest symbol-macroexpand-1 (test-if-not-in-cl-package "macroexpand-1") nil)
  - [X] (deftest symbol-macrolet (test-if-not-in-cl-package "macrolet") nil)
  - [X] (deftest symbol-make-array (test-if-not-in-cl-package "make-array") nil)
  - [X] (deftest symbol-make-broadcast-stream (test-if-not-in-cl-package "make-broadcast-stream") nil)
  - [X] (deftest symbol-make-concatenated-stream (test-if-not-in-cl-package "make-concatenated-stream") nil)
  - [X] (deftest symbol-make-condition (test-if-not-in-cl-package "make-condition") nil)
  - [X] (deftest symbol-make-dispatch-macro-character (test-if-not-in-cl-package "make-dispatch-macro-character") nil)
  - [X] (deftest symbol-make-echo-stream (test-if-not-in-cl-package "make-echo-stream") nil)
  - [X] (deftest symbol-make-hash-table (test-if-not-in-cl-package "make-hash-table") nil)
  - [X] (deftest symbol-make-instance (test-if-not-in-cl-package "make-instance") nil)
  - [X] (deftest symbol-make-instances-obsolete (test-if-not-in-cl-package "make-instances-obsolete") nil)
  - [X] (deftest symbol-make-list (test-if-not-in-cl-package "make-list") nil)
  - [X] (deftest symbol-make-load-form (test-if-not-in-cl-package "make-load-form") nil)
  - [X] (deftest symbol-make-load-form-saving-slots (test-if-not-in-cl-package "make-load-form-saving-slots") nil)
  - [X] (deftest symbol-make-method (test-if-not-in-cl-package "make-method") nil)
  - [X] (deftest symbol-make-package (test-if-not-in-cl-package "make-package") nil)
  - [X] (deftest symbol-make-pathname (test-if-not-in-cl-package "make-pathname") nil)
  - [X] (deftest symbol-make-random-state (test-if-not-in-cl-package "make-random-state") nil)
  - [X] (deftest symbol-make-sequence (test-if-not-in-cl-package "make-sequence") nil)
  - [X] (deftest symbol-make-string (test-if-not-in-cl-package "make-string") nil)
  - [X] (deftest symbol-make-string-input-stream (test-if-not-in-cl-package "make-string-input-stream") nil)
  - [X] (deftest symbol-make-string-output-stream (test-if-not-in-cl-package "make-string-output-stream") nil)
  - [X] (deftest symbol-make-symbol (test-if-not-in-cl-package "make-symbol") nil)
  - [X] (deftest symbol-make-synonym-stream (test-if-not-in-cl-package "make-synonym-stream") nil)
  - [X] (deftest symbol-make-two-way-stream (test-if-not-in-cl-package "make-two-way-stream") nil)
  - [X] (deftest symbol-makunbound (test-if-not-in-cl-package "makunbound") nil)
  - [X] (deftest symbol-map (test-if-not-in-cl-package "map") nil)
  - [X] (deftest symbol-map-into (test-if-not-in-cl-package "map-into") nil)
  - [X] (deftest symbol-mapc (test-if-not-in-cl-package "mapc") nil)
  - [X] (deftest symbol-mapcan (test-if-not-in-cl-package "mapcan") nil)
  - [X] (deftest symbol-mapcar (test-if-not-in-cl-package "mapcar") nil)
  - [X] (deftest symbol-mapcon (test-if-not-in-cl-package "mapcon") nil)
  - [X] (deftest symbol-maphash (test-if-not-in-cl-package "maphash") nil)
  - [X] (deftest symbol-mapl (test-if-not-in-cl-package "mapl") nil)
  - [X] (deftest symbol-maplist (test-if-not-in-cl-package "maplist") nil)
  - [X] (deftest symbol-mask-field (test-if-not-in-cl-package "mask-field") nil)
  - [X] (deftest symbol-max (test-if-not-in-cl-package "max") nil)
  - [X] (deftest symbol-member (test-if-not-in-cl-package "member") nil)
  - [X] (deftest symbol-member-if (test-if-not-in-cl-package "member-if") nil)
  - [X] (deftest symbol-member-if-not (test-if-not-in-cl-package "member-if-not") nil)
  - [X] (deftest symbol-merge (test-if-not-in-cl-package "merge") nil)
  - [X] (deftest symbol-merge-pathnames (test-if-not-in-cl-package "merge-pathnames") nil)
  - [X] (deftest symbol-method (test-if-not-in-cl-package "method") nil)
  - [X] (deftest symbol-method-combination (test-if-not-in-cl-package "method-combination") nil)
  - [X] (deftest symbol-method-combination-error (test-if-not-in-cl-package "method-combination-error") nil)
  - [X] (deftest symbol-method-qualifiers (test-if-not-in-cl-package "method-qualifiers") nil)
  - [X] (deftest symbol-min (test-if-not-in-cl-package "min") nil)
  - [X] (deftest symbol-minusp (test-if-not-in-cl-package "minusp") nil)
  - [X] (deftest symbol-mismatch (test-if-not-in-cl-package "mismatch") nil)
  - [X] (deftest symbol-mod (test-if-not-in-cl-package "mod") nil)
  - [X] (deftest symbol-most-negative-double-float (test-if-not-in-cl-package "most-negative-double-float") nil)
  - [X] (deftest symbol-most-negative-fixnum (test-if-not-in-cl-package "most-negative-fixnum") nil)
  - [X] (deftest symbol-most-negative-long-float (test-if-not-in-cl-package "most-negative-long-float") nil)
  - [X] (deftest symbol-most-negative-short-float (test-if-not-in-cl-package "most-negative-short-float") nil)
  - [X] (deftest symbol-most-negative-single-float (test-if-not-in-cl-package "most-negative-single-float") nil)
  - [X] (deftest symbol-most-positive-double-float (test-if-not-in-cl-package "most-positive-double-float") nil)
  - [X] (deftest symbol-most-positive-fixnum (test-if-not-in-cl-package "most-positive-fixnum") nil)
  - [X] (deftest symbol-most-positive-long-float (test-if-not-in-cl-package "most-positive-long-float") nil)
  - [X] (deftest symbol-most-positive-short-float (test-if-not-in-cl-package "most-positive-short-float") nil)
  - [X] (deftest symbol-most-positive-single-float (test-if-not-in-cl-package "most-positive-single-float") nil)
  - [X] (deftest symbol-muffle-warning (test-if-not-in-cl-package "muffle-warning") nil)
  - [X] (deftest symbol-multiple-value-bind (test-if-not-in-cl-package "multiple-value-bind") nil)
  - [X] (deftest symbol-multiple-value-call (test-if-not-in-cl-package "multiple-value-call") nil)
  - [X] (deftest symbol-multiple-value-list (test-if-not-in-cl-package "multiple-value-list") nil)
  - [X] (deftest symbol-multiple-value-prog1 (test-if-not-in-cl-package "multiple-value-prog1") nil)
  - [X] (deftest symbol-multiple-value-setq (test-if-not-in-cl-package "multiple-value-setq") nil)
  - [X] (deftest symbol-multiple-values-limit (test-if-not-in-cl-package "multiple-values-limit") nil)
  - [X] (deftest symbol-name-char (test-if-not-in-cl-package "name-char") nil)
  - [X] (deftest symbol-namestring (test-if-not-in-cl-package "namestring") nil)
  - [X] (deftest symbol-nbutlast (test-if-not-in-cl-package "nbutlast") nil)
  - [X] (deftest symbol-nconc (test-if-not-in-cl-package "nconc") nil)
  - [X] (deftest symbol-next-method-p (test-if-not-in-cl-package "next-method-p") nil)
  - [X] (deftest symbol-nil (test-if-not-in-cl-package "nil") nil)
  - [X] (deftest symbol-nintersection (test-if-not-in-cl-package "nintersection") nil)
  - [X] (deftest symbol-ninth (test-if-not-in-cl-package "ninth") nil)
  - [X] (deftest symbol-no-applicable-method (test-if-not-in-cl-package "no-applicable-method") nil)
  - [X] (deftest symbol-no-next-method (test-if-not-in-cl-package "no-next-method") nil)
  - [X] (deftest symbol-not (test-if-not-in-cl-package "not") nil)
  - [X] (deftest symbol-notany (test-if-not-in-cl-package "notany") nil)
  - [X] (deftest symbol-notevery (test-if-not-in-cl-package "notevery") nil)
  - [X] (deftest symbol-notinline (test-if-not-in-cl-package "notinline") nil)
  - [X] (deftest symbol-nreconc (test-if-not-in-cl-package "nreconc") nil)
  - [X] (deftest symbol-nreverse (test-if-not-in-cl-package "nreverse") nil)
  - [X] (deftest symbol-nset-difference (test-if-not-in-cl-package "nset-difference") nil)
  - [X] (deftest symbol-nset-exclusive-or (test-if-not-in-cl-package "nset-exclusive-or") nil)
  - [X] (deftest symbol-nstring-capitalize (test-if-not-in-cl-package "nstring-capitalize") nil)
  - [X] (deftest symbol-nstring-downcase (test-if-not-in-cl-package "nstring-downcase") nil)
  - [X] (deftest symbol-nstring-upcase (test-if-not-in-cl-package "nstring-upcase") nil)
  - [X] (deftest symbol-nsublis (test-if-not-in-cl-package "nsublis") nil)
  - [X] (deftest symbol-nsubst (test-if-not-in-cl-package "nsubst") nil)
  - [X] (deftest symbol-nsubst-if (test-if-not-in-cl-package "nsubst-if") nil)
  - [X] (deftest symbol-nsubst-if-not (test-if-not-in-cl-package "nsubst-if-not") nil)
  - [X] (deftest symbol-nsubstitute (test-if-not-in-cl-package "nsubstitute") nil)
  - [X] (deftest symbol-nsubstitute-if (test-if-not-in-cl-package "nsubstitute-if") nil)
  - [X] (deftest symbol-nsubstitute-if-not (test-if-not-in-cl-package "nsubstitute-if-not") nil)
  - [X] (deftest symbol-nth (test-if-not-in-cl-package "nth") nil)
  - [X] (deftest symbol-nth-value (test-if-not-in-cl-package "nth-value") nil)
  - [X] (deftest symbol-nthcdr (test-if-not-in-cl-package "nthcdr") nil)
  - [X] (deftest symbol-null (test-if-not-in-cl-package "null") nil)
  - [X] (deftest symbol-number (test-if-not-in-cl-package "number") nil)
  - [X] (deftest symbol-numberp (test-if-not-in-cl-package "numberp") nil)
  - [X] (deftest symbol-numerator (test-if-not-in-cl-package "numerator") nil)
  - [X] (deftest symbol-nunion (test-if-not-in-cl-package "nunion") nil)
  - [X] (deftest symbol-oddp (test-if-not-in-cl-package "oddp") nil)
  - [X] (deftest symbol-open (test-if-not-in-cl-package "open") nil)
  - [X] (deftest symbol-open-stream-p (test-if-not-in-cl-package "open-stream-p") nil)
  - [X] (deftest symbol-optimize (test-if-not-in-cl-package "optimize") nil)
  - [X] (deftest symbol-or (test-if-not-in-cl-package "or") nil)
  - [X] (deftest symbol-otherwise (test-if-not-in-cl-package "otherwise") nil)
  - [X] (deftest symbol-output-stream-p (test-if-not-in-cl-package "output-stream-p") nil)
  - [X] (deftest symbol-package (test-if-not-in-cl-package "package") nil)
  - [X] (deftest symbol-package-error (test-if-not-in-cl-package "package-error") nil)
  - [X] (deftest symbol-package-error-package (test-if-not-in-cl-package "package-error-package") nil)
  - [X] (deftest symbol-package-name (test-if-not-in-cl-package "package-name") nil)
  - [X] (deftest symbol-package-nicknames (test-if-not-in-cl-package "package-nicknames") nil)
  - [X] (deftest symbol-package-shadowing-symbols (test-if-not-in-cl-package "package-shadowing-symbols") nil)
  - [X] (deftest symbol-package-use-list (test-if-not-in-cl-package "package-use-list") nil)
  - [X] (deftest symbol-package-used-by-list (test-if-not-in-cl-package "package-used-by-list") nil)
  - [X] (deftest symbol-packagep (test-if-not-in-cl-package "packagep") nil)
  - [X] (deftest symbol-pairlis (test-if-not-in-cl-package "pairlis") nil)
  - [X] (deftest symbol-parse-error (test-if-not-in-cl-package "parse-error") nil)
  - [X] (deftest symbol-parse-integer (test-if-not-in-cl-package "parse-integer") nil)
  - [X] (deftest symbol-parse-namestring (test-if-not-in-cl-package "parse-namestring") nil)
  - [X] (deftest symbol-pathname (test-if-not-in-cl-package "pathname") nil)
  - [X] (deftest symbol-pathname-device (test-if-not-in-cl-package "pathname-device") nil)
  - [X] (deftest symbol-pathname-directory (test-if-not-in-cl-package "pathname-directory") nil)
  - [X] (deftest symbol-pathname-host (test-if-not-in-cl-package "pathname-host") nil)
  - [X] (deftest symbol-pathname-match-p (test-if-not-in-cl-package "pathname-match-p") nil)
  - [X] (deftest symbol-pathname-name (test-if-not-in-cl-package "pathname-name") nil)
  - [X] (deftest symbol-pathname-type (test-if-not-in-cl-package "pathname-type") nil)
  - [X] (deftest symbol-pathname-version (test-if-not-in-cl-package "pathname-version") nil)
  - [X] (deftest symbol-pathnamep (test-if-not-in-cl-package "pathnamep") nil)
  - [X] (deftest symbol-peek-char (test-if-not-in-cl-package "peek-char") nil)
  - [X] (deftest symbol-phase (test-if-not-in-cl-package "phase") nil)
  - [X] (deftest symbol-pi (test-if-not-in-cl-package "pi") nil)
  - [X] (deftest symbol-plusp (test-if-not-in-cl-package "plusp") nil)
  - [X] (deftest symbol-pop (test-if-not-in-cl-package "pop") nil)
  - [X] (deftest symbol-position (test-if-not-in-cl-package "position") nil)
  - [X] (deftest symbol-position-if (test-if-not-in-cl-package "position-if") nil)
  - [X] (deftest symbol-position-if-not (test-if-not-in-cl-package "position-if-not") nil)
  - [X] (deftest symbol-pprint (test-if-not-in-cl-package "pprint") nil)
  - [X] (deftest symbol-pprint-dispatch (test-if-not-in-cl-package "pprint-dispatch") nil)
  - [X] (deftest symbol-pprint-exit-if-list-exhausted (test-if-not-in-cl-package "pprint-exit-if-list-exhausted") nil)
  - [X] (deftest symbol-pprint-fill (test-if-not-in-cl-package "pprint-fill") nil)
  - [X] (deftest symbol-pprint-indent (test-if-not-in-cl-package "pprint-indent") nil)
  - [X] (deftest symbol-pprint-linear (test-if-not-in-cl-package "pprint-linear") nil)
  - [X] (deftest symbol-pprint-logical-block (test-if-not-in-cl-package "pprint-logical-block") nil)
  - [X] (deftest symbol-pprint-newline (test-if-not-in-cl-package "pprint-newline") nil)
  - [X] (deftest symbol-pprint-pop (test-if-not-in-cl-package "pprint-pop") nil)
  - [X] (deftest symbol-pprint-tab (test-if-not-in-cl-package "pprint-tab") nil)
  - [X] (deftest symbol-pprint-tabular (test-if-not-in-cl-package "pprint-tabular") nil)
  - [X] (deftest symbol-prin1 (test-if-not-in-cl-package "prin1") nil)
  - [X] (deftest symbol-prin1-to-string (test-if-not-in-cl-package "prin1-to-string") nil)
  - [X] (deftest symbol-princ (test-if-not-in-cl-package "princ") nil)
  - [X] (deftest symbol-princ-to-string (test-if-not-in-cl-package "princ-to-string") nil)
  - [X] (deftest symbol-print (test-if-not-in-cl-package "print") nil)
  - [X] (deftest symbol-print-not-readable (test-if-not-in-cl-package "print-not-readable") nil)
  - [X] (deftest symbol-print-not-readable-object (test-if-not-in-cl-package "print-not-readable-object") nil)
  - [X] (deftest symbol-print-object (test-if-not-in-cl-package "print-object") nil)
  - [X] (deftest symbol-print-unreadable-object (test-if-not-in-cl-package "print-unreadable-object") nil)
  - [X] (deftest symbol-probe-file (test-if-not-in-cl-package "probe-file") nil)
  - [X] (deftest symbol-proclaim (test-if-not-in-cl-package "proclaim") nil)
  - [X] (deftest symbol-prog (test-if-not-in-cl-package "prog") nil)
  - [X] (deftest symbol-prog* (test-if-not-in-cl-package "prog*") nil)
  - [X] (deftest symbol-prog1 (test-if-not-in-cl-package "prog1") nil)
  - [X] (deftest symbol-prog2 (test-if-not-in-cl-package "prog2") nil)
  - [X] (deftest symbol-progn (test-if-not-in-cl-package "progn") nil)
  - [X] (deftest symbol-program-error (test-if-not-in-cl-package "program-error") nil)
  - [X] (deftest symbol-progv (test-if-not-in-cl-package "progv") nil)
  - [X] (deftest symbol-provide (test-if-not-in-cl-package "provide") nil)
  - [X] (deftest symbol-psetf (test-if-not-in-cl-package "psetf") nil)
  - [X] (deftest symbol-psetq (test-if-not-in-cl-package "psetq") nil)
  - [X] (deftest symbol-push (test-if-not-in-cl-package "push") nil)
  - [X] (deftest symbol-pushnew (test-if-not-in-cl-package "pushnew") nil)
  - [X] (deftest symbol-quote (test-if-not-in-cl-package "quote") nil)
  - [X] (deftest symbol-random (test-if-not-in-cl-package "random") nil)
  - [X] (deftest symbol-random-state (test-if-not-in-cl-package "random-state") nil)
  - [X] (deftest symbol-random-state-p (test-if-not-in-cl-package "random-state-p") nil)
  - [X] (deftest symbol-rassoc (test-if-not-in-cl-package "rassoc") nil)
  - [X] (deftest symbol-rassoc-if (test-if-not-in-cl-package "rassoc-if") nil)
  - [X] (deftest symbol-rassoc-if-not (test-if-not-in-cl-package "rassoc-if-not") nil)
  - [X] (deftest symbol-ratio (test-if-not-in-cl-package "ratio") nil)
  - [X] (deftest symbol-rational (test-if-not-in-cl-package "rational") nil)
  - [X] (deftest symbol-rationalize (test-if-not-in-cl-package "rationalize") nil)
  - [X] (deftest symbol-rationalp (test-if-not-in-cl-package "rationalp") nil)
  - [X] (deftest symbol-read (test-if-not-in-cl-package "read") nil)
  - [X] (deftest symbol-read-byte (test-if-not-in-cl-package "read-byte") nil)
  - [X] (deftest symbol-read-char (test-if-not-in-cl-package "read-char") nil)
  - [X] (deftest symbol-read-char-no-hang (test-if-not-in-cl-package "read-char-no-hang") nil)
  - [X] (deftest symbol-read-delimited-list (test-if-not-in-cl-package "read-delimited-list") nil)
  - [X] (deftest symbol-read-from-string (test-if-not-in-cl-package "read-from-string") nil)
  - [X] (deftest symbol-read-line (test-if-not-in-cl-package "read-line") nil)
  - [X] (deftest symbol-read-preserving-whitespace (test-if-not-in-cl-package "read-preserving-whitespace") nil)
  - [X] (deftest symbol-read-sequence (test-if-not-in-cl-package "read-sequence") nil)
  - [X] (deftest symbol-reader-error (test-if-not-in-cl-package "reader-error") nil)
  - [X] (deftest symbol-readtable (test-if-not-in-cl-package "readtable") nil)
  - [X] (deftest symbol-readtable-case (test-if-not-in-cl-package "readtable-case") nil)
  - [X] (deftest symbol-readtablep (test-if-not-in-cl-package "readtablep") nil)
  - [X] (deftest symbol-real (test-if-not-in-cl-package "real") nil)
  - [X] (deftest symbol-realp (test-if-not-in-cl-package "realp") nil)
  - [X] (deftest symbol-realpart (test-if-not-in-cl-package "realpart") nil)
  - [X] (deftest symbol-reduce (test-if-not-in-cl-package "reduce") nil)
  - [X] (deftest symbol-reinitialize-instance (test-if-not-in-cl-package "reinitialize-instance") nil)
  - [X] (deftest symbol-rem (test-if-not-in-cl-package "rem") nil)
  - [X] (deftest symbol-remf (test-if-not-in-cl-package "remf") nil)
  - [X] (deftest symbol-remhash (test-if-not-in-cl-package "remhash") nil)
  - [X] (deftest symbol-remove (test-if-not-in-cl-package "remove") nil)
  - [X] (deftest symbol-remove-duplicates (test-if-not-in-cl-package "remove-duplicates") nil)
  - [X] (deftest symbol-remove-if (test-if-not-in-cl-package "remove-if") nil)
  - [X] (deftest symbol-remove-if-not (test-if-not-in-cl-package "remove-if-not") nil)
  - [X] (deftest symbol-remove-method (test-if-not-in-cl-package "remove-method") nil)
  - [X] (deftest symbol-remprop (test-if-not-in-cl-package "remprop") nil)
  - [X] (deftest symbol-rename-file (test-if-not-in-cl-package "rename-file") nil)
  - [X] (deftest symbol-rename-package (test-if-not-in-cl-package "rename-package") nil)
  - [X] (deftest symbol-replace (test-if-not-in-cl-package "replace") nil)
  - [X] (deftest symbol-require (test-if-not-in-cl-package "require") nil)
  - [X] (deftest symbol-rest (test-if-not-in-cl-package "rest") nil)
  - [X] (deftest symbol-restart (test-if-not-in-cl-package "restart") nil)
  - [X] (deftest symbol-restart-bind (test-if-not-in-cl-package "restart-bind") nil)
  - [X] (deftest symbol-restart-case (test-if-not-in-cl-package "restart-case") nil)
  - [X] (deftest symbol-restart-name (test-if-not-in-cl-package "restart-name") nil)
  - [X] (deftest symbol-return (test-if-not-in-cl-package "return") nil)
  - [X] (deftest symbol-return-from (test-if-not-in-cl-package "return-from") nil)
  - [X] (deftest symbol-revappend (test-if-not-in-cl-package "revappend") nil)
  - [X] (deftest symbol-reverse (test-if-not-in-cl-package "reverse") nil)
  - [X] (deftest symbol-room (test-if-not-in-cl-package "room") nil)
  - [X] (deftest symbol-rotatef (test-if-not-in-cl-package "rotatef") nil)
  - [X] (deftest symbol-round (test-if-not-in-cl-package "round") nil)
  - [X] (deftest symbol-row-major-aref (test-if-not-in-cl-package "row-major-aref") nil)
  - [X] (deftest symbol-rplaca (test-if-not-in-cl-package "rplaca") nil)
  - [X] (deftest symbol-rplacd (test-if-not-in-cl-package "rplacd") nil)
  - [X] (deftest symbol-safety (test-if-not-in-cl-package "safety") nil)
  - [X] (deftest symbol-satisfies (test-if-not-in-cl-package "satisfies") nil)
  - [X] (deftest symbol-sbit (test-if-not-in-cl-package "sbit") nil)
  - [X] (deftest symbol-scale-float (test-if-not-in-cl-package "scale-float") nil)
  - [X] (deftest symbol-schar (test-if-not-in-cl-package "schar") nil)
  - [X] (deftest symbol-search (test-if-not-in-cl-package "search") nil)
  - [X] (deftest symbol-second (test-if-not-in-cl-package "second") nil)
  - [X] (deftest symbol-sequence (test-if-not-in-cl-package "sequence") nil)
  - [X] (deftest symbol-serious-condition (test-if-not-in-cl-package "serious-condition") nil)
  - [X] (deftest symbol-set (test-if-not-in-cl-package "set") nil)
  - [X] (deftest symbol-set-difference (test-if-not-in-cl-package "set-difference") nil)
  - [X] (deftest symbol-set-dispatch-macro-character (test-if-not-in-cl-package "set-dispatch-macro-character") nil)
  - [X] (deftest symbol-set-exclusive-or (test-if-not-in-cl-package "set-exclusive-or") nil)
  - [X] (deftest symbol-set-macro-character (test-if-not-in-cl-package "set-macro-character") nil)
  - [X] (deftest symbol-set-pprint-dispatch (test-if-not-in-cl-package "set-pprint-dispatch") nil)
  - [X] (deftest symbol-set-syntax-from-char (test-if-not-in-cl-package "set-syntax-from-char") nil)
  - [X] (deftest symbol-setf (test-if-not-in-cl-package "setf") nil)
  - [X] (deftest symbol-setq (test-if-not-in-cl-package "setq") nil)
  - [X] (deftest symbol-seventh (test-if-not-in-cl-package "seventh") nil)
  - [X] (deftest symbol-shadow (test-if-not-in-cl-package "shadow") nil)
  - [X] (deftest symbol-shadowing-import (test-if-not-in-cl-package "shadowing-import") nil)
  - [X] (deftest symbol-shared-initialize (test-if-not-in-cl-package "shared-initialize") nil)
  - [X] (deftest symbol-shiftf (test-if-not-in-cl-package "shiftf") nil)
  - [X] (deftest symbol-short-float (test-if-not-in-cl-package "short-float") nil)
  - [X] (deftest symbol-short-float-epsilon (test-if-not-in-cl-package "short-float-epsilon") nil)
  - [X] (deftest symbol-short-float-negative-epsilon (test-if-not-in-cl-package "short-float-negative-epsilon") nil)
  - [X] (deftest symbol-short-site-name (test-if-not-in-cl-package "short-site-name") nil)
  - [X] (deftest symbol-signal (test-if-not-in-cl-package "signal") nil)
  - [X] (deftest symbol-signed-byte (test-if-not-in-cl-package "signed-byte") nil)
  - [X] (deftest symbol-signum (test-if-not-in-cl-package "signum") nil)
  - [X] (deftest symbol-simple-array (test-if-not-in-cl-package "simple-array") nil)
  - [X] (deftest symbol-simple-base-string (test-if-not-in-cl-package "simple-base-string") nil)
  - [X] (deftest symbol-simple-bit-vector (test-if-not-in-cl-package "simple-bit-vector") nil)
  - [X] (deftest symbol-simple-bit-vector-p (test-if-not-in-cl-package "simple-bit-vector-p") nil)
  - [X] (deftest symbol-simple-condition (test-if-not-in-cl-package "simple-condition") nil)
  - [X] (deftest symbol-simple-condition-format-arguments (test-if-not-in-cl-package "simple-condition-format-arguments") nil)
  - [X] (deftest symbol-simple-condition-format-control (test-if-not-in-cl-package "simple-condition-format-control") nil)
  - [X] (deftest symbol-simple-error (test-if-not-in-cl-package "simple-error") nil)
  - [X] (deftest symbol-simple-string (test-if-not-in-cl-package "simple-string") nil)
  - [X] (deftest symbol-simple-string-p (test-if-not-in-cl-package "simple-string-p") nil)
  - [X] (deftest symbol-simple-type-error (test-if-not-in-cl-package "simple-type-error") nil)
  - [X] (deftest symbol-simple-vector (test-if-not-in-cl-package "simple-vector") nil)
  - [X] (deftest symbol-simple-vector-p (test-if-not-in-cl-package "simple-vector-p") nil)
  - [X] (deftest symbol-simple-warning (test-if-not-in-cl-package "simple-warning") nil)
  - [X] (deftest symbol-sin (test-if-not-in-cl-package "sin") nil)
  - [X] (deftest symbol-single-float (test-if-not-in-cl-package "single-float") nil)
  - [X] (deftest symbol-single-float-epsilon (test-if-not-in-cl-package "single-float-epsilon") nil)
  - [X] (deftest symbol-single-float-negative-epsilon (test-if-not-in-cl-package "single-float-negative-epsilon") nil)
  - [X] (deftest symbol-sinh (test-if-not-in-cl-package "sinh") nil)
  - [X] (deftest symbol-sixth (test-if-not-in-cl-package "sixth") nil)
  - [X] (deftest symbol-sleep (test-if-not-in-cl-package "sleep") nil)
  - [X] (deftest symbol-slot-boundp (test-if-not-in-cl-package "slot-boundp") nil)
  - [X] (deftest symbol-slot-exists-p (test-if-not-in-cl-package "slot-exists-p") nil)
  - [X] (deftest symbol-slot-makunbound (test-if-not-in-cl-package "slot-makunbound") nil)
  - [X] (deftest symbol-slot-missing (test-if-not-in-cl-package "slot-missing") nil)
  - [X] (deftest symbol-slot-unbound (test-if-not-in-cl-package "slot-unbound") nil)
  - [X] (deftest symbol-slot-value (test-if-not-in-cl-package "slot-value") nil)
  - [X] (deftest symbol-software-type (test-if-not-in-cl-package "software-type") nil)
  - [X] (deftest symbol-software-version (test-if-not-in-cl-package "software-version") nil)
  - [X] (deftest symbol-some (test-if-not-in-cl-package "some") nil)
  - [X] (deftest symbol-sort (test-if-not-in-cl-package "sort") nil)
  - [X] (deftest symbol-space (test-if-not-in-cl-package "space") nil)
  - [X] (deftest symbol-special (test-if-not-in-cl-package "special") nil)
  - [X] (deftest symbol-special-operator-p (test-if-not-in-cl-package "special-operator-p") nil)
  - [X] (deftest symbol-speed (test-if-not-in-cl-package "speed") nil)
  - [X] (deftest symbol-sqrt (test-if-not-in-cl-package "sqrt") nil)
  - [X] (deftest symbol-stable-sort (test-if-not-in-cl-package "stable-sort") nil)
  - [X] (deftest symbol-standard (test-if-not-in-cl-package "standard") nil)
  - [X] (deftest symbol-standard-char (test-if-not-in-cl-package "standard-char") nil)
  - [X] (deftest symbol-standard-char-p (test-if-not-in-cl-package "standard-char-p") nil)
  - [X] (deftest symbol-standard-class (test-if-not-in-cl-package "standard-class") nil)
  - [X] (deftest symbol-standard-generic-function (test-if-not-in-cl-package "standard-generic-function") nil)
  - [X] (deftest symbol-standard-method (test-if-not-in-cl-package "standard-method") nil)
  - [X] (deftest symbol-standard-object (test-if-not-in-cl-package "standard-object") nil)
  - [X] (deftest symbol-step (test-if-not-in-cl-package "step") nil)
  - [X] (deftest symbol-storage-condition (test-if-not-in-cl-package "storage-condition") nil)
  - [X] (deftest symbol-store-value (test-if-not-in-cl-package "store-value") nil)
  - [X] (deftest symbol-stream (test-if-not-in-cl-package "stream") nil)
  - [X] (deftest symbol-stream-element-type (test-if-not-in-cl-package "stream-element-type") nil)
  - [X] (deftest symbol-stream-error (test-if-not-in-cl-package "stream-error") nil)
  - [X] (deftest symbol-stream-error-stream (test-if-not-in-cl-package "stream-error-stream") nil)
  - [X] (deftest symbol-stream-external-format (test-if-not-in-cl-package "stream-external-format") nil)
  - [X] (deftest symbol-streamp (test-if-not-in-cl-package "streamp") nil)
  - [X] (deftest symbol-string (test-if-not-in-cl-package "string") nil)
  - [X] (deftest symbol-string-capitalize (test-if-not-in-cl-package "string-capitalize") nil)
  - [X] (deftest symbol-string-downcase (test-if-not-in-cl-package "string-downcase") nil)
  - [X] (deftest symbol-string-equal (test-if-not-in-cl-package "string-equal") nil)
  - [X] (deftest symbol-string-greaterp (test-if-not-in-cl-package "string-greaterp") nil)
  - [X] (deftest symbol-string-left-trim (test-if-not-in-cl-package "string-left-trim") nil)
  - [X] (deftest symbol-string-lessp (test-if-not-in-cl-package "string-lessp") nil)
  - [X] (deftest symbol-string-not-equal (test-if-not-in-cl-package "string-not-equal") nil)
  - [X] (deftest symbol-string-not-greaterp (test-if-not-in-cl-package "string-not-greaterp") nil)
  - [X] (deftest symbol-string-not-lessp (test-if-not-in-cl-package "string-not-lessp") nil)
  - [X] (deftest symbol-string-right-trim (test-if-not-in-cl-package "string-right-trim") nil)
  - [X] (deftest symbol-string-stream (test-if-not-in-cl-package "string-stream") nil)
  - [X] (deftest symbol-string-trim (test-if-not-in-cl-package "string-trim") nil)
  - [X] (deftest symbol-string-upcase (test-if-not-in-cl-package "string-upcase") nil)
  - [X] (deftest symbol-string/= (test-if-not-in-cl-package "string/=") nil)
  - [X] (deftest symbol-string< (test-if-not-in-cl-package "string<") nil)
  - [X] (deftest symbol-string<= (test-if-not-in-cl-package "string<=") nil)
  - [X] (deftest symbol-string= (test-if-not-in-cl-package "string=") nil)
  - [X] (deftest symbol-string> (test-if-not-in-cl-package "string>") nil)
  - [X] (deftest symbol-string>= (test-if-not-in-cl-package "string>=") nil)
  - [X] (deftest symbol-stringp (test-if-not-in-cl-package "stringp") nil)
  - [X] (deftest symbol-structure (test-if-not-in-cl-package "structure") nil)
  - [X] (deftest symbol-structure-class (test-if-not-in-cl-package "structure-class") nil)
  - [X] (deftest symbol-structure-object (test-if-not-in-cl-package "structure-object") nil)
  - [X] (deftest symbol-style-warning (test-if-not-in-cl-package "style-warning") nil)
  - [X] (deftest symbol-sublis (test-if-not-in-cl-package "sublis") nil)
  - [X] (deftest symbol-subseq (test-if-not-in-cl-package "subseq") nil)
  - [X] (deftest symbol-subsetp (test-if-not-in-cl-package "subsetp") nil)
  - [X] (deftest symbol-subst (test-if-not-in-cl-package "subst") nil)
  - [X] (deftest symbol-subst-if (test-if-not-in-cl-package "subst-if") nil)
  - [X] (deftest symbol-subst-if-not (test-if-not-in-cl-package "subst-if-not") nil)
  - [X] (deftest symbol-substitute (test-if-not-in-cl-package "substitute") nil)
  - [X] (deftest symbol-substitute-if (test-if-not-in-cl-package "substitute-if") nil)
  - [X] (deftest symbol-substitute-if-not (test-if-not-in-cl-package "substitute-if-not") nil)
  - [X] (deftest symbol-subtypep (test-if-not-in-cl-package "subtypep") nil)
  - [X] (deftest symbol-svref (test-if-not-in-cl-package "svref") nil)
  - [X] (deftest symbol-sxhash (test-if-not-in-cl-package "sxhash") nil)
  - [X] (deftest symbol-symbol (test-if-not-in-cl-package "symbol") nil)
  - [X] (deftest symbol-symbol-function (test-if-not-in-cl-package "symbol-function") nil)
  - [X] (deftest symbol-symbol-macrolet (test-if-not-in-cl-package "symbol-macrolet") nil)
  - [X] (deftest symbol-symbol-name (test-if-not-in-cl-package "symbol-name") nil)
  - [X] (deftest symbol-symbol-package (test-if-not-in-cl-package "symbol-package") nil)
  - [X] (deftest symbol-symbol-plist (test-if-not-in-cl-package "symbol-plist") nil)
  - [X] (deftest symbol-symbol-value (test-if-not-in-cl-package "symbol-value") nil)
  - [X] (deftest symbol-symbolp (test-if-not-in-cl-package "symbolp") nil)
  - [X] (deftest symbol-synonym-stream (test-if-not-in-cl-package "synonym-stream") nil)
  - [X] (deftest symbol-synonym-stream-symbol (test-if-not-in-cl-package "synonym-stream-symbol") nil)
  - [X] (deftest symbol-t (test-if-not-in-cl-package "t") nil)
  - [X] (deftest symbol-tagbody (test-if-not-in-cl-package "tagbody") nil)
  - [X] (deftest symbol-tailp (test-if-not-in-cl-package "tailp") nil)
  - [X] (deftest symbol-tan (test-if-not-in-cl-package "tan") nil)
  - [X] (deftest symbol-tanh (test-if-not-in-cl-package "tanh") nil)
  - [X] (deftest symbol-tenth (test-if-not-in-cl-package "tenth") nil)
  - [X] (deftest symbol-terpri (test-if-not-in-cl-package "terpri") nil)
  - [X] (deftest symbol-the (test-if-not-in-cl-package "the") nil)
  - [X] (deftest symbol-third (test-if-not-in-cl-package "third") nil)
  - [X] (deftest symbol-throw (test-if-not-in-cl-package "throw") nil)
  - [X] (deftest symbol-time (test-if-not-in-cl-package "time") nil)
  - [X] (deftest symbol-trace (test-if-not-in-cl-package "trace") nil)
  - [X] (deftest symbol-translate-logical-pathname (test-if-not-in-cl-package "translate-logical-pathname") nil)
  - [X] (deftest symbol-translate-pathname (test-if-not-in-cl-package "translate-pathname") nil)
  - [X] (deftest symbol-tree-equal (test-if-not-in-cl-package "tree-equal") nil)
  - [X] (deftest symbol-truename (test-if-not-in-cl-package "truename") nil)
  - [X] (deftest symbol-truncate (test-if-not-in-cl-package "truncate") nil)
  - [X] (deftest symbol-two-way-stream (test-if-not-in-cl-package "two-way-stream") nil)
  - [X] (deftest symbol-two-way-stream-input-stream (test-if-not-in-cl-package "two-way-stream-input-stream") nil)
  - [X] (deftest symbol-two-way-stream-output-stream (test-if-not-in-cl-package "two-way-stream-output-stream") nil)
  - [X] (deftest symbol-type (test-if-not-in-cl-package "type") nil)
  - [X] (deftest symbol-type-error (test-if-not-in-cl-package "type-error") nil)
  - [X] (deftest symbol-type-error-datum (test-if-not-in-cl-package "type-error-datum") nil)
  - [X] (deftest symbol-type-error-expected-type (test-if-not-in-cl-package "type-error-expected-type") nil)
  - [X] (deftest symbol-type-of (test-if-not-in-cl-package "type-of") nil)
  - [X] (deftest symbol-typecase (test-if-not-in-cl-package "typecase") nil)
  - [X] (deftest symbol-typep (test-if-not-in-cl-package "typep") nil)
  - [X] (deftest symbol-unbound-slot (test-if-not-in-cl-package "unbound-slot") nil)
  - [X] (deftest symbol-unbound-slot-instance (test-if-not-in-cl-package "unbound-slot-instance") nil)
  - [X] (deftest symbol-unbound-variable (test-if-not-in-cl-package "unbound-variable") nil)
  - [X] (deftest symbol-undefined-function (test-if-not-in-cl-package "undefined-function") nil)
  - [X] (deftest symbol-unexport (test-if-not-in-cl-package "unexport") nil)
  - [X] (deftest symbol-unintern (test-if-not-in-cl-package "unintern") nil)
  - [X] (deftest symbol-union (test-if-not-in-cl-package "union") nil)
  - [X] (deftest symbol-unless (test-if-not-in-cl-package "unless") nil)
  - [X] (deftest symbol-unread-char (test-if-not-in-cl-package "unread-char") nil)
  - [X] (deftest symbol-unsigned-byte (test-if-not-in-cl-package "unsigned-byte") nil)
  - [X] (deftest symbol-untrace (test-if-not-in-cl-package "untrace") nil)
  - [X] (deftest symbol-unuse-package (test-if-not-in-cl-package "unuse-package") nil)
  - [X] (deftest symbol-unwind-protect (test-if-not-in-cl-package "unwind-protect") nil)
  - [X] (deftest symbol-update-instance-for-different-class (test-if-not-in-cl-package "update-instance-for-different-class") nil)
  - [X] (deftest symbol-update-instance-for-redefined-class (test-if-not-in-cl-package "update-instance-for-redefined-class") nil)
  - [X] (deftest symbol-upgraded-array-element-type (test-if-not-in-cl-package "upgraded-array-element-type") nil)
  - [X] (deftest symbol-upgraded-complex-part-type (test-if-not-in-cl-package "upgraded-complex-part-type") nil)
  - [X] (deftest symbol-upper-case-p (test-if-not-in-cl-package "upper-case-p") nil)
  - [X] (deftest symbol-use-package (test-if-not-in-cl-package "use-package") nil)
  - [X] (deftest symbol-use-value (test-if-not-in-cl-package "use-value") nil)
  - [X] (deftest symbol-user-homedir-pathname (test-if-not-in-cl-package "user-homedir-pathname") nil)
  - [X] (deftest symbol-values (test-if-not-in-cl-package "values") nil)
  - [X] (deftest symbol-values-list (test-if-not-in-cl-package "values-list") nil)
  - [X] (deftest symbol-variable (test-if-not-in-cl-package "variable") nil)
  - [X] (deftest symbol-vector (test-if-not-in-cl-package "vector") nil)
  - [X] (deftest symbol-vector-pop (test-if-not-in-cl-package "vector-pop") nil)
  - [X] (deftest symbol-vector-push (test-if-not-in-cl-package "vector-push") nil)
  - [X] (deftest symbol-vector-push-extend (test-if-not-in-cl-package "vector-push-extend") nil)
  - [X] (deftest symbol-vectorp (test-if-not-in-cl-package "vectorp") nil)
  - [X] (deftest symbol-warn (test-if-not-in-cl-package "warn") nil)
  - [X] (deftest symbol-warning (test-if-not-in-cl-package "warning") nil)
  - [X] (deftest symbol-when (test-if-not-in-cl-package "when") nil)
  - [X] (deftest symbol-wild-pathname-p (test-if-not-in-cl-package "wild-pathname-p") nil)
  - [X] (deftest symbol-with-accessors (test-if-not-in-cl-package "with-accessors") nil)
  - [X] (deftest symbol-with-compilation-unit (test-if-not-in-cl-package "with-compilation-unit") nil)
  - [X] (deftest symbol-with-condition-restarts (test-if-not-in-cl-package "with-condition-restarts") nil)
  - [X] (deftest symbol-with-hash-table-iterator (test-if-not-in-cl-package "with-hash-table-iterator") nil)
  - [X] (deftest symbol-with-input-from-string (test-if-not-in-cl-package "with-input-from-string") nil)
  - [X] (deftest symbol-with-open-file (test-if-not-in-cl-package "with-open-file") nil)
  - [X] (deftest symbol-with-open-stream (test-if-not-in-cl-package "with-open-stream") nil)
  - [X] (deftest symbol-with-output-to-string (test-if-not-in-cl-package "with-output-to-string") nil)
  - [X] (deftest symbol-with-package-iterator (test-if-not-in-cl-package "with-package-iterator") nil)
  - [X] (deftest symbol-with-simple-restart (test-if-not-in-cl-package "with-simple-restart") nil)
  - [X] (deftest symbol-with-slots (test-if-not-in-cl-package "with-slots") nil)
  - [X] (deftest symbol-with-standard-io-syntax (test-if-not-in-cl-package "with-standard-io-syntax") nil)
  - [X] (deftest symbol-write (test-if-not-in-cl-package "write") nil)
  - [X] (deftest symbol-write-byte (test-if-not-in-cl-package "write-byte") nil)
  - [X] (deftest symbol-write-char (test-if-not-in-cl-package "write-char") nil)
  - [X] (deftest symbol-write-line (test-if-not-in-cl-package "write-line") nil)
  - [X] (deftest symbol-write-sequence (test-if-not-in-cl-package "write-sequence") nil)
  - [X] (deftest symbol-write-string (test-if-not-in-cl-package "write-string") nil)
  - [X] (deftest symbol-write-to-string (test-if-not-in-cl-package "write-to-string") nil)
  - [X] (deftest symbol-y-or-n-p (test-if-not-in-cl-package "y-or-n-p") nil)
  - [X] (deftest symbol-yes-or-no-p (test-if-not-in-cl-package "yes-or-no-p") nil)
  - [X] (deftest symbol-zerop (test-if-not-in-cl-package "zerop") nil)
  - [X] (deftest keyword-package-nicknames
  - [ ] (deftest common-lisp-package-nicknames
  - [ ] (deftest common-lisp-user-package-nicknames
  - [ ] (deftest no-extra-symbols-exported-from-common-lisp
  - [ ] (deftest keyword-behavior
  - [ ] (deftest cl-function-symbols.1
  - [ ] (deftest cl-macro-symbols.1
  - [ ] (deftest cl-constant-symbols.1
  - [ ] (deftest cl-variable-symbols.1
  - [ ] (deftest cl-types-that-are-classes.1
  - [ ] (deftest cl-types-that-are-classes.2
  - [ ] (deftest cl-types-that-are-classes.3
  - [X] (deftest symbol-package.error.1
  - [X] (deftest symbol-package.error.2
  - [ ] (deftest symbol-package.error.3
  - [X] (deftest symbol-plist.error.1
  - [X] (deftest symbol-plist.error.2
  - [ ] (deftest symbol-plist.error.3
  - [ ] (deftest symbol-plist.error.4
  - [X] (deftest symbol-value.error.1
  - [X] (deftest symbol-value.error.2
  - [ ] (deftest symbol-value.error.3
  - [ ] (deftest symbol-value.error.4
  - [ ] (deftest symbol-value.error.5
**** copy-symbol.lsp [28%]
  - [ ] (deftest copy-symbol.1
  - [ ] (deftest copy-symbol.2
  - [ ] (deftest copy-symbol.3
  - [ ] (deftest copy-symbol.4
  - [ ] (deftest copy-symbol.5
  - [X] (deftest copy-symbol.error.1
  - [X] (deftest copy-symbol.error.2
**** makunbound.lsp [60%]
  - [X] (deftest makunbound.1
  - [ ] (deftest makunbound.2
  - [X] (deftest makunbound.error.1
  - [X] (deftest makunbound.error.2
  - [ ] (deftest makunbound.error.3
*** objects [0%]
**** add-method.lsp [0%]
  - [ ] (deftest add-method.error.1
  - [ ] (deftest add-method.error.2
  - [ ] (deftest add-method.error.3
  - [ ] (deftest add-method.error.4
  - [ ] (deftest add-method.error.5
  - [ ] (deftest add-method.error.6
  - [ ] (deftest add-method.error.7
  - [ ] (deftest add-method.error.8
  - [ ] (deftest add-method.1
  - [ ] (deftest add-method.2
**** define-method-combination.lsp [0%]
  - [ ] (deftest define-method-combination-01.1
  - [ ] (deftest define-method-combination-01.2
  - [ ] (deftest define-method-combination-01.3
  - [ ] (deftest define-method-combination-01.4
  - [ ] (deftest define-method-combination-02.1
  - [ ] (deftest define-method-combination-03.1
  - [ ] (deftest define-method-combination-03.2
  - [ ] (deftest define-method-combination-03.3
  - [ ] (deftest define-method-combination-04.1
  - [ ] (deftest define-method-combination-04.2
  - [ ] (deftest define-method-combination-04.3
  - [ ] (deftest define-method-combination-05.1
  - [ ] (deftest define-method-combination-07.1
**** defgeneric-method-combination-and.lsp [0%]
  - [ ] (deftest defgeneric-method-combination.and.1
  - [ ] (deftest defgeneric-method-combination.and.2
  - [ ] (deftest defgeneric-method-combination.and.3
  - [ ] (deftest defgeneric-method-combination.and.4
  - [ ] (deftest defgeneric-method-combination.and.5
  - [ ] (deftest defgeneric-method-combination.and.6
  - [ ] (deftest defgeneric-method-combination.and.7
  - [ ] (deftest defgeneric-method-combination.and.8
  - [ ] (deftest defgeneric-method-combination.and.9
  - [ ] (deftest defgeneric-method-combination.and.10
  - [ ] (deftest defgeneric-method-combination.and.11
  - [ ] (deftest defgeneric-method-combination.and.12
**** find-class.lsp [0%]
  - [ ] (deftest find-class.1
  - [ ] (deftest find-class.2
  - [ ] (deftest find-class.3
  - [ ] (deftest find-class.4
  - [ ] (deftest find-class.5
  - [ ] (deftest find-class.6
  - [ ] (deftest find-class.7
  - [ ] (deftest find-class.8
  - [ ] (deftest find-class.9
  - [ ] (deftest find-class.10
  - [ ] (deftest find-class.11
  - [ ] (deftest find-class.12
  - [ ] (deftest find-class.13
  - [ ] (deftest find-class.14
  - [ ] (deftest find-class.15
  - [ ] (deftest find-class.16
  - [ ] (deftest find-class.17
  - [ ] (deftest find-class.18
  - [ ] (deftest find-class.19
  - [ ] (deftest find-class.20
  - [ ] (deftest find-class.21
  - [ ] (deftest find-class.22
  - [ ] (deftest find-class.23
  - [ ] (deftest find-class.error.1
  - [ ] (deftest find-class.error.2
**** defgeneric-method-combination-plus.lsp [0%]
  - [ ] (deftest defgeneric-method-combination.+.1
  - [ ] (deftest defgeneric-method-combination.+.2
  - [ ] (deftest defgeneric-method-combination.+.3
  - [ ] (deftest defgeneric-method-combination.+.4
  - [ ] (deftest defgeneric-method-combination.+.5
  - [ ] (deftest defgeneric-method-combination.+.6
  - [ ] (deftest defgeneric-method-combination.+.7
  - [ ] (deftest defgeneric-method-combination.+.8
  - [ ] (deftest defgeneric-method-combination.+.9
  - [ ] (deftest defgeneric-method-combination.+.10
  - [ ] (deftest defgeneric-method-combination.+.11
  - [ ] (deftest defgeneric-method-combination.+.12
**** defgeneric-method-combination-progn.lsp [0%]
  - [ ] (deftest defgeneric-method-combination.progn.1
  - [ ] (deftest defgeneric-method-combination.progn.2
  - [ ] (deftest defgeneric-method-combination.progn.3
  - [ ] (deftest defgeneric-method-combination.progn.4
  - [ ] (deftest defgeneric-method-combination.progn.4a
  - [ ] (deftest defgeneric-method-combination.progn.5
  - [ ] (deftest defgeneric-method-combination.progn.5a
  - [ ] (deftest defgeneric-method-combination.progn.6
  - [ ] (deftest defgeneric-method-combination.progn.6a
  - [ ] (deftest defgeneric-method-combination.progn.7
  - [ ] (deftest defgeneric-method-combination.progn.7a
  - [ ] (deftest defgeneric-method-combination.progn.8
  - [ ] (deftest defgeneric-method-combination.progn.9
  - [ ] (deftest defgeneric-method-combination.progn.10
  - [ ] (deftest defgeneric-method-combination.progn.11
  - [ ] (deftest defgeneric-method-combination.progn.12
**** no-applicable-method.lsp [0%]
  - [ ] (deftest no-applicable-method.1
**** slot-unbound.lsp [0%]
  - [ ] (deftest slot-unbound.1
  - [ ] (deftest slot-unbound.2
  - [ ] (deftest slot-unbound.3
  - [ ] (deftest slot-unbound.4
  - [ ] (deftest slot-unbound.5
  - [ ] (deftest slot-unbound.6
**** slot-missing.lsp [0%]
  - [ ] (deftest slot-missing.1
  - [ ] (deftest slot-missing.2
  - [ ] (deftest slot-missing.3
  - [ ] (deftest slot-missing.4
  - [ ] (deftest slot-missing.5
  - [ ] (deftest slot-missing.6
  - [ ] (deftest slot-missing.7
  - [ ] (deftest slot-missing.8
**** make-instances-obsolete.lsp [0%]
  - [ ] (deftest make-instances-obsolete.1
  - [ ] (deftest make-instances-obsolete.2
  - [ ] (deftest make-instances-obsolete.error.1
  - [ ] (deftest make-instances-obsolete.error.2
**** defclass.lsp [0%]
  - [ ] (defclass-with-tests defclass-1 nil nil)
  - [ ] (defclass-with-tests defclass-2 nil (slot1 slot2 slot3))
  - [ ] (defclass-with-tests defclass-3 (defclass-1) nil)
  - [ ] (defclass-with-tests defclass-4 (defclass-1 defclass-2) (slot1 slot4))
  - [ ] (generate-slot-tests) ;; a macro
**** with-accessors.lsp [0%]
  - [ ] (deftest with-accessors.1
  - [ ] (deftest with-accessors.2
  - [ ] (deftest with-accessors.3
  - [ ] (deftest with-accessors.4
  - [ ] (deftest with-accessors.5
  - [ ] (deftest with-accessors.6
  - [ ] (deftest with-accessors.7
  - [ ] (deftest with-accessors.8
  - [ ] (deftest with-accessors.9
  - [ ] (deftest with-accessors.10
  - [ ] (deftest with-accessors.11
  - [ ] (deftest with-accessors.12
  - [ ] (deftest with-accessors.13
  - [ ] (deftest with-accessors.14
  - [ ] (deftest with-accessors.15
**** defgeneric-method-combination-min.lsp [0%]
  - [ ] (deftest defgeneric-method-combination.min.1
  - [ ] (deftest defgeneric-method-combination.min.2
  - [ ] (deftest defgeneric-method-combination.min.3
  - [ ] (deftest defgeneric-method-combination.min.4
  - [ ] (deftest defgeneric-method-combination.min.5
  - [ ] (deftest defgeneric-method-combination.min.6
  - [ ] (deftest defgeneric-method-combination.min.7
  - [ ] (deftest defgeneric-method-combination.min.8
  - [ ] (deftest defgeneric-method-combination.min.9
  - [ ] (deftest defgeneric-method-combination.min.10
  - [ ] (deftest defgeneric-method-combination.min.11
  - [ ] (deftest defgeneric-method-combination.min.12
**** defgeneric-method-combination-max.lsp [0%]
  - [ ] (deftest defgeneric-method-combination.max.1
  - [ ] (deftest defgeneric-method-combination.max.2
  - [ ] (deftest defgeneric-method-combination.max.3
  - [ ] (deftest defgeneric-method-combination.max.4
  - [ ] (deftest defgeneric-method-combination.max.5
  - [ ] (deftest defgeneric-method-combination.max.6
  - [ ] (deftest defgeneric-method-combination.max.7
  - [ ] (deftest defgeneric-method-combination.max.8
  - [ ] (deftest defgeneric-method-combination.max.9
  - [ ] (deftest defgeneric-method-combination.max.10
  - [ ] (deftest defgeneric-method-combination.max.11
  - [ ] (deftest defgeneric-method-combination.max.12
**** defclass-03.lsp [0%]
  - [ ] (deftest class-0301.1
  - [ ] (deftest class-0302.1
  - [ ] (deftest class-0303.1
  - [ ] (deftest class-0304.1
  - [ ] (deftest class-0305.1
  - [ ] (deftest class-0306.1
  - [ ] (deftest class-0306.2
  - [ ] (deftest class-0307.1
  - [ ] (deftest class-0308.1
  - [ ] (deftest class-0309.1
  - [ ] (deftest class-0310.1
  - [ ] (deftest class-0311.1
**** with-slots.lsp [0%]
  - [ ] (deftest with-slots.1
  - [ ] (deftest with-slots.2
  - [ ] (deftest with-slots.3
  - [ ] (deftest with-slots.4
  - [ ] (deftest with-slots.5
  - [ ] (deftest with-slots.6
  - [ ] (deftest with-slots.7
  - [ ] (deftest with-slots.8
  - [ ] (deftest with-slots.9
  - [ ] (deftest with-slots.10
  - [ ] (deftest with-slots.11
  - [ ] (deftest with-slots.12
  - [ ] (deftest with-slots.13
  - [ ] (deftest with-slots.14
  - [ ] (deftest with-slots.15
  - [ ] (deftest with-slots.16
  - [ ] (deftest with-slots.17
  - [ ] (deftest with-slots.18
  - [ ] (deftest with-slots.19
  - [ ] (deftest with-slots.20
  - [ ] (deftest with-slots.21
**** defgeneric-method-combination-aux.lsp [0%]
**** change-class.lsp [0%]
  - [ ] (deftest change-class.1.1
  - [ ] (deftest change-class.1.2
  - [ ] (deftest change-class.1.3
  - [ ] (deftest change-class.1.4
  - [ ] (deftest change-class.1.5
  - [ ] (deftest change-class.1.6
  - [ ] (deftest change-class.1.7
  - [ ] (deftest change-class.1.8
  - [ ] (deftest change-class.1.9
  - [ ] (deftest change-class.1.10
  - [ ] (deftest change-class.1.11
  - [ ] (deftest change-class.1.12
  - [ ] (deftest change-class.2.1
  - [ ] (deftest change-class.2.2
  - [ ] (deftest change-class.2.3
  - [ ] (deftest change-class.3.1
  - [ ] (deftest change-class.3.2
  - [ ] (deftest change-class.4.1
  - [ ] (deftest change-class.4.2
  - [ ] (deftest change-class.4.3
  - [ ] (deftest change-class.4.4
  - [ ] (deftest change-class.4.5
  - [ ] (deftest change-class.5
  - [ ] (deftest change-class.6.1
  - [ ] (deftest change-class.6.2
  - [ ] (deftest change-class.7.1
  - [ ] (deftest change-class.7.2
  - [ ] (deftest change-class.7.3
  - [ ] (deftest change-class.7.4
  - [ ] (deftest change-class.7.5
  - [ ] (deftest change-class.7.6
  - [ ] (deftest change-class.8.1
  - [ ] (deftest change-class.8.2
  - [ ] (deftest change-class.8.3
  - [ ] (deftest change-class.error.1
  - [ ] (deftest change-class.error.2
  - [ ] (deftest change-class.error.3
  - [ ] (deftest change-class.error.4
  - [ ] (deftest change-class.error.5
  - [ ] (deftest change-class.error.6
**** defgeneric-method-combination-append.lsp [0%]
  - [ ] (deftest defgeneric-method-combination.append.1
  - [ ] (deftest defgeneric-method-combination.append.2
  - [ ] (deftest defgeneric-method-combination.append.3
  - [ ] (deftest defgeneric-method-combination.append.4
  - [ ] (deftest defgeneric-method-combination.append.5
  - [ ] (deftest defgeneric-method-combination.append.6
  - [ ] (deftest defgeneric-method-combination.append.7
  - [ ] (deftest defgeneric-method-combination.append.8
  - [ ] (deftest defgeneric-method-combination.append.9
  - [ ] (deftest defgeneric-method-combination.append.10
  - [ ] (deftest defgeneric-method-combination.append.11
  - [ ] (deftest defgeneric-method-combination.append.12
  - [ ] (deftest defgeneric-method-combination.append.13
**** make-load-form.lsp [0%]
  - [ ] (deftest make-load-form.1
  - [ ] (deftest make-load-form.2
  - [ ] (deftest make-load-form.3
  - [ ] (deftest make-load-form.4
  - [ ] (deftest make-load-form.5
  - [ ] (deftest make-load-form.6
  - [ ] (deftest make-load-form.7
  - [ ] (deftest make-load-form.8
  - [ ] (deftest make-load-form.9
  - [ ] (deftest make-load-form.10
  - [ ] (deftest make-load-form.11
  - [ ] (deftest make-load-form.12
  - [ ] (deftest make-load-form.13
  - [ ] (deftest make-load-form.14
  - [ ] (deftest make-load-form.15
  - [ ] (deftest make-load-form.error.1
  - [ ] (deftest make-load-form.error.2
**** defgeneric.lsp [0%]
  - [ ] (deftest defgeneric.error.1
  - [ ] (deftest defgeneric.error.2
  - [ ] (deftest defgeneric.error.3
  - [ ] (deftest defgeneric.error.4
  - [ ] (deftest defgeneric.error.5
  - [ ] (deftest defgeneric.error.6
  - [ ] (deftest defgeneric.error.7
  - [ ] (deftest defgeneric.error.8
  - [ ] (deftest defgeneric.error.9
  - [ ] (deftest defgeneric.error.10
  - [ ] (deftest defgeneric.error.11
  - [ ] (deftest defgeneric.error.12
  - [ ] (deftest defgeneric.error.13
  - [ ] (deftest defgeneric.error.14
  - [ ] (deftest defgeneric.error.15
  - [ ] (deftest defgeneric.error.16
  - [ ] (deftest defgeneric.error.17
  - [ ] (deftest defgeneric.error.18
  - [ ] (deftest defgeneric.error.19
  - [ ] (deftest defgeneric.error.20
  - [ ] (deftest defgeneric.error.21
  - [ ] (deftest defgeneric.error.22
  - [ ] (deftest defgeneric.1
  - [ ] (deftest defgeneric.2
  - [ ] (deftest defgeneric.3
  - [ ] (deftest defgeneric.4
  - [ ] (deftest defgeneric.5
  - [ ] (deftest defgeneric.6
  - [ ] (deftest defgeneric.7
  - [ ] (deftest defgeneric.8
  - [ ] (deftest defgeneric.9
  - [ ] (deftest defgeneric.18
  - [ ] (deftest defgeneric.20
  - [ ] (deftest defgeneric.21
  - [ ] (deftest defgeneric.22
  - [ ] (deftest defgeneric.23
  - [ ] (deftest defgeneric.24
  - [ ] (deftest defgeneric.25
  - [ ] (deftest defgeneric.26
  - [ ] (deftest defgeneric.28
  - [ ] (deftest defgeneric.29
  - [ ] (deftest defgeneric.31
  - [ ] (deftest defgeneric.32
  - [ ] (deftest defgeneric.33
  - [ ] (deftest defgeneric.34
  - [ ] (deftest defgeneric.35
**** defclass-forward-reference.lsp [0%]
  - [ ] (deftest defclass.forward-ref.1
  - [ ] (deftest defclass.forward-ref.2
  - [ ] (deftest defclass.forward-ref.3
  - [ ] (deftest defclass.forward-ref.4
**** no-next-method.lsp [0%]
  - [ ] (deftest no-next-method.1
  - [ ] (deftest no-next-method.2
**** next-method-p.lsp [0%]
  - [ ] (deftest next-method-p.1
  - [ ] (deftest next-method-p.2
  - [ ] (deftest next-method-p.3
  - [ ] (deftest next-method-p.4
  - [ ] (deftest next-method-p.5
  - [ ] (deftest next-method-p.6
  - [ ] (deftest next-method-p.7
  - [ ] (deftest next-method-p.8
  - [ ] (deftest next-method-p.9
  - [ ] (deftest next-method-p.10
  - [ ] (deftest next-method-p.error.1
**** defclass-02.lsp [0%]
  - [ ] (deftest class-0201.1
  - [ ] (deftest class-0202.1
  - [ ] (deftest class-0203.1
  - [ ] (deftest class-0203.2
  - [ ] (deftest class-0205a.1
  - [ ] (deftest class-0205b.1
  - [ ] (deftest class-0206.1
  - [ ] (deftest class-0207.1
  - [ ] (deftest class-0208.1
  - [ ] (deftest class-redefinition.1
  - [ ] (deftest class-redefinition.2
  - [ ] (deftest class-redefinition.3
  - [ ] (deftest class-0211.1
  - [ ] (deftest class-0212.1
  - [ ] (deftest class-0212.2
  - [ ] (deftest class-0212.3
  - [ ] (deftest class-0212.4
  - [ ] (deftest class-0212.5
  - [ ] (deftest class-0213.1
  - [ ] (deftest class-0213.2
  - [ ] (deftest class-0214.1
  - [ ] (deftest class-0214.2
  - [ ] (deftest class-0215.1
  - [ ] (deftest class-0215.2
  - [ ] (deftest class-0216.1
  - [ ] (deftest class-0216.2
  - [ ] (deftest class-0217.1
  - [ ] (deftest class-0217.2
  - [ ] (deftest class-0217.3
  - [ ] (deftest class-0217.4
  - [ ] (deftest class-0218.1
  - [ ] (deftest class-0218.2
  - [ ] (deftest class-0219.1
  - [ ] (deftest class-0219.2
  - [ ] (deftest class-0220.1
  - [ ] (deftest class-0220.2
  - [ ] (deftest class-0220.3
  - [ ] (deftest class-0220.4
  - [ ] (deftest class-0221.1
  - [ ] (deftest class-0221.2
  - [ ] (deftest class-0221.3
  - [ ] (deftest class-0222.1
  - [ ] (deftest class-0222.2
  - [ ] (deftest class-0223.1
**** remove-method.lsp [0%]
  - [ ] (deftest remove-method.1
  - [ ] (deftest remove-method.2
  - [ ] (deftest remove-method.3
  - [ ] (deftest remove-method.4
  - [ ] (deftest remove-method.5
  - [ ] (deftest remove-method.6
  - [ ] (deftest remove-method.7
  - [ ] (deftest remove-method.8
  - [ ] (deftest remove-method.9
  - [ ] (deftest remove-method.10
  - [ ] (deftest remove-method.11
**** slot-value.lsp [0%]
  - [ ] (deftest slot-value.1
  - [ ] (deftest slot-value.2
  - [ ] (deftest slot-value.order.1
  - [ ] (deftest slot-value.order.2
  - [ ] (deftest slot-value.error.1
  - [ ] (deftest slot-value.error.2
  - [ ] (deftest slot-value.error.3
  - [ ] (deftest slot-value.error.4
  - [ ] (deftest slot-value.error.5
  - [ ] (deftest slot-value.error.6
**** make-load-form-saving-slots.lsp [0%]
  - [ ] (deftest make-load-form-saving-slots.1
  - [ ] (deftest make-load-form-saving-slots.2
  - [ ] (deftest make-load-form-saving-slots.3
  - [ ] (deftest make-load-form-saving-slots.4
  - [ ] (deftest make-load-form-saving-slots.5
  - [ ] (deftest make-load-form-saving-slots.6
  - [ ] (deftest make-load-form-saving-slots.7
  - [ ] (deftest make-load-form-saving-slots.8
  - [ ] (deftest make-load-form-saving-slots.9
  - [ ] (deftest make-load-form-savings-slots.10
  - [ ] (deftest make-load-form-savings-slots.11
  - [ ] (deftest make-load-form-savings-slots.12
  - [ ] (deftest make-load-form-saving-slots.error.1
  - [ ] (deftest make-load-form-saving-slots.error.2
  - [ ] (deftest make-load-form-saving-slots.error.3
**** defgeneric-method-combination-or.lsp [0%]
  - [ ] (deftest defgeneric-method-combination.or.1
  - [ ] (deftest defgeneric-method-combination.or.2
  - [ ] (deftest defgeneric-method-combination.or.3
  - [ ] (deftest defgeneric-method-combination.or.4
  - [ ] (deftest defgeneric-method-combination.or.5
  - [ ] (deftest defgeneric-method-combination.or.6
  - [ ] (deftest defgeneric-method-combination.or.7
  - [ ] (deftest defgeneric-method-combination.or.8
  - [ ] (deftest defgeneric-method-combination.or.9
  - [ ] (deftest defgeneric-method-combination.or.10
  - [ ] (deftest defgeneric-method-combination.or.11
  - [ ] (deftest defgeneric-method-combination.or.12
**** find-method.lsp [0%]
  - [ ] (deftest find-method.1
  - [ ] (deftest find-method.2
  - [ ] (deftest find-method.3
  - [ ] (deftest find-method.4
  - [ ] (deftest find-method.5
  - [ ] (deftest find-method.6
  - [ ] (deftest find-method.7
  - [ ] (deftest find-method.8
  - [ ] (deftest find-method.9
  - [ ] (deftest find-method.error.1
  - [ ] (deftest find-method.error.2
  - [ ] (deftest find-method.error.3
  - [ ] (deftest find-method.error.4
  - [ ] (deftest find-method.error.5
  - [ ] (deftest find-method.error.6
  - [ ] (deftest find-method.error.7
  - [ ] (deftest find-method.error.8
  - [ ] (deftest find-method.error.9
  - [ ] (deftest find-method.error.10
**** class-name.lsp [0%]
  - [ ] (deftest class-name.1
  - [ ] (deftest class-name.2
  - [ ] (deftest setf-class-name.1
  - [ ] (deftest setf-class-name.2
  - [ ] (deftest class-name.error.1
  - [ ] (deftest class-name.error.2
**** defgeneric-method-combination-nconc.lsp [0%]
  - [ ] (deftest defgeneric-method-combination.nconc.1
  - [ ] (deftest defgeneric-method-combination.nconc.2
  - [ ] (deftest defgeneric-method-combination.nconc.3
  - [ ] (deftest defgeneric-method-combination.nconc.4
  - [ ] (deftest defgeneric-method-combination.nconc.5
  - [ ] (deftest defgeneric-method-combination.nconc.6
  - [ ] (deftest defgeneric-method-combination.nconc.7
  - [ ] (deftest defgeneric-method-combination.nconc.8
  - [ ] (deftest defgeneric-method-combination.nconc.9
  - [ ] (deftest defgeneric-method-combination.nconc.10
  - [ ] (deftest defgeneric-method-combination.nconc.11
  - [ ] (deftest defgeneric-method-combination.nconc.12
**** shared-initialize.lsp [0%]
  - [ ] (deftest shared-initialize.1.1
  - [ ] (deftest shared-initialize.1.2
  - [ ] (deftest shared-initialize.1.3
  - [ ] (deftest shared-initialize.1.4
  - [ ] (deftest shared-initialize.1.5
  - [ ] (deftest shared-initialize.1.6
  - [ ] (deftest shared-initialize.1.7
  - [ ] (deftest shared-initialize.1.8
  - [ ] (deftest shared-initialize.1.9
  - [ ] (deftest shared-initialize.1.10
  - [ ] (deftest shared-initialize.2.1
  - [ ] (deftest shared-initialize.2.2
  - [ ] (deftest shared-initialize.2.3
  - [ ] (deftest shared-initialize.2.4
  - [ ] (deftest shared-initialize.2.5
  - [ ] (deftest shared-initialize.2.6
  - [ ] (deftest shared-initialize.3.1
  - [ ] (deftest shared-initialize.4.1
  - [ ] (deftest shared-initialize.4.2
  - [ ] (deftest shared-initialize.4.3
  - [ ] (deftest shared-initialize.4.4
  - [ ] (deftest shared-initialize.4.5
  - [ ] (deftest shared-initialize.4.6
  - [ ] (deftest shared-initialize.4.7
  - [ ] (deftest shared-initialize.5.1
  - [ ] (deftest shared-initialize.5.2
  - [ ] (deftest shared-initialize.5.3
  - [ ] (deftest shared-initialize.5.4
  - [ ] (deftest shared-initialize.6.1
  - [ ] (deftest shared-initialize.6.2
  - [ ] (deftest shared-initialize.6.3
  - [ ] (deftest shared-initialize.6.4
  - [ ] (deftest shared-initialize.6.5
  - [ ] (deftest shared-initialize.6.6
  - [ ] (deftest shared-initialize.6.7
  - [ ] (deftest shared-initialize.6.8
  - [ ] (deftest shared-initialize.6.9
  - [ ] (deftest shared-initialize.7.1
  - [ ] (deftest shared-initialize.7.2
  - [ ] (deftest shared-initialize.8.1
  - [ ] (deftest shared-initialize.8.2
  - [ ] (deftest shared-initialize.8.3
  - [ ] (deftest shared-initialize.9.1
  - [ ] (deftest shared-initialize.order.1
  - [ ] (deftest shared-initialize.error.1
  - [ ] (deftest shared-initialize.error.2
  - [ ] (deftest shared-initialize.error.3
  - [ ] (deftest shared-initialize.error.4
**** defclass-errors.lsp [0%]
  - [ ] (deftest defclass.error.1
  - [ ] (deftest defclass.error.2
  - [ ] (deftest defclass.error.3
  - [ ] (deftest defclass.error.4
  - [ ] (deftest defclass.error.5
  - [ ] (deftest defclass.error.6
  - [ ] (deftest defclass.error.7
  - [ ] (deftest defclass.error.8
  - [ ] (deftest defclass.error.9
  - [ ] (deftest defclass.error.10
  - [ ] (deftest defclass.error.11
  - [ ] (deftest defclass.error.12
  - [ ] (deftest defclass.error.13
  - [ ] (deftest defclass.error.14
  - [ ] (deftest defclass.error.15
  - [ ] (deftest defclass.error.16
  - [ ] (deftest defclass.error.17
  - [ ] (deftest defclass.error.18
  - [ ] (deftest defclass.error.19
  - [ ] (deftest defclass.error.20
  - [ ] (deftest defclass.error.21
  - [ ] (deftest defclass.error.22
  - [ ] (deftest defclass.error.23
  - [ ] (deftest defclass.error.24
**** make-instance.lsp [0%]
  - [ ] (deftest make-instance.error.1
  - [ ] (deftest make-instance.error.2
  - [ ] (deftest make-instance.error.3
  - [ ] (deftest make-instance.error.4
  - [ ] (deftest make-instance.error.5
  - [ ] (deftest make-instance.error.6
  - [ ] (deftest make-instance.1
  - [ ] (deftest make-instance.2
  - [ ] (deftest make-instance.order.1
  - [ ] (deftest make-instance.order.2
  - [ ] (deftest make-instance.order.3
**** method-qualifiers.lsp [0%]
  - [ ] (deftest method-qualifiers.1
  - [ ] (deftest method-qualifiers.2
  - [ ] (deftest method-qualifiers.3
  - [ ] (deftest method-qualifiers.4
  - [ ] (deftest method-qualifiers.error.1
  - [ ] (deftest method-qualifiers.error.2
**** defmethod.lsp [0%]
  - [ ] (deftest defmethod.1
  - [ ] (deftest defmethod.2
  - [ ] (deftest defmethod.3
  - [ ] (deftest defmethod.4
  - [ ] (deftest defmethod.5
  - [ ] (deftest defmethod.6
  - [ ] (deftest defmethod.7
  - [ ] (deftest defmethod.8
  - [ ] (deftest defmethod.9
  - [ ] (deftest defmethod.10
  - [ ] (deftest defmethod.11
  - [ ] (deftest defmethod.error.1
  - [ ] (deftest defmethod.error.2
  - [ ] (deftest defmethod.error.3
  - [ ] (deftest defmethod.error.4
  - [ ] (deftest defmethod.error.5
  - [ ] (deftest defmethod.error.6
  - [ ] (deftest defmethod.error.7
  - [ ] (deftest defmethod.error.8
  - [ ] (deftest defmethod.error.9
  - [ ] (deftest defmethod.error.10
  - [ ] (deftest defmethod.error.11
  - [ ] (deftest defmethod.error.12
  - [ ] (deftest defmethod.error.13
  - [ ] (deftest defmethod.error.14
  - [ ] (deftest defmethod.error.15
**** defgeneric-method-combination-list.lsp [0%]
  - [ ] (deftest defgeneric-method-combination.list.1
  - [ ] (deftest defgeneric-method-combination.list.2
  - [ ] (deftest defgeneric-method-combination.list.3
  - [ ] (deftest defgeneric-method-combination.list.4
  - [ ] (deftest defgeneric-method-combination.list.5
  - [ ] (deftest defgeneric-method-combination.list.6
  - [ ] (deftest defgeneric-method-combination.list.7
  - [ ] (deftest defgeneric-method-combination.list.8
  - [ ] (deftest defgeneric-method-combination.list.9
  - [ ] (deftest defgeneric-method-combination.list.10
  - [ ] (deftest defgeneric-method-combination.list.11
  - [ ] (deftest defgeneric-method-combination.list.12
**** define-method-combination-long-form.lsp [0%]
  - [ ] (deftest define-method-combination-long.01.1
  - [ ] (deftest define-method-combination-long.01.2
  - [ ] (deftest define-method-combination-long.02.1
  - [ ] (deftest define-method-combination-long.02.2
  - [ ] (deftest define-method-combination-long.02.3
  - [ ] (deftest define-method-combination-long.03.1
  - [ ] (deftest define-method-combination-long.03.2
  - [ ] (deftest define-method-combination-long.03.3
  - [ ] (deftest define-method-combination-long.04.1
  - [ ] (deftest define-method-combination-long.04.2
  - [ ] (deftest define-method-combination-long.04.3
  - [ ] (deftest define-method-combination-long.05.1
  - [ ] (deftest define-method-combination-long.05.2
  - [ ] (deftest define-method-combination-long.06.1
  - [ ] (deftest define-method-combination-long.06.2
  - [ ] (deftest define-method-combination-long.06.3
  - [ ] (deftest define-method-combination-long.07.1
  - [ ] (deftest define-method-combination-long.07.2
  - [ ] (deftest define-method-combination-long.07.3
  - [ ] (deftest define-method-combination-long.08.1
  - [ ] (deftest define-method-combination-long.08.2
  - [ ] (deftest define-method-combination-long.08.3
  - [ ] (deftest define-method-combination-long.09.1
  - [ ] (deftest define-method-combination-long.09.2
  - [ ] (deftest define-method-combination-long.09.3
  - [ ] (deftest define-method-combination-long.10.1
  - [ ] (deftest define-method-combination-long.10.2
  - [ ] (deftest define-method-combination-long.10.3
**** defclass-01.lsp [0%]
  - [ ] (deftest class-01.1
  - [ ] (deftest class-01.2
  - [ ] (deftest class-01.3
  - [ ] (deftest class-02.1
  - [ ] (deftest class-02.2
  - [ ] (deftest class-02.3
  - [ ] (deftest class-03.1
  - [ ] (deftest class-03.2
  - [ ] (deftest class-03.3
  - [ ] (deftest class-04.1
  - [ ] (deftest class-04.2
  - [ ] (deftest class-04.3
  - [ ] (deftest class-04.4
  - [ ] (deftest class-04.5
  - [ ] (deftest class-05.1
  - [ ] (deftest class-06.1
  - [ ] (deftest class-06.2
  - [ ] (deftest class-07.1
  - [ ] (deftest class-07.2
  - [ ] (deftest class-07.3
  - [ ] (deftest class-07.4
  - [ ] (deftest class-07.5
  - [ ] (deftest class-07.6
  - [ ] (deftest class-07.7
  - [ ] (deftest class-07.8
  - [ ] (deftest class-07.9
  - [ ] (deftest class-07.10
  - [ ] (deftest class-07.11
  - [ ] (deftest class-07.12
  - [ ] (deftest class-08.1
  - [ ] (deftest class-09.1
  - [ ] (deftest class-09.2
  - [ ] (deftest class-09.3
  - [ ] (deftest class-09.4
  - [ ] (deftest class-10.1
  - [ ] (deftest class-10.2
  - [ ] (deftest class-11.1
  - [ ] (deftest class-11.2
  - [ ] (deftest class-12.1
  - [ ] (deftest class-12.2
  - [ ] (deftest class-13.1
  - [ ] (deftest class-14.1
  - [ ] (deftest class-15.2
  - [ ] (deftest class-15.3
  - [ ] (deftest class-15.4
  - [ ] (deftest class-15.5
  - [ ] (deftest class-15.6
  - [ ] (deftest class-15.7
  - [ ] (deftest class-16.1
  - [ ] (deftest class-16.2
  - [ ] (deftest class-16.3
  - [ ] (deftest class-17.1
  - [ ] (deftest class-17.2
  - [ ] (deftest class-17.3
  - [ ] (deftest class-18.1
  - [ ] (deftest class-18.2
  - [ ] (deftest class-18.3
  - [ ] (deftest class-18.4
  - [ ] (deftest class-18.5
  - [ ] (deftest class-19.1
  - [ ] (deftest class-19.2
  - [ ] (deftest class-19.3
  - [ ] (deftest class-20.1
  - [ ] (deftest class-20.2
  - [ ] (deftest class-20.3
  - [ ] (deftest class-21.1
  - [ ] (deftest class-21.2
  - [ ] (deftest class-21.3
  - [ ] (deftest class-21.4
  - [ ] (deftest class-21.5
  - [ ] (deftest class-22.1
  - [ ] (deftest class-23.1
  - [ ] (deftest class-23.2
  - [ ] (deftest class-23.3
  - [ ] (deftest class-23.4
  - [ ] (deftest class-24.1
  - [ ] (deftest class-24.2
  - [ ] (deftest class-24.3
  - [ ] (deftest class-24.4
  - [ ] (deftest class-25.1
  - [ ] (deftest class-25.2
  - [ ] (deftest class-25.3
  - [ ] (deftest class-25.4
  - [ ] (deftest class-25.5
  - [ ] (deftest class-25.6
  - [ ] (deftest class-26.1
  - [ ] (deftest class-27.1
  - [ ] (deftest class-27.2
  - [ ] (deftest class-27.3
  - [ ] (deftest class-28.1
  - [ ] (deftest class-28.2
  - [ ] (deftest class-28.3
**** call-next-method.lsp [0%]
  - [ ] (deftest call-next-method.1
  - [ ] (deftest call-next-method.2
  - [ ] (deftest call-next-method.3
  - [ ] (deftest call-next-method.4
  - [ ] (deftest call-next-method.5
  - [ ] (deftest call-next-method.6
  - [ ] (deftest call-next-method.7
  - [ ] (deftest call-next-method.8
  - [ ] (deftest call-next-method.9
  - [ ] (deftest call-next-method.10
  - [ ] (deftest call-next-method.11
  - [ ] (deftest call-next-method.error.1
  - [ ] (deftest call-next-method.error.2
**** reinitialize-instance.lsp [0%]
  - [ ] (deftest reinitialize-instance.1
  - [ ] (deftest reinitialize-instance.2
  - [ ] (deftest reinitialize-instance.3
  - [ ] (deftest reinitialize-instance.4
  - [ ] (deftest reinitialize-instance.5
  - [ ] (deftest reinitialize-instance.6
  - [ ] (deftest reinitialize-instance.7
  - [ ] (deftest reinitialize-instance.8
  - [ ] (deftest reinitialize-instance.9
  - [ ] (deftest reinitialize-instance.10
  - [ ] (deftest reinitialize-instance.order.1
  - [ ] (deftest reinitialize-instance.error.1
  - [ ] (deftest reinitialize-instance.error.2
**** class-of.lsp [0%]
  - [ ] (deftest class-of.error.1
  - [ ] (deftest class-of.error.2
**** compute-applicable-methods.lsp [0%]
  - [ ] (deftest compute-applicable-methods.1
  - [ ] (deftest compute-applicable-methods.2
  - [ ] (deftest compute-applicable-methods.3
  - [ ] (deftest compute-applicable-methods.4
  - [ ] (deftest compute-applicable-methods.5
  - [ ] (deftest compute-applicable-methods.6
  - [ ] (deftest compute-applicable-methods.7
  - [ ] (deftest compute-applicable-methods.error.1
  - [ ] (deftest compute-applicable-methods.error.2
  - [ ] (deftest compute-applicable-methods.error.3
**** ensure-generic-function.lsp [0%]
  - [ ] (deftest ensure-generic-function.1
  - [ ] (deftest ensure-generic-function.2
  - [ ] (deftest ensure-generic-function.3
  - [ ] (deftest ensure-generic-function.4
  - [ ] (deftest ensure-generic-function.5
  - [ ] (deftest ensure-generic-function.6
  - [ ] (deftest ensure-generic-function.7
  - [ ] (deftest ensure-generic-function.8
  - [ ] (deftest ensure-generic-function.9
  - [ ] (deftest ensure-generic-function.10
  - [ ] (deftest ensure-generic-function.11
  - [ ] (deftest ensure-generic-function.12
  - [ ] (deftest ensure-generic-function.13
  - [ ] (deftest ensure-generic-function.14
  - [ ] (deftest ensure-generic-function.error.1
  - [ ] (deftest ensure-generic-function.error.2
**** slot-exists-p.lsp [0%]
  - [ ] (deftest slot-exists-p.1
  - [ ] (deftest slot-exists-p.2
  - [ ] (deftest slot-exists-p.3
  - [ ] (deftest slot-exists-p.4
  - [ ] (deftest slot-exists-p.5
  - [ ] (deftest slot-exists-p.6
  - [ ] (deftest slot-exists-p.7
  - [ ] (deftest slot-exists-p.8
  - [ ] (deftest slot-exists-p.9
  - [ ] (deftest slot-exists-p.10
  - [ ] (deftest slot-exists-p.11
  - [ ] (deftest slot-exists-p.12
  - [ ] (deftest slot-exists-p.13
  - [ ] (deftest slot-exists-p.14
  - [ ] (deftest slot-exists-p.15
  - [ ] (deftest slot-exists-p.16
  - [ ] (deftest slot-exists-p.order.1
  - [ ] (deftest slot-exists-p.order.2
  - [ ] (deftest slot-exists-p.order.3
  - [ ] (deftest slot-exists-p.error.1
  - [ ] (deftest slot-exists-p.error.2
  - [ ] (deftest slot-exists-p.error.3
  - [ ] (deftest slot-exists-p.error.4
**** allocate-instance.lsp [0%]
  - [ ] (deftest allocate-instance.1
  - [ ] (deftest allocate-instance.2
  - [ ] (deftest allocate-instance.3
  - [ ] (deftest allocate-instance.4
  - [ ] (deftest allocate-instance.5
  - [ ] (deftest allocate-instance.order.1
  - [ ] (deftest allocate-instance.error.1
  - [ ] (deftest allocate-instance.error.2
  - [ ] (deftest allocate-instance.error.3
**** slot-makunbound.lsp [0%]
  - [ ] (deftest slot-makunbound.1
  - [ ] (deftest slot-makunbound.2
  - [ ] (deftest slot-makunbound.order.1
  - [ ] (deftest slot-makunbound.order.2
  - [ ] (deftest slot-makunbound.error.1
  - [ ] (deftest slot-makunbound.error.2
  - [ ] (deftest slot-makunbound.error.3
  - [ ] (deftest slot-makunbound.error.4
**** unbound-slot.lsp [0%]
  - [ ] (deftest unbound-slot.1
  - [ ] (deftest unbound-slot.2
**** update-instance-for-different-class.lsp [0%]
  - [ ] (deftest update-instance-for-different-class.1
  - [ ] (deftest update-instance-for-different-class.2
  - [ ] (deftest update-instance-for-different-class.3
  - [ ] (deftest update-instance-for-different-class.4
  - [ ] (deftest update-instance-for-different-class.5
  - [ ] (deftest update-instance-for-different-class.6
  - [ ] (deftest update-instance-for-different-class.7
  - [ ] (deftest update-instance-for-different-class.8
**** slot-boundp.lsp [0%]
  - [ ] (deftest slot-boundp.1
  - [ ] (deftest slot-boundp.2
  - [ ] (deftest slot-boundp.3
  - [ ] (deftest slot-boundp.4
  - [ ] (deftest slot-boundp.5
  - [ ] (deftest slot-boundp.order.1
  - [ ] (deftest slot-boundp.error.1
  - [ ] (deftest slot-boundp.error.2
  - [ ] (deftest slot-boundp.error.3
  - [ ] (deftest slot-boundp.error.4
  - [ ] (deftest slot-boundp.error.5
*** eval-and-compile [0%]
**** macroexpand.lsp [25%]
  - [X] (deftest macroexpand.error.1
  - [X] (deftest macroexpand.error.2
  - [ ] (deftest macroexpand.1
  - [ ] (deftest macroexpand.2
  - [ ] (deftest macroexpand.3
  - [ ] (deftest macroexpand.4
  - [ ] (deftest macroexpand.5
  - [ ] (deftest macroexpand.6
**** optimize.lsp [87%]
  - [X] (deftest optimize.1
  - [X] (deftest optimize.2
  - [X] (deftest optimize.3
  - [X] (deftest optimize.4
  - [X] (deftest optimize.5
  - [X] (deftest optimize.6
  - [X] (deftest optimize.7
  - [ ] (deftest optimize.8
**** lambda.lsp [57%]
  - [X] (deftest lambda.1
  - [X] (deftest lambda.2
  - [X] (deftest lambda.3
  - [X] (deftest lambda.4
  - [X] (deftest lambda.5
  - [X] (deftest lambda.6
  - [X] (deftest lambda.7
  - [X] (deftest lambda.8
  - [X] (deftest lambda.9
  - [X] (deftest lambda.10
  - [X] (deftest lambda.11
  - [X] (deftest lambda.12
  - [ ] (deftest lambda.13
  - [ ] (deftest lambda.14
  - [X] (deftest lambda.15
  - [X] (deftest lambda.16
  - [X] (deftest lambda.17
  - [X] (deftest lambda.18
  - [X] (deftest lambda.19
  - [ ] (deftest lambda.20
  - [ ] (deftest lambda.21
  - [ ] (deftest lambda.22
  - [X] (deftest lambda.23
  - [X] (deftest lambda.24
  - [X] (deftest lambda.25
  - [X] (deftest lambda.26
  - [ ] (deftest lambda.27
  - [X] (deftest lambda.28
  - [ ] (deftest lambda.29
  - [ ] (deftest lambda.30
  - [X] (deftest lambda.31
  - [ ] (deftest lambda.32
  - [ ] (deftest lambda.33
  - [ ] (deftest lambda.34
  - [ ] (deftest lambda.35
  - [ ] (deftest lambda.36
  - [X] (deftest lambda.37
  - [X] (deftest lambda.38
  - [ ] (deftest lambda.39
  - [ ] (deftest lambda.40
  - [ ] (deftest lambda.41
  - [X] (deftest lambda.42
  - [X] (deftest lambda.43
  - [ ] (deftest lambda.44
  - [ ] (deftest lambda.45
  - [X] (deftest lambda.46
  - [ ] (deftest lambda.47
  - [ ] (deftest lambda.48
  - [X] (deftest lambda.49
  - [ ] (deftest lambda.50
  - [X] (deftest lambda.51
  - [ ] (deftest lambda.52
  - [ ] (deftest lambda.53
  - [ ] (deftest lambda.54
  - [ ] (deftest lambda.55
  - [ ] (deftest lambda.56
  - [X] (deftest lambda.57
  - [X] (deftest lambda.58
  - [X] (deftest lambda.59
  - [X] (deftest lambda.60
  - [X] (deftest lambda.61
  - [X] (deftest lambda.62
  - [ ] (deftest lambda.63
  - [ ] (deftest lambda.64
  - [X] (deftest lambda.macro.1
  - [ ] (deftest lambda.macro.2
  - [X] (deftest lambda.error.1
  - [X] (deftest lambda.error.2
  - [X] (deftest lambda.error.3
**** eval-when.lsp [88%]
  - [ ] (deftest eval-when.1
  - [X] (deftest eval-when.2
  - [X] (deftest eval-when.3
  - [X] (deftest eval-when.4
  - [X] (deftest eval-when.5
  - [X] (deftest eval-when.6
  - [X] (deftest eval-when.7
  - [X] (deftest eval-when.8
  - [X] (deftest eval-when.9
  - [X] (deftest eval-when.10
  - [X] (deftest eval-when.11
  - [X] (deftest eval-when.12
  - [X] (deftest eval-when.13
  - [X] (deftest eval-when.14
  - [X] (deftest eval-when.15
  - [X] (deftest eval-when.16
  - [X] (deftest eval-when.17
  - [ ] (deftest eval-when.18
**** special.lsp [66%]
  - [X] (deftest special.1
  - [X] (deftest special.2
  - [ ] (deftest special.3
**** locally.lsp [87%]
  - [X] (deftest locally.1
  - [X] (deftest locally.2
  - [X] (deftest locally.3
  - [X] (deftest locally.4
  - [X] (deftest locally.5
  - [X] (deftest locally.6
  - [X] (deftest locally.7
  - [ ] (deftest locally.8
**** eval-and-compile.lsp [100%]
  - [X] (deftest eval-and-compile-fns
  - [X] (deftest eval-and-compile-macros
**** symbol-macrolet.lsp [25%]
  - [ ] (deftest symbol-macrolet.1
  - [ ] (deftest symbol-macrolet.2
  - [ ] (deftest symbol-macrolet.3
  - [ ] (deftest symbol-macrolet.4
  - [ ] (deftest symbol-macrolet.5
  - [ ] (deftest symbol-macrolet.6
  - [ ] (deftest symbol-macrolet.7
  - [ ] (deftest symbol-macrolet.8
  - [X] (deftest symbol-macrolet.error.1
  - [X] (deftest symbol-macrolet.error.2
  - [X] (deftest symbol-macrolet.error.3
  - [ ] (deftest symbol-macrolet.9
**** defmacro.lsp [36%]
  - [X] (deftest defmacro.error.1
  - [X] (deftest defmacro.error.2
  - [X] (deftest defmacro.error.3
  - [X] (deftest defmacro.1
  - [X] (deftest defmacro.2
  - [ ] (deftest defmacro.3
  - [ ] (deftest defmacro.4
  - [X] (deftest defmacro.5
  - [ ] (deftest defmacro.6
  - [ ] (deftest defmacro.7
  - [X] (deftest defmacro.8
  - [X] (deftest defmacro.9
  - [ ] (deftest defmacro.10
  - [ ] (deftest defmacro.11
  - [ ] (deftest defmacro.12
  - [ ] (deftest defmacro.13
  - [X] (deftest defmacro.14
  - [ ] (deftest defmacro.15
  - [ ] (deftest defmacro.16
  - [ ] (deftest defmacro.17
  - [ ] (deftest defmacro.17a
  - [ ] (deftest defmacro.18
  - [ ] (deftest defmacro.19
  - [ ] (deftest defmacro.20
  - [ ] (deftest defmacro.21
**** macroexpand-1.lsp [25%]
  - [X] (deftest macroexpand-1.error.1
  - [X] (deftest macroexpand-1.error.2
  - [ ] (deftest macroexpand-1.1
  - [ ] (deftest macroexpand-1.2
  - [ ] (deftest macroexpand-1.3
  - [ ] (deftest macroexpand-1.4
  - [ ] (deftest macroexpand-1.5
  - [ ] (deftest macroexpand-1.6
**** ignore.lsp [100%]
  - [X] (deftest ignore.1
  - [X] (deftest ignore.2
  - [X] (deftest ignore.3
  - [X] (deftest ignore.4
  - [X] (deftest ignore.5
  - [X] (deftest ignore.6
**** ignorable.lsp [75%]
  - [X] (deftest ignorable.1
  - [X] (deftest ignorable.2
  - [X] (deftest ignorable.3
  - [X] (deftest ignorable.4
  - [X] (deftest ignorable.5
  - [ ] (deftest ignorable.6
  - [X] (deftest ignorable.7
  - [ ] (deftest ignorable.8
**** macro-function.lsp [17%]
  - [ ] (deftest macro-function.1
  - [ ] (deftest macro-function.2
  - [ ] (deftest macro-function.3
  - [X] (deftest macro-function.4
  - [ ] (deftest macro-function.5
  - [ ] (deftest macro-function.6
  - [ ] (deftest macro-function.7
  - [ ] (deftest macro-function.8
  - [ ] (deftest macro-function.9
  - [ ] (deftest macro-function.10
  - [ ] (deftest macro-function.11
  - [ ] (deftest macro-function.12
  - [ ] (deftest macro-function.13
  - [ ] (deftest macro-function.14
  - [ ] (deftest macro-function.15
  - [X] (deftest macro-function.error.1
  - [X] (deftest macro-function.error.2
**** the.lsp [0%]
  - [ ] (deftest the.1
  - [ ] (deftest the.2
  - [ ] (deftest the.3
  - [ ] (deftest the.4
  - [ ] (deftest the.5
  - [ ] (deftest the.6
  - [ ] (deftest the.7
  - [ ] (deftest the.8
  - [ ] (deftest the.9
  - [ ] (deftest the.10
  - [ ] (deftest the.11
  - [ ] (deftest the.12
  - [ ] (deftest the.13
  - [ ] (deftest the.14
  - [ ] (deftest the.15
  - [ ] (deftest the.16
  - [ ] (deftest the.17
  - [ ] (deftest the.18
  - [ ] (deftest the.19
  - [ ] (deftest the.20
  - [ ] (deftest the.21
  - [ ] (deftest the.22
  - [ ] (deftest the.23
  - [ ] (deftest the.24
  - [ ] (deftest the.25
**** define-compiler-macro.lsp [27%]
  - [X] (deftest define-compiler-macro.error.1
  - [X] (deftest define-compiler-macro.error.2
  - [X] (deftest define-compiler-macro.error.3
  - [ ] (deftest define-compiler-macro.1
  - [ ] (deftest define-compiler-macro.2
  - [ ] (deftest define-compiler-macro.3
  - [ ] (deftest define-compiler-macro.4
  - [ ] (deftest define-compiler-macro.5
  - [ ] (deftest define-compiler-macro.6
  - [ ] (deftest define-compiler-macro.7
  - [ ] (deftest define-compiler-macro.8
**** declaration.lsp [27%]
  - [X] (deftest declaration.1
  - [X] (deftest declaration.2
  - [X] (deftest declaration.3
  - [ ] (deftest declaration.4
  - [ ] (deftest declaration.5
  - [ ] (deftest declaration.6
  - [ ] (deftest declaration.7
  - [ ] (deftest declaration.8
  - [ ] (deftest declaration.9
  - [ ] (deftest declaration.10
  - [ ] (deftest declaration.11
**** declaim.lsp [90%]
  - [X] (deftest declaim.1
  - [X] (deftest declaim.2
  - [X] (deftest declaim.3
  - [X] (deftest declaim.4
  - [X] (deftest declaim.5
  - [X] (deftest declaim.6
  - [X] (deftest declaim.7
  - [X] (deftest declaim.8
  - [X] (deftest declaim.9
  - [X] (deftest declaim.10
  - [ ] (deftest declaim.11
**** compile.lsp [18%]
  - [ ] (deftest compile.1
  - [ ] (deftest compile.2
  - [ ] (deftest compile.3
  - [ ] (deftest compile.4
  - [ ] (deftest compile.5
  - [ ] (deftest compile.6
  - [ ] (deftest compile.7
  - [ ] (deftest compile.8
  - [ ] (deftest compile.9
  - [X] (deftest compile.error.1
  - [X] (deftest compile.error.2
**** type.lsp [50%]
  - [X] (deftest type.1
  - [X] (deftest type.2
  - [ ] (deftest type.3
  - [ ] (deftest type.4
  - [ ] (deftest type.5
  - [X] (deftest type.6
**** define-symbol-macro.lsp [100%]
  - [X] (deftest define-symbol-macro.error.1
  - [X] (deftest define-symbol-macro.error.2
  - [X] (deftest define-symbol-macro.error.3
**** dynamic-extent.lsp [81%]
  - [X] (deftest dynamic-extent.1
  - [X] (deftest dynamic-extent.2
  - [X] (deftest dynamic-extent.3
  - [X] (deftest dynamic-extent.4
  - [X] (deftest dynamic-extent.5
  - [X] (deftest dynamic-extent.6
  - [X] (deftest dynamic-extent.7
  - [X] (deftest dynamic-extent.8
  - [X] (deftest dynamic-extent.9
  - [X] (deftest dynamic-extent.10
  - [X] (deftest dynamic-extent.11
  - [ ] (deftest dynamic-extent.12
  - [ ] (deftest dynamic-extent.13
  - [ ] (deftest dynamic-extent.14
  - [X] (deftest dynamic-extent.15
  - [X] (deftest dynamic-extent.16
**** constantp.lsp [66%]
  - [X] (deftest constantp.error.1
  - [X] (deftest constantp.error.2
  - [ ] (deftest constantp.1
  - [X] (deftest constantp.2
  - [X] (deftest constantp.3
  - [X] (deftest constantp.4
  - [X] (deftest constantp.5
  - [ ] (deftest constantp.6
  - [X] (deftest constantp.7
  - [ ] (deftest constantp.8
  - [X] (deftest constantp.9
  - [X] (deftest constantp.10
  - [ ] (deftest constantp.11
  - [X] (deftest constantp.order.1
  - [ ] (deftest constantp.order.2
**** compiler-macros.lsp [0%]
**** eval.lsp [90%]
  - [X] (deftest eval.1
  - [ ] (deftest eval.2
  - [X] (deftest eval.3
  - [X] (deftest eval.4
  - [X] (deftest eval.5
  - [X] (deftest eval.6
  - [X] (deftest eval.order.1
  - [X] (deftest eval.error.1
  - [X] (deftest eval.error.2
  - [X] (deftest eval.error.3
  - [X] (deftest eval.error.4
**** proclaim.lsp [100%]
  - [X] (deftest proclaim.1
  - [X] (deftest proclaim.2
  - [X] (deftest proclaim.3
  - [X] (deftest proclaim.error.1
  - [X] (deftest proclaim.error.2
  - [X] (deftest proclaim.error.3
  - [X] (deftest proclaim.error.4
  - [X] (deftest proclaim.error.5
  - [X] (deftest proclaim.error.6
  - [X] (deftest proclaim.error.7
  - [X] (deftest proclaim.error.8
  - [X] (deftest proclaim.error.9
  - [X] (deftest proclaim.error.10
  - [X] (deftest proclaim.error.11
*** numbers [0%]
**** lognot.lsp [0%]
  - [ ] (deftest lognot.error.1
  - [ ] (deftest lognot.error.2
  - [ ] (deftest lognot.error.3
  - [ ] (deftest lognot.1
  - [ ] (deftest lognot.2
  - [ ] (deftest lognot.3
  - [ ] (deftest lognot.4
**** logorc2.lsp [0%]
  - [ ] (deftest logorc2.error.1
  - [ ] (deftest logorc2.error.2
  - [ ] (deftest logorc2.error.3
  - [ ] (deftest logorc2.error.4
  - [ ] (deftest logorc2.error.5
  - [ ] (deftest logorc2.1
  - [ ] (deftest logorc2.2
  - [ ] (deftest logorc2.2a
  - [ ] (deftest logorc2.3
  - [ ] (deftest logorc2.4
  - [ ] (deftest logorc2.5
  - [ ] (deftest logorc2.6
  - [ ] (deftest logorc2.order.1
**** floor.lsp [0%]
  - [ ] (deftest floor.error.1
  - [ ] (deftest floor.error.2
  - [ ] (deftest floor.1
  - [ ] (deftest floor.2
  - [ ] (deftest floor.3
  - [ ] (deftest floor.4
  - [ ] (deftest floor.5
  - [ ] (deftest floor.6
  - [ ] (deftest floor.7
  - [ ] (deftest floor.8
  - [ ] (deftest floor.9
  - [ ] (deftest floor.10
  - [ ] (deftest floor.11
  - [ ] (deftest floor.12
  - [ ] (deftest floor.13
  - [ ] (deftest floor.14
  - [ ] (deftest floor.15
  - [ ] (deftest floor.16
  - [ ] (deftest floor.17
  - [ ] (deftest floor.18
  - [ ] (deftest floor.19
**** tanh.lsp [0%]
  - [ ] (deftest tanh.1
  - [ ] (deftest tanh.2
  - [ ] (deftest tanh.3
  - [ ] (deftest tanh.4
  - [ ] (deftest tanh.5
  - [ ] (deftest tanh.6
  - [ ] (deftest tanh.error.1
  - [ ] (deftest tanh.error.2
  - [ ] (deftest tanh.error.3
**** logand.lsp [0%]
  - [ ] (deftest logand.error.1
  - [ ] (deftest logand.error.2
  - [ ] (deftest logand.error.3
  - [ ] (deftest logand.1
  - [ ] (deftest logand.2
  - [ ] (deftest logand.3
  - [ ] (deftest logand.4
  - [ ] (deftest logand.5
  - [ ] (deftest logand.6
  - [ ] (deftest logand.7
  - [ ] (deftest logand.8
  - [ ] (deftest logand.9
  - [ ] (deftest logand.order.1
  - [ ] (deftest logand.order.2
**** lognor.lsp [0%]
  - [ ] (deftest lognor.error.1
  - [ ] (deftest lognor.error.2
  - [ ] (deftest lognor.error.3
  - [ ] (deftest lognor.error.4
  - [ ] (deftest lognor.error.5
  - [ ] (deftest lognor.1
  - [ ] (deftest lognor.2
  - [ ] (deftest lognor.3
  - [ ] (deftest lognor.4
  - [ ] (deftest lognor.5
  - [ ] (deftest lognor.6
  - [ ] (deftest lognor.order.1
**** sqrt.lsp [0%]
  - [ ] (deftest sqrt.error.1
  - [ ] (deftest sqrt.error.2
  - [ ] (deftest sqrt.error.3
  - [ ] (deftest sqrt.1
  - [ ] (deftest sqrt.2
  - [ ] (deftest sqrt.3
  - [ ] (deftest sqrt.4
  - [ ] (deftest sqrt.5
  - [ ] (deftest sqrt.7
  - [ ] (deftest sqrt.8
  - [ ] (deftest sqrt.9
  - [ ] (deftest sqrt.10
  - [ ] (deftest sqrt.11
  - [ ] (deftest sqrt.12
  - [ ] (deftest sqrt.13
  - [ ] (deftest sqrt.14
  - [ ] (deftest sqrt.15
  - [ ] (deftest sqrt.16
  - [ ] (deftest sqrt.17
  - [ ] (deftest sqrt.18
  - [ ] (deftest sqrt.19
**** numberp.lsp [0%]
  - [ ] (deftest numberp.error.1
  - [ ] (deftest numberp.error.2
  - [ ] (deftest numberp.error.3
  - [ ] (deftest numberp.1
**** acos.lsp [0%]
  - [ ] (deftest acos.1
  - [ ] (deftest acos.2
  - [ ] (deftest acos.3
  - [ ] (deftest acos.4
  - [ ] (deftest acos.5
  - [ ] (deftest acos.6
  - [ ] (deftest acos.7
  - [ ] (deftest acos.8
  - [ ] (deftest acos.9
  - [ ] (deftest acos.error.1
  - [ ] (deftest acos.error.2
  - [ ] (deftest acos.error.3
**** acosh.lsp [0%]
  - [ ] (deftest acosh.1
  - [ ] (deftest acosh.2
  - [ ] (deftest acosh.3
  - [ ] (deftest acosh.4
  - [ ] (deftest acosh.5
  - [ ] (deftest acosh.6
  - [ ] (deftest acosh.7
  - [ ] (deftest acosh.error.1
  - [ ] (deftest acosh.error.2
  - [ ] (deftest acosh.error.3
**** imagpart.lsp [0%]
  - [ ] (deftest imagpart.error.1
  - [ ] (deftest imagpart.error.2
  - [ ] (deftest imagpart.error.3
  - [ ] (deftest imagpart.1
  - [ ] (deftest imagpart.2
  - [ ] (deftest imagpart.3
  - [ ] (deftest imagpart.4
**** cis.lsp [0%]
  - [ ] (deftest cis.error.1
  - [ ] (deftest cis.error.2
  - [ ] (deftest cis.1
  - [ ] (deftest cis.2
  - [ ] (deftest cis.3
  - [ ] (deftest cis.4
**** asinh.lsp [0%]
  - [ ] (deftest asinh.1
  - [ ] (deftest asinh.2
  - [ ] (deftest asinh.3
  - [ ] (deftest asinh.4
  - [ ] (deftest asinh.5
  - [ ] (deftest asinh.6
  - [ ] (deftest asinh.7
  - [ ] (deftest asinh.error.1
  - [ ] (deftest asinh.error.2
  - [ ] (deftest asinh.error.3
**** rational.lsp [0%]
  - [ ] (deftest rational.error.1
  - [ ] (deftest rational.error.2
  - [ ] (deftest rational.error.3
  - [ ] (deftest rational.error.4
  - [ ] (deftest rational.1
  - [ ] (deftest rational.2
  - [ ] (deftest rational.3
**** plus.lsp [0%]
  - [ ] (deftest plus.1
  - [ ] (deftest plus.2
  - [ ] (deftest plus.3
  - [ ] (deftest plus.4
  - [ ] (deftest plus.5
  - [ ] (deftest plus.6
  - [ ] (deftest plus.7
  - [ ] (deftest plus.8
  - [ ] (deftest plus.9
  - [ ] (deftest plus.10
  - [ ] (deftest plus.11
  - [ ] (deftest plus.12
  - [ ] (deftest plus.13
  - [ ] (deftest plus.14
  - [ ] (deftest plus.15
  - [ ] (deftest plus.16
  - [ ] (deftest plus.17
  - [ ] (deftest plus.18
  - [ ] (deftest plus.19
  - [ ] (deftest plus.20
  - [ ] (deftest plus.21
  - [ ] (deftest plus.22
  - [ ] (deftest plus.23
  - [ ] (deftest plus.24
  - [ ] (deftest plus.25
  - [ ] (deftest plus.26
  - [ ] (deftest plus.27
  - [ ] (deftest plus.28
  - [ ] (deftest plus.order.1
  - [ ] (deftest plus.order.2
  - [ ] (deftest plus.reassociation.1
  - [ ] (deftest plus.reassociation.2
  - [ ] (deftest plus.reassociation.3
  - [ ] (deftest plus.reassociation.4
**** logandc2.lsp [0%]
  - [ ] (deftest logandc2.error.1
  - [ ] (deftest logandc2.error.2
  - [ ] (deftest logandc2.error.3
  - [ ] (deftest logandc2.error.4
  - [ ] (deftest logandc2.error.5
  - [ ] (deftest logandc2.1
  - [ ] (deftest logandc2.2
  - [ ] (deftest logandc2.3
  - [ ] (deftest logandc2.4
  - [ ] (deftest logandc2.5
  - [ ] (deftest logandc2.6
  - [ ] (deftest logandc2.order.1
**** ceiling.lsp [0%]
  - [ ] (deftest ceiling.error.1
  - [ ] (deftest ceiling.error.2
  - [ ] (deftest ceiling.1
  - [ ] (deftest ceiling.2
  - [ ] (deftest ceiling.3
  - [ ] (deftest ceiling.4
  - [ ] (deftest ceiling.5
  - [ ] (deftest ceiling.6
  - [ ] (deftest ceiling.7
  - [ ] (deftest ceiling.8
  - [ ] (deftest ceiling.9
  - [ ] (deftest ceiling.10
  - [ ] (deftest ceiling.11
  - [ ] (deftest ceiling.12
  - [ ] (deftest ceiling.13
  - [ ] (deftest ceiling.14
  - [ ] (deftest ceiling.15
  - [ ] (deftest ceiling.16
  - [ ] (deftest ceiling.17
  - [ ] (deftest ceiling.18
  - [ ] (deftest ceiling.19
**** minusp.lsp [0%]
  - [ ] (deftest minusp.error.1
  - [ ] (deftest minusp.error.2
  - [ ] (deftest minusp.error.3
  - [ ] (deftest minusp.error.4
  - [ ] (deftest minusp.1
  - [ ] (deftest minusp.2
  - [ ] (deftest minusp.3
  - [ ] (deftest minusp.4
  - [ ] (deftest minusp.5
  - [ ] (deftest minusp.6
**** oddp.lsp [0%]
  - [ ] (deftest oddp.error.1
  - [ ] (deftest oddp.error.2
  - [ ] (deftest oddp.error.3
  - [ ] (deftest oddp.1
  - [ ] (deftest oddp.3
  - [ ] (deftest oddp.4
  - [ ] (deftest oddp.5
  - [ ] (deftest oddp.6
  - [ ] (deftest oddp.7
  - [ ] (deftest oddp.8
**** ftruncate.lsp [0%]
  - [ ] (deftest ftruncate.error.1
  - [ ] (deftest ftruncate.error.2
  - [ ] (deftest ftruncate.1
  - [ ] (deftest ftruncate.10
  - [ ] (deftest ftruncate.11
  - [ ] (deftest ftruncate.12
  - [ ] (deftest ftruncate.13
  - [ ] (deftest ftruncate.14
  - [ ] (deftest ftruncate.15
  - [ ] (deftest ftruncate.16
  - [ ] (deftest ftruncate.17
  - [ ] (deftest ftruncate.18
  - [ ] (deftest ftruncate.19
**** ffloor.lsp [0%]
  - [ ] (deftest ffloor.error.1
  - [ ] (deftest ffloor.error.2
  - [ ] (deftest ffloor.1
  - [ ] (deftest ffloor.10
  - [ ] (deftest ffloor.11
  - [ ] (deftest ffloor.12
  - [ ] (deftest ffloor.13
  - [ ] (deftest ffloor.14
  - [ ] (deftest ffloor.15
  - [ ] (deftest ffloor.16
  - [ ] (deftest ffloor.17
  - [ ] (deftest ffloor.18
  - [ ] (deftest ffloor.19
**** sinh.lsp [0%]
  - [ ] (deftest sinh.1
  - [ ] (deftest sinh.2
  - [ ] (deftest sinh.3
  - [ ] (deftest sinh.4
  - [ ] (deftest sinh.5
  - [ ] (deftest sinh.6
  - [ ] (deftest sinh.error.1
  - [ ] (deftest sinh.error.2
  - [ ] (deftest sinh.error.3
**** rationalize.lsp [0%]
  - [ ] (deftest rationalize.error.1
  - [ ] (deftest rationalize.error.2
  - [ ] (deftest rationalize.error.3
  - [ ] (deftest rationalize.error.4
  - [ ] (deftest rationalize.1
  - [ ] (deftest rationalize.2
  - [ ] (deftest rationalize.3
**** abs.lsp [0%]
  - [ ] (deftest abs.error.1
  - [ ] (deftest abs.error.2
  - [ ] (deftest abs.error.3
  - [ ] (deftest abs.1
  - [ ] (deftest abs.2
  - [ ] (deftest abs.3
  - [ ] (deftest abs.4
  - [ ] (deftest abs.5
  - [ ] (deftest abs.6
  - [ ] (deftest abs.7
  - [ ] (deftest abs.8
  - [ ] (deftest abs.9
  - [ ] (deftest abs.14
  - [ ] (deftest abs.15
  - [ ] (deftest abs.16
  - [ ] (deftest abs.17
  - [ ] (deftest abs.18
  - [ ] (deftest abs.19
  - [ ] (deftest abs.20
  - [ ] (deftest abs.21
  - [ ] (deftest abs.22
**** logxor.lsp [0%]
  - [ ] (deftest logxor.error.1
  - [ ] (deftest logxor.error.2
  - [ ] (deftest logxor.1
  - [ ] (deftest logxor.2
  - [ ] (deftest logxor.3
  - [ ] (deftest logxor.4
  - [ ] (deftest logxor.5
  - [ ] (deftest logxor.6
  - [ ] (deftest logxor.7
  - [ ] (deftest logxor.8
  - [ ] (deftest logxor.order.1
  - [ ] (deftest logxor.order.2
**** cosh.lsp [0%]
  - [ ] (deftest cosh.1
  - [ ] (deftest cosh.2
  - [ ] (deftest cosh.3
  - [ ] (deftest cosh.4
  - [ ] (deftest cosh.5
  - [ ] (deftest cosh.6
  - [ ] (deftest cosh.error.1
  - [ ] (deftest cosh.error.2
  - [ ] (deftest cosh.error.3
**** ldb.lsp [0%]
  - [ ] (deftest ldb.error.1
  - [ ] (deftest ldb.error.2
  - [ ] (deftest ldb.error.3
  - [ ] (deftest ldb.1
  - [ ] (deftest ldb.2
  - [ ] (deftest ldb.3
  - [ ] (deftest ldb.order.1
  - [ ] (deftest ldb.place.1
  - [ ] (deftest ldb.place.2
  - [ ] (deftest ldb.place.order.1
**** integerp.lsp [0%]
  - [ ] (deftest integerp.error.1
  - [ ] (deftest integerp.error.2
  - [ ] (deftest integerp.error.3
  - [ ] (deftest integerp.1
  - [ ] (deftest integerp.2
**** numerator-denominator.lsp [0%]
  - [ ] (deftest numerator.error.1
  - [ ] (deftest numerator.error.2
  - [ ] (deftest denominator.error.1
  - [ ] (deftest denominator.error.2
  - [ ] (deftest numerator-denominator.1
  - [ ] (deftest numerator-denominator.2
  - [ ] (deftest numerator-denominator.3
  - [ ] (deftest numerator-denominator.4
  - [ ] (deftest numerator-denominator.5
**** log.lsp [0%]
  - [ ] (deftest log.1
  - [ ] (deftest log.2
  - [ ] (deftest log.3
  - [ ] (deftest log.4
  - [ ] (deftest log.5
  - [ ] (deftest log.6
  - [ ] (deftest log.7
  - [ ] (deftest log.8
  - [ ] (deftest log.error.1
  - [ ] (deftest log.error.2
**** lognand.lsp [0%]
  - [ ] (deftest lognand.error.1
  - [ ] (deftest lognand.error.2
  - [ ] (deftest lognand.error.3
  - [ ] (deftest lognand.error.4
  - [ ] (deftest lognand.error.5
  - [ ] (deftest lognand.1
  - [ ] (deftest lognand.2
  - [ ] (deftest lognand.3
  - [ ] (deftest lognand.4
  - [ ] (deftest lognand.5
  - [ ] (deftest lognand.6
  - [ ] (deftest lognand.order.1
**** exp.lsp [0%]
  - [ ] (deftest exp.error.1
  - [ ] (deftest exp.error.2
  - [ ] (deftest exp.error.3
  - [ ] (deftest exp.1
  - [ ] (deftest exp.2
  - [ ] (deftest exp.3
  - [ ] (deftest exp.error.4
  - [ ] (deftest exp.error.5
  - [ ] (deftest exp.error.6
  - [ ] (deftest exp.error.7
  - [ ] (deftest exp.error.8
  - [ ] (deftest exp.error.9
  - [ ] (deftest exp.error.10
  - [ ] (deftest exp.error.11
**** complex.lsp [0%]
  - [ ] (deftest complex.error.1
  - [ ] (deftest complex.error.2
  - [ ] (deftest complex.1
  - [ ] (deftest complex.2
  - [ ] (deftest complex.3
  - [ ] (deftest complex.4
  - [ ] (deftest complex.5
**** upgraded-complex-part-type.lsp [0%]
  - [ ] (def-ucpt-test upgraded-complex-part-type.1
  - [ ] (def-ucpt-test upgraded-complex-part-type.2
  - [ ] (def-ucpt-test upgraded-complex-part-type.3
  - [ ] (def-ucpt-test upgraded-complex-part-type.4
  - [ ] (def-ucpt-test upgraded-complex-part-type.5
  - [ ] (def-ucpt-test upgraded-complex-part-type.6
  - [ ] (deftest upgraded-complex-part-type.7
  - [ ] (deftest upgraded-complex-part-type.8
  - [ ] (deftest upgraded-complex-part-type.9
  - [ ] (deftest upgraded-complex-part-type.error.1
  - [ ] (deftest upgraded-complex-part-type.error.2
**** expt.lsp [0%]
  - [ ] (deftest expt.error.1
  - [ ] (deftest expt.error.2
  - [ ] (deftest expt.error.3
  - [ ] (deftest expt.error.4
  - [ ] (deftest expt.error.5
  - [ ] (deftest expt.error.6
  - [ ] (deftest expt.error.7
  - [ ] (deftest expt.error.8
  - [ ] (deftest expt.error.9
  - [ ] (deftest expt.error.10
  - [ ] (deftest expt.error.11
  - [ ] (deftest expt.1
  - [ ] (deftest expt.2
  - [ ] (deftest expt.3
  - [ ] (deftest expt.4
  - [ ] (deftest expt.5
  - [ ] (deftest expt.6
  - [ ] (deftest expt.7
  - [ ] (deftest expt.8
  - [ ] (deftest expt.9
  - [ ] (deftest expt.10
  - [ ] (deftest expt.11
  - [ ] (deftest expt.12
  - [ ] (deftest expt.13
  - [ ] (deftest expt.14
  - [ ] (deftest expt.15
  - [ ] (deftest expt.16
  - [ ] (deftest expt.17
  - [ ] (deftest expt.18
  - [ ] (deftest expt.19
  - [ ] (deftest expt.20
  - [ ] (deftest expt.21
  - [ ] (deftest expt.22
  - [ ] (deftest expt.23
  - [ ] (deftest expt.24
  - [ ] (deftest expt.25
  - [ ] (deftest expt.26
  - [ ] (deftest expt.27
  - [ ] (deftest expt.28
  - [ ] (deftest expt.29
  - [ ] (deftest expt.30
**** sin.lsp [0%]
  - [ ] (deftest sin.1
  - [ ] (deftest sin.2
  - [ ] (deftest sin.3
  - [ ] (deftest sin.4
  - [ ] (deftest sin.5
  - [ ] (deftest sin.6
  - [ ] (deftest sin.7
  - [ ] (deftest sin.8
  - [ ] (deftest sin.9
  - [ ] (deftest sin.10
  - [ ] (deftest sin.11
  - [ ] (deftest sin.12
  - [ ] (deftest sin.13
  - [ ] (deftest sin.14
  - [ ] (deftest sin.15
  - [ ] (deftest sin.16
  - [ ] (deftest sin.17
  - [ ] (deftest sin.18
  - [ ] (deftest sin.19
  - [ ] (deftest sin.20
  - [ ] (deftest sin.21
  - [ ] (deftest sin.22
  - [ ] (deftest sin.23
  - [ ] (deftest sin.24
  - [ ] (deftest sin.error.1
  - [ ] (deftest sin.error.2
  - [ ] (deftest sin.error.3
**** random-state-p.lsp [0%]
  - [ ] (deftest random-state-p.error.1
  - [ ] (deftest random-state-p.error.2
  - [ ] (deftest random-state-p.1
  - [ ] (deftest random-state-p.2
  - [ ] (deftest random-state-p.3
**** random.lsp [0%]
  - [ ] (deftest random.error.1
  - [ ] (deftest random.error.2
  - [ ] (deftest random.error.3
  - [ ] (deftest random.1
  - [ ] (deftest random.2
  - [ ] (deftest random.3
  - [ ] (deftest random.4
  - [ ] (deftest random.5
  - [ ] (deftest random.6
  - [ ] (deftest random.7
  - [ ] (deftest random.8
**** mask-field.lsp [0%]
  - [ ] (deftest mask-field.error.1
  - [ ] (deftest mask-field.error.2
  - [ ] (deftest mask-field.error.3
  - [ ] (deftest mask-field.1
  - [ ] (deftest mask-field.2
  - [ ] (deftest mask-field.3
  - [ ] (deftest mask-field.order.1
  - [ ] (deftest mask-field.place.1
  - [ ] (deftest mask-field.place.2
  - [ ] (deftest mask-field.place.order.1
**** zerop.lsp [0%]
  - [ ] (deftest zerop.error.1
  - [ ] (deftest zerop.error.2
  - [ ] (deftest zerop.error.3
  - [ ] (deftest zerop.error.4
  - [ ] (deftest zerop.1
  - [ ] (deftest zerop.2
  - [ ] (deftest zerop.3
  - [ ] (deftest zerop.4
  - [ ] (deftest zerop.5
  - [ ] (deftest zerop.6
  - [ ] (deftest zerop.7
  - [ ] (deftest zerop.7a
  - [ ] (deftest zerop.8
  - [ ] (deftest zerop.9
  - [ ] (deftest zerop.10
**** logior.lsp [0%]
  - [ ] (deftest logior.error.1
  - [ ] (deftest logior.error.2
  - [ ] (deftest logior.1
  - [ ] (deftest logior.2
  - [ ] (deftest logior.3
  - [ ] (deftest logior.4
  - [ ] (deftest logior.5
  - [ ] (deftest logior.6
  - [ ] (deftest logior.7
  - [ ] (deftest logior.8
  - [ ] (deftest logior.order.1
  - [ ] (deftest logior.order.2
**** boole.lsp [0%]
  - [ ] (deftest boole.error.1
  - [ ] (deftest boole.error.2
  - [ ] (deftest boole.error.3
  - [ ] (deftest boole.error.4
  - [ ] (deftest boole.error.5
  - [ ] (deftest boole.error.6
  - [ ] (deftest boole.error.7
  - [ ] (deftest boole.1
  - [ ] (deftest boole.2
  - [ ] (deftest boole.3
  - [ ] (deftest boole.4
  - [ ] (deftest boole.order.1
  - [ ] (deftest boole.constants.1
  - [ ] (deftest boole.constants.2
  - [ ] (deftest boole.constants.3
**** deposit-field.lsp [0%]
  - [ ] (deftest deposit-field.error.1
  - [ ] (deftest deposit-field.error.2
  - [ ] (deftest deposit-field.error.3
  - [ ] (deftest deposit-field.error.4
  - [ ] (deftest deposit-field.1
  - [ ] (deftest deposit-field.2
  - [ ] (deftest deposit-field.3
  - [ ] (deftest deposit-field.4
  - [ ] (deftest deposit-field.5
**** min.lsp [0%]
  - [ ] (deftest min.error.1
  - [ ] (deftest min.error.2
  - [ ] (deftest min.error.3
  - [ ] (deftest min.1
  - [ ] (deftest min.2
  - [ ] (deftest min.3
  - [ ] (deftest min.4
  - [ ] (deftest min.5
  - [ ] (deftest min.6
  - [ ] (deftest min.7
  - [ ] (deftest min.8
  - [ ] (deftest min.9
  - [ ] (deftest min.10
  - [ ] (deftest min.11
  - [ ] (deftest min.12
  - [ ] (deftest min.13
  - [ ] (deftest min.15
  - [ ] (deftest min.16
  - [ ] (deftest min.17
  - [ ] (deftest min.18
  - [ ] (deftest min.19
  - [ ] (deftest min.20
  - [ ] (deftest min.21
  - [ ] (deftest min.22
  - [ ] (deftest min.23
  - [ ] (deftest min.24
  - [ ] (deftest min.25
  - [ ] (deftest min.26
  - [ ] (deftest min.27
  - [ ] (deftest min.28
  - [ ] (deftest min.29
  - [ ] (deftest min.30
  - [ ] (deftest min.31
  - [ ] (deftest min.32
  - [ ] (deftest min.33
  - [ ] (deftest min.34
  - [ ] (deftest min.order.1
  - [ ] (deftest min.order.2
  - [ ] (deftest min.order.3
**** oneminus.lsp [0%]
  - [ ] (deftest 1-.error.1
  - [ ] (deftest 1-.error.2
  - [ ] (deftest 1-.error.3
  - [ ] (deftest 1-.1
  - [ ] (deftest 1-.2
  - [ ] (deftest 1-.3
  - [ ] (deftest 1-.4
  - [ ] (deftest 1-.5
  - [ ] (deftest 1-.6
  - [ ] (deftest 1-.7
  - [ ] (deftest 1-.8
  - [ ] (deftest 1-.9
  - [ ] (deftest 1-.10
  - [ ] (deftest 1-.11
  - [ ] (deftest 1-.12
  - [ ] (deftest 1-.13
  - [ ] (deftest 1-.14
  - [ ] (deftest 1-.15
**** atan.lsp [0%]
  - [ ] (deftest atan.1
  - [ ] (deftest atan.2
  - [ ] (deftest atan.3
  - [ ] (deftest atan.4
  - [ ] (deftest atan.5
  - [ ] (deftest atan.6
  - [ ] (deftest atan.7
  - [ ] (deftest atan.8
  - [ ] (deftest atan.9
  - [ ] (deftest atan.10
  - [ ] (deftest atan.11
  - [ ] (deftest atan.12
  - [ ] (deftest atan.13
  - [ ] (deftest atan.14
  - [ ] (deftest atan.ieee.1 :description "Verify if atan handles 0.0 correctly"
  - [ ] (deftest atan.ieee.2 :description "Verify ATAN handling signed zero"
  - [ ] (deftest atan.error.1
  - [ ] (deftest atan.error.2
  - [ ] (deftest atan.error.3
  - [ ] (deftest atan.error.4
  - [ ] (deftest atan.error.5
**** plusp.lsp [0%]
  - [ ] (deftest plusp.error.1
  - [ ] (deftest plusp.error.2
  - [ ] (deftest plusp.error.3
  - [ ] (deftest plusp.error.4
  - [ ] (deftest plusp.1
  - [ ] (deftest plusp.2
  - [ ] (deftest plusp.3
  - [ ] (deftest plusp.4
  - [ ] (deftest plusp.5
  - [ ] (deftest plusp.6
  - [ ] (deftest plusp.7
**** arithmetic-error.lsp [0%]
  - [ ] (deftest arithmethic-error.1
  - [ ] (deftest arithmethic-error.2
  - [ ] (deftest arithmetic-error.3
  - [ ] (deftest arithmetic-error-operation.error.1
  - [ ] (deftest arithmetic-error-operation.error.2
  - [ ] (deftest arithmetic-error-operands.error.1
  - [ ] (deftest arithmetic-error-operands.error.2
**** dpb.lsp [0%]
  - [ ] (deftest dpb.error.1
  - [ ] (deftest dpb.error.2
  - [ ] (deftest dpb.error.3
  - [ ] (deftest dpb.error.4
  - [ ] (deftest dpb.1
  - [ ] (deftest dpb.2
  - [ ] (deftest dpb.3
  - [ ] (deftest dpb.4
  - [ ] (deftest dpb.5
**** make-random-state.lsp [0%]
  - [ ] (deftest make-random-state.error.1
  - [ ] (deftest make-random-state.error.2
  - [ ] (deftest make-random-state.error.3
  - [ ] (deftest make-random-state.error.4
  - [ ] (deftest make-random-state.1
  - [ ] (deftest make-random-state.2
  - [ ] (deftest make-random-state.3
  - [ ] (deftest make-random-state.4
**** real.lsp [0%]
  - [ ] (deftest real.1
  - [ ] (deftest real.2
  - [ ] (deftest real.3
  - [ ] (deftest real.4
**** rationalp.lsp [0%]
  - [ ] (deftest rationalp.error.1
  - [ ] (deftest rationalp.error.2
  - [ ] (deftest rationalp.error.3
  - [ ] (deftest rationalp.1
  - [ ] (deftest rationalp.2
  - [ ] (deftest rationalp.3
**** asin.lsp [0%]
  - [ ] (deftest asin.1
  - [ ] (deftest asin.2
  - [ ] (deftest asin.3
  - [ ] (deftest asin.4
  - [ ] (deftest asin.5
  - [ ] (deftest asin.6
  - [ ] (deftest asin.7
  - [ ] (deftest asin.8
  - [ ] (deftest asin.9
  - [ ] (deftest asin.error.1
  - [ ] (deftest asin.error.2
  - [ ] (deftest asin.error.3
**** round.lsp [0%]
  - [ ] (deftest round.error.1
  - [ ] (deftest round.error.2
  - [ ] (deftest round.1
  - [ ] (deftest round.2
  - [ ] (deftest round.3
  - [ ] (deftest round.4
  - [ ] (deftest round.5
  - [ ] (deftest round.6
  - [ ] (deftest round.7
  - [ ] (deftest round.8
  - [ ] (deftest round.9
  - [ ] (deftest round.10
  - [ ] (deftest round.11
  - [ ] (deftest round.12
  - [ ] (deftest round.13
  - [ ] (deftest round.14
  - [ ] (deftest round.15
  - [ ] (deftest round.16
  - [ ] (deftest round.17
  - [ ] (deftest round.18
  - [ ] (deftest round.19
  - [ ] (deftest round.20
  - [ ] (deftest round.21
**** phase.lsp [0%]
  - [ ] (deftest phase.error.1
  - [ ] (deftest phase.error.2
  - [ ] (deftest phase.error.3
  - [ ] (deftest phase.1
  - [ ] (deftest phase.2
  - [ ] (deftest phase.3
  - [ ] (deftest phase.4
  - [ ] (deftest phase.5
  - [ ] (deftest phase.6
  - [ ] (deftest phase.7
  - [ ] (deftest phase.8
  - [ ] (deftest phase.9
  - [ ] (deftest phase.10
  - [ ] (deftest phase.11
  - [ ] (deftest phase.12
  - [ ] (deftest phase.13
  - [ ] (deftest phase.14
  - [ ] (deftest phase.15
  - [ ] (deftest phase.16
  - [ ] (deftest phase.17
  - [ ] (deftest phase.18
  - [ ] (deftest phase.19
  - [ ] (deftest phase.20
  - [ ] (deftest phase.21
**** tan.lsp [0%]
  - [ ] (deftest tan.1
  - [ ] (deftest tan.2
  - [ ] (deftest tan.3
  - [ ] (deftest tan.4
  - [ ] (deftest tan.5
  - [ ] (deftest tan.6
  - [ ] (deftest tan.7
  - [ ] (deftest tan.8
  - [ ] (deftest tan.9
  - [ ] (deftest tan.10
  - [ ] (deftest tan.11
  - [ ] (deftest tan.12
  - [ ] (deftest tan.13
  - [ ] (deftest tan.14
  - [ ] (deftest tan.15
  - [ ] (deftest tan.16
  - [ ] (deftest tan.17
  - [ ] (deftest tan.18
  - [ ] (deftest tan.19
  - [ ] (deftest tan.20
  - [ ] (deftest tan.21
  - [ ] (deftest tan.22
  - [ ] (deftest tan.23
  - [ ] (deftest tan.24
  - [ ] (deftest tan.error.1
  - [ ] (deftest tan.error.2
  - [ ] (deftest tan.error.3
**** logorc1.lsp [0%]
  - [ ] (deftest logorc1.error.1
  - [ ] (deftest logorc1.error.2
  - [ ] (deftest logorc1.error.3
  - [ ] (deftest logorc1.error.4
  - [ ] (deftest logorc1.error.5
  - [ ] (deftest logorc1.1
  - [ ] (deftest logorc1.2
  - [ ] (deftest logorc1.2a
  - [ ] (deftest logorc1.3
  - [ ] (deftest logorc1.4
  - [ ] (deftest logorc1.5
  - [ ] (deftest logorc1.6
  - [ ] (deftest logorc1.order.1
**** oneplus.lsp [0%]
  - [ ] (deftest 1+.error.1
  - [ ] (deftest 1+.error.2
  - [ ] (deftest 1+.error.3
  - [ ] (deftest 1+.1
  - [ ] (deftest 1+.2
  - [ ] (deftest 1+.3
  - [ ] (deftest 1+.4
  - [ ] (deftest 1+.5
  - [ ] (deftest 1+.6
  - [ ] (deftest 1+.7
  - [ ] (deftest 1+.8
  - [ ] (deftest 1+.9
  - [ ] (deftest 1+.10
  - [ ] (deftest 1+.11
  - [ ] (deftest 1+.12
  - [ ] (deftest 1+.13
  - [ ] (deftest 1+.14
  - [ ] (deftest 1+.15
**** lcm.lsp [0%]
  - [ ] (deftest lcm.error.1
  - [ ] (deftest lcm.1
  - [ ] (deftest lcm.2
  - [ ] (deftest lcm.3
  - [ ] (deftest lcm.4
  - [ ] (deftest lcm.5
  - [ ] (deftest lcm.6
  - [ ] (deftest lcm.7
  - [ ] (deftest lcm.8
  - [ ] (deftest lcm.9
  - [ ] (deftest lcm.10
  - [ ] (deftest lcm.11
  - [ ] (deftest lcm.12
  - [ ] (deftest lcm.order.1
  - [ ] (deftest lcm.order.2
  - [ ] (deftest lcm.order.3
**** incf.lsp [0%]
  - [ ] (deftest incf.1
  - [ ] (deftest incf.2
  - [ ] (deftest incf.3
  - [ ] (deftest incf.4
  - [ ] (deftest incf.5
  - [ ] (deftest incf.6
  - [ ] (deftest incf.7
  - [ ] (deftest incf.8
  - [ ] (deftest incf.9
  - [ ] (deftest incf.10
  - [ ] (deftest incf.11
  - [ ] (deftest incf.12
  - [ ] (deftest incf.13
  - [ ] (deftest incf.14
  - [ ] (deftest incf.15
  - [ ] (deftest incf.16
  - [ ] (deftest incf.17
  - [ ] (deftest incf.18
  - [ ] (deftest incf.19
  - [ ] (deftest incf.20
  - [ ] (deftest incf.21
  - [ ] (deftest incf.22
  - [ ] (deftest incf.23
  - [ ] (deftest incf.order.2
  - [ ] (deftest incf.order.3
  - [ ] (deftest incf.order.4
**** times.lsp [0%]
  - [ ] (deftest *.1
  - [ ] (deftest *.2
  - [ ] (deftest *.3
  - [ ] (deftest *.4
  - [ ] (deftest *.5
  - [ ] (deftest *.6
  - [ ] (deftest *.7
  - [ ] (deftest *.8
  - [ ] (deftest *.9
  - [ ] (deftest *.10
  - [ ] (deftest *.11
  - [ ] (deftest *.12
  - [ ] (deftest *.13
  - [ ] (deftest *.14
  - [ ] (deftest *.15
  - [ ] (deftest *.16
  - [ ] (deftest *.17
  - [ ] (deftest *.18
  - [ ] (deftest *.19
  - [ ] (deftest *.20
  - [ ] (deftest *.21
  - [ ] (deftest *.22
  - [ ] (deftest *.23
  - [ ] (deftest *.24
  - [ ] (deftest *.25
  - [ ] (deftest *.26
  - [ ] (deftest *.27
  - [ ] (deftest *.28
  - [ ] (deftest times.order.1
  - [ ] (deftest times.order.2
**** minus.lsp [0%]
  - [ ] (deftest minus.error.1
  - [ ] (deftest minus.1
  - [ ] (deftest minus.2
  - [ ] (deftest minus.3
  - [ ] (deftest minus.4
  - [ ] (deftest minus.5
  - [ ] (deftest minus.6
  - [ ] (deftest minus.7
  - [ ] (deftest minus.8
  - [ ] (deftest minus.9
  - [ ] (deftest subtract.1
  - [ ] (deftest subtract.2
  - [ ] (deftest subtract.3
  - [ ] (deftest subtract.4
  - [ ] (deftest subtract.5
  - [ ] (deftest subtract.6
**** isqrt.lsp [0%]
  - [ ] (deftest isqrt.error.1
  - [ ] (deftest isqrt.error.2
  - [ ] (deftest isqrt.error.3
  - [ ] (deftest isqrt.error.4
  - [ ] (deftest isqrt.error.5
  - [ ] (deftest isqrt.1
  - [ ] (deftest isqrt.2
  - [ ] (deftest isqrt.3
**** logtest.lsp [0%]
  - [ ] (deftest logtest.error.1
  - [ ] (deftest logtest.error.2
  - [ ] (deftest logtest.error.3
  - [ ] (deftest logtest.error.4
  - [ ] (deftest logtest.error.5
  - [ ] (deftest logtest.1
  - [ ] (deftest logtest.2
  - [ ] (deftest logtest.3
**** fceiling.lsp [0%]
  - [ ] (deftest fceiling.error.1
  - [ ] (deftest fceiling.error.2
  - [ ] (deftest fceiling.1
  - [ ] (deftest fceiling.10
  - [ ] (deftest fceiling.11
  - [ ] (deftest fceiling.12
  - [ ] (deftest fceiling.13
  - [ ] (deftest fceiling.14
  - [ ] (deftest fceiling.15
  - [ ] (deftest fceiling.16
  - [ ] (deftest fceiling.17
  - [ ] (deftest fceiling.18
  - [ ] (deftest fceiling.19
**** conjugate.lsp [0%]
  - [ ] (deftest conjugate.error.1
  - [ ] (deftest conjugate.error.2
  - [ ] (deftest conjugate.1
  - [ ] (deftest conjugate.2
  - [ ] (deftest conjugate.3
  - [ ] (deftest conjugate.4
  - [ ] (deftest conjugate.5
  - [ ] (deftest conjugate.6
  - [ ] (deftest conjugate.7
  - [ ] (deftest conjugate.8
  - [ ] (deftest conjugate.9
  - [ ] (deftest conjugate.10
**** realpart.lsp [0%]
  - [ ] (deftest realpart.error.1
  - [ ] (deftest realpart.error.2
  - [ ] (deftest realpart.error.3
  - [ ] (deftest realpart.1
  - [ ] (deftest realpart.2
  - [ ] (deftest realpart.3
  - [ ] (deftest realpart.4
**** float.lsp [0%]
  - [ ] (deftest float.error.1
  - [ ] (deftest float.error.2
  - [ ] (deftest float.1
  - [ ] (deftest float.2
  - [ ] (deftest float.3
  - [ ] (deftest float.4
  - [ ] (deftest float.5
  - [ ] (deftest float.6
  - [ ] (deftest float.7
  - [ ] (deftest float.8
  - [ ] (deftest float.9
  - [ ] (deftest float.10
  - [ ] (deftest float.11
**** gcd.lsp [0%]
  - [ ] (deftest gcd.error.1
  - [ ] (deftest gcd.1
  - [ ] (deftest gcd.2
  - [ ] (deftest gcd.3
  - [ ] (deftest gcd.4
  - [ ] (deftest gcd.5
  - [ ] (deftest gcd.6
  - [ ] (deftest gcd.7
  - [ ] (deftest gcd.8
  - [ ] (deftest gcd.order.1
  - [ ] (deftest gcd.order.2
  - [ ] (deftest gcd.order.3
**** cos.lsp [0%]
  - [ ] (deftest cos.1
  - [ ] (deftest cos.2
  - [ ] (deftest cos.3
  - [ ] (deftest cos.4
  - [ ] (deftest cos.5
  - [ ] (deftest cos.6
  - [ ] (deftest cos.7
  - [ ] (deftest cos.8
  - [ ] (deftest cos.9
  - [ ] (deftest cos.10
  - [ ] (deftest cos.11
  - [ ] (deftest cos.12
  - [ ] (deftest cos.13
  - [ ] (deftest cos.14
  - [ ] (deftest cos.15
  - [ ] (deftest cos.16
  - [ ] (deftest cos.17
  - [ ] (deftest cos.18
  - [ ] (deftest cos.19
  - [ ] (deftest cos.20
  - [ ] (deftest cos.21
  - [ ] (deftest cos.22
  - [ ] (deftest cos.23
  - [ ] (deftest cos.24
  - [ ] (deftest cos.error.1
  - [ ] (deftest cos.error.2
  - [ ] (deftest cos.error.3
**** max.lsp [0%]
  - [ ] (deftest max.error.1
  - [ ] (deftest max.error.2
  - [ ] (deftest max.error.3
  - [ ] (deftest max.1
  - [ ] (deftest max.2
  - [ ] (deftest max.3
  - [ ] (deftest max.4
  - [ ] (deftest max.5
  - [ ] (deftest max.6
  - [ ] (deftest max.7
  - [ ] (deftest max.8
  - [ ] (deftest max.9
  - [ ] (deftest max.10
  - [ ] (deftest max.11
  - [ ] (deftest max.12
  - [ ] (deftest max.13
  - [ ] (deftest max.15
  - [ ] (deftest max.16
  - [ ] (deftest max.17
  - [ ] (deftest max.18
  - [ ] (deftest max.19
  - [ ] (deftest max.20
  - [ ] (deftest max.21
  - [ ] (deftest max.22
  - [ ] (deftest max.23
  - [ ] (deftest max.24
  - [ ] (deftest max.25
  - [ ] (deftest max.26
  - [ ] (deftest max.27
  - [ ] (deftest max.28
  - [ ] (deftest max.29
  - [ ] (deftest max.30
  - [ ] (deftest max.31
  - [ ] (deftest max.32
  - [ ] (deftest max.33
  - [ ] (deftest max.34
  - [ ] (deftest max.order.1
  - [ ] (deftest max.order.2
  - [ ] (deftest max.order.3
**** decf.lsp [0%]
  - [ ] (deftest decf.1
  - [ ] (deftest decf.2
  - [ ] (deftest decf.3
  - [ ] (deftest decf.4
  - [ ] (deftest decf.5
  - [ ] (deftest decf.6
  - [ ] (deftest decf.7
  - [ ] (deftest decf.8
  - [ ] (deftest decf.9
  - [ ] (deftest decf.10
  - [ ] (deftest decf.11
  - [ ] (deftest decf.12
  - [ ] (deftest decf.13
  - [ ] (deftest decf.14
  - [ ] (deftest decf.15
  - [ ] (deftest decf.16
  - [ ] (deftest decf.17
  - [ ] (deftest decf.18
  - [ ] (deftest decf.19
  - [ ] (deftest decf.20
  - [ ] (deftest decf.21
  - [ ] (deftest decf.22
  - [ ] (deftest decf.23
  - [ ] (deftest decf.order.2
  - [ ] (deftest decf.order.3
  - [ ] (deftest decf.order.4
**** truncate.lsp [0%]
  - [ ] (deftest truncate.error.1
  - [ ] (deftest truncate.error.2
  - [ ] (deftest truncate.1
  - [ ] (deftest truncate.2
  - [ ] (deftest truncate.3
  - [ ] (deftest truncate.4
  - [ ] (deftest truncate.5
  - [ ] (deftest truncate.6
  - [ ] (deftest truncate.7
  - [ ] (deftest truncate.8
  - [ ] (deftest truncate.9
  - [ ] (deftest truncate.10
  - [ ] (deftest truncate.11
  - [ ] (deftest truncate.12
  - [ ] (deftest truncate.13
  - [ ] (deftest truncate.14
  - [ ] (deftest truncate.15
  - [ ] (deftest truncate.16
  - [ ] (deftest truncate.17
  - [ ] (deftest truncate.18
  - [ ] (deftest truncate.19
**** evenp.lsp [0%]
  - [ ] (deftest evenp.error.1
  - [ ] (deftest evenp.error.2
  - [ ] (deftest evenp.error.3
  - [ ] (deftest evenp.1
  - [ ] (deftest evenp.3
  - [ ] (deftest evenp.4
  - [ ] (deftest evenp.5
  - [ ] (deftest evenp.6
  - [ ] (deftest evenp.7
  - [ ] (deftest evenp.8
**** logcount.lsp [0%]
  - [ ] (deftest logcount.error.1
  - [ ] (deftest logcount.error.2
  - [ ] (deftest logcount.error.3
  - [ ] (deftest logcount.1
  - [ ] (deftest logcount.2
  - [ ] (deftest logcount.3
  - [ ] (deftest logcount.4
  - [ ] (deftest logcount.5
  - [ ] (deftest logcount.6
  - [ ] (deftest logcount.7
  - [ ] (deftest logcount.8
**** byte.lsp [0%]
  - [ ] (deftest byte.error.1
  - [ ] (deftest byte.error.2
  - [ ] (deftest byte.error.3
  - [ ] (deftest byte.1
  - [ ] (deftest byte.2
  - [ ] (deftest byte.3
  - [ ] (deftest byte.4
  - [ ] (deftest byte.5
  - [ ] (deftest byte-size.1
  - [ ] (deftest byte-position.1
  - [ ] (deftest byte-position.error.1
  - [ ] (deftest byte-position.error.2
  - [ ] (deftest byte-size.error.1
  - [ ] (deftest byte-size.error.2
**** logeqv.lsp [0%]
  - [ ] (deftest logeqv.error.1
  - [ ] (deftest logeqv.error.2
  - [ ] (deftest logeqv.1
  - [ ] (deftest logeqv.2
  - [ ] (deftest logeqv.3
  - [ ] (deftest logeqv.4
  - [ ] (deftest logeqv.5
  - [ ] (deftest logeqv.6
  - [ ] (deftest logeqv.7
  - [ ] (deftest logeqv.8
  - [ ] (deftest logeqv.order.1
  - [ ] (deftest logeqv.order.2
**** logbitp.lsp [0%]
  - [ ] (deftest logbitp.error.1
  - [ ] (deftest logbitp.error.2
  - [ ] (deftest logbitp.error.3
  - [ ] (deftest logbitp.error.4
  - [ ] (deftest logbitp.error.5
  - [ ] (deftest logbitp.1
  - [ ] (deftest logbitp.2
  - [ ] (deftest logbitp.3
  - [ ] (deftest logbitp.4
  - [ ] (deftest logbitp.5
  - [ ] (deftest logbitp.6
  - [ ] (deftest logbitp.7
  - [ ] (deftest logbitp.8
  - [ ] (deftest logbitp.order.1
**** fround.lsp [0%]
  - [ ] (deftest fround.error.1
  - [ ] (deftest fround.error.2
  - [ ] (deftest fround.1
  - [ ] (deftest fround.10
  - [ ] (deftest fround.11
  - [ ] (deftest fround.12
  - [ ] (deftest fround.13
  - [ ] (deftest fround.14
  - [ ] (deftest fround.15
  - [ ] (deftest fround.16
  - [ ] (deftest fround.17
  - [ ] (deftest fround.18
  - [ ] (deftest fround.19
**** realp.lsp [0%]
  - [ ] (deftest realp.error.1
  - [ ] (deftest realp.error.2
  - [ ] (deftest realp.error.3
  - [ ] (deftest realp.1
  - [ ] (deftest realp.2
  - [ ] (deftest realp.3
  - [ ] (deftest realp.4
  - [ ] (deftest realp.5
  - [ ] (deftest realp.6
**** complexp.lsp [0%]
  - [ ] (deftest complexp.error.1
  - [ ] (deftest complexp.error.2
  - [ ] (deftest complexp.error.3
  - [ ] (deftest complexp.1
**** integer-length.lsp [0%]
  - [ ] (deftest integer-length.error.1
  - [ ] (deftest integer-length.error.2
  - [ ] (deftest integer-length.error.3
  - [ ] (deftest integer-length.error.4
  - [ ] (deftest integer-length.1
  - [ ] (deftest integer-length.2
  - [ ] (deftest integer-length.3
  - [ ] (deftest integer-length.4
**** floatp.lsp [0%]
  - [ ] (deftest floatp.error.1
  - [ ] (deftest floatp.error.2
  - [ ] (deftest floatp.1
  - [ ] (deftest floatp.2
  - [ ] (deftest floatp.3
**** divide.lsp [0%]
  - [ ] (deftest /.error.1
  - [ ] (deftest /.error.2
  - [ ] (deftest /.error.3
  - [ ] (deftest /.error.4
  - [ ] (deftest /.error.5
  - [ ] (deftest /.error.6
  - [ ] (deftest /.error.7
  - [ ] (deftest /.error.8
  - [ ] (deftest /.1
  - [ ] (deftest /.2
  - [ ] (deftest /.3
  - [ ] (deftest /.4
  - [ ] (deftest /.5
  - [ ] (deftest /.6
  - [ ] (deftest /.7
  - [ ] (deftest /.8
  - [ ] (deftest /.9
  - [ ] (deftest /.10
  - [ ] (deftest /.11
  - [ ] (deftest /.12
  - [ ] (deftest /.13
**** number-comparison.lsp [0%]
  - [ ] (deftest =.error.1
  - [ ] (deftest /=.error.1
  - [ ] (deftest <.error.1
  - [ ] (deftest <=.error.1
  - [ ] (deftest >.error.1
  - [ ] (deftest >=.error.1
  - [ ] (deftest =.1
  - [ ] (deftest =.2
  - [ ] (deftest =.3
  - [ ] (deftest =.4
  - [ ] (deftest =.5
  - [ ] (deftest =.6
  - [ ] (deftest =.7
  - [ ] (deftest =.8
  - [ ] (deftest =.9
  - [ ] (deftest =.10
  - [ ] (deftest =.11
  - [ ] (deftest =.12
  - [ ] (deftest =.13
  - [ ] (deftest =.14
  - [ ] (deftest =.15
  - [ ] (deftest =.16
  - [ ] (deftest =.17
  - [ ] (deftest =.18
  - [ ] (deftest =.19
  - [ ] (deftest =.order.1
  - [ ] (deftest =.order.2
  - [ ] (deftest =.order.3
  - [ ] (deftest /=.1
  - [ ] (deftest /=.2
  - [ ] (deftest /=.3
  - [ ] (deftest /=.4
  - [ ] (deftest /=.4a
  - [ ] (deftest /=.5
  - [ ] (deftest /=.6
  - [ ] (deftest /=.7
  - [ ] (deftest /=.8
  - [ ] (deftest /=.9
  - [ ] (deftest /=.10
  - [ ] (deftest /=.11
  - [ ] (deftest /=.12
  - [ ] (deftest /=.13
  - [ ] (deftest /=.14
  - [ ] (deftest /=.15
  - [ ] (deftest /=.17
  - [ ] (deftest /=.18
  - [ ] (deftest /=.19
  - [ ] (deftest /=.order.1
  - [ ] (deftest /=.order.2
  - [ ] (deftest /=.order.3
  - [ ] (deftest <.1
  - [ ] (deftest <.2
  - [ ] (deftest <.3
  - [ ] (deftest <.4
  - [ ] (deftest <.5
  - [ ] (deftest <.6
  - [ ] (deftest <.7
  - [ ] (deftest <.8
  - [ ] (deftest <.9
  - [ ] (deftest <.10
  - [ ] (deftest <.11
  - [ ] (deftest <.17
  - [ ] (deftest <.18
  - [ ] (deftest <.19
  - [ ] (deftest <.order.1
  - [ ] (deftest <.order.2
  - [ ] (deftest <.order.3
  - [ ] (deftest <=.1
  - [ ] (deftest <=.2
  - [ ] (deftest <=.3
  - [ ] (deftest <=.4
  - [ ] (deftest <=.5
  - [ ] (deftest <=.6
  - [ ] (deftest <=.7
  - [ ] (deftest <=.8
  - [ ] (deftest <=.9
  - [ ] (deftest <=.10
  - [ ] (deftest <=.17
  - [ ] (deftest <=.18
  - [ ] (deftest <=.19
  - [ ] (deftest <=.order.1
  - [ ] (deftest <=.order.2
  - [ ] (deftest <=.order.3
  - [ ] (deftest >.1
  - [ ] (deftest >.2
  - [ ] (deftest >.3
  - [ ] (deftest >.4
  - [ ] (deftest >.5
  - [ ] (deftest >.6
  - [ ] (deftest >.7
  - [ ] (deftest >.8
  - [ ] (deftest >.9
  - [ ] (deftest >.17
  - [ ] (deftest >.18
  - [ ] (deftest >.19
  - [ ] (deftest >.order.1
  - [ ] (deftest >.order.2
  - [ ] (deftest >.order.3
  - [ ] (deftest >=.1
  - [ ] (deftest >=.2
  - [ ] (deftest >=.3
  - [ ] (deftest >=.4
  - [ ] (deftest >=.5
  - [ ] (deftest >=.6
  - [ ] (deftest >=.7
  - [ ] (deftest >=.8
  - [ ] (deftest >=.9
  - [ ] (deftest >=.17
  - [ ] (deftest >=.18
  - [ ] (deftest >=.19
  - [ ] (deftest >=.order.1
  - [ ] (deftest >=.order.2
  - [ ] (deftest >=.order.3
  - [ ] (deftest compare-rationals.1
  - [ ] (deftest compare-rationals.2
  - [ ] (deftest compare-rationals.3
  - [ ] (deftest compare-rationals.4
  - [ ] (deftest bignum.float.compare.1a
  - [ ] (deftest bignum.float.compare.1b
  - [ ] (deftest bignum.float.compare.2a
  - [ ] (deftest bignum.float.compare.2b
  - [ ] (deftest bignum.float.compare.3a
  - [ ] (deftest bignum.float.compare.3b
  - [ ] (deftest bignum.float.compare.4a
  - [ ] (deftest bignum.float.compare.4b
  - [ ] (deftest bignum.float.compare.5a
  - [ ] (deftest bignum.float.compare.5b
  - [ ] (deftest bignum.float.compare.6a
  - [ ] (deftest bignum.float.compare.6b
  - [ ] (deftest bignum.float.compare.7
  - [ ] (deftest bignum.float.compare.8
  - [ ] (deftest bignum.short-float.random.compare.1
  - [ ] (deftest bignum.single-float.random.compare.1
  - [ ] (deftest bignum.double-float.random.compare.1
  - [ ] (deftest bignum.long-float.random.compare.1
  - [ ] (deftest rational.short-float.random.compare.1
  - [ ] (deftest rational.single-float.random.compare.1
  - [ ] (deftest rational.double-float.random.compare.1
  - [ ] (deftest rational.long-float.random.compare.1
  - [ ] (deftest =.env.1
  - [ ] (deftest /=.env.1
  - [ ] (deftest <.env.1
  - [ ] (deftest <=.env.1
  - [ ] (deftest >.env.1
  - [ ] (deftest >=.env.1
**** atanh.lsp [0%]
  - [ ] (deftest atanh.1
  - [ ] (deftest atanh.2
  - [ ] (deftest atanh.3
  - [ ] (deftest atanh.4
  - [ ] (deftest atanh.5
  - [ ] (deftest atanh.5a
  - [ ] (deftest atanh.6
  - [ ] (deftest atanh.7
  - [ ] (deftest atanh.8
  - [ ] (deftest atanh.error.1
  - [ ] (deftest atanh.error.2
  - [ ] (deftest atanh.error.3
**** ash.lsp [0%]
  - [ ] (deftest ash.error.1
  - [ ] (deftest ash.error.2
  - [ ] (deftest ash.error.3
  - [ ] (deftest ash.error.4
  - [ ] (deftest ash.error.5
  - [ ] (deftest ash.1
  - [ ] (deftest ash.2
  - [ ] (deftest ash.3
  - [ ] (deftest ash.4
  - [ ] (deftest ash.5
  - [ ] (deftest ash.6
  - [ ] (deftest ash.order.1
**** epsilons.lsp [0%]
  - [ ] (deftest epsilons.1
  - [ ] (deftest epsilons.2
  - [ ] (deftest epsilons.3
  - [ ] (deftest epsilons.4
  - [ ] (deftest epsilons.5
  - [ ] (deftest epsilons.6
  - [ ] (deftest epsilons.7
  - [ ] (deftest epsilons.8
  - [ ] (deftest epsilons.9
  - [ ] (deftest epsilons.10
  - [ ] (deftest epsilons.11
  - [ ] (deftest epsilons.12
  - [ ] (deftest epsilons.13
**** parse-integer.lsp [0%]
  - [ ] (deftest parse-integer.error.1
  - [ ] (deftest parse-integer.error.2
  - [ ] (deftest parse-integer.error.3
  - [ ] (deftest parse-integer.error.4
  - [ ] (deftest parse-integer.error.5
  - [ ] (deftest parse-integer.error.5a
  - [ ] (deftest parse-integer.error.6
  - [ ] (deftest parse-integer.error.7
  - [ ] (deftest parse-integer.error.8
  - [ ] (deftest parse-integer.error.9
  - [ ] (deftest parse-integer.error.10
  - [ ] (deftest parse-integer.error.11
  - [ ] (deftest parse-integer.error.12
  - [ ] (deftest parse-integer.error.13
  - [ ] (deftest parse-integer.error.14
  - [ ] (deftest parse-integer.error.15
  - [ ] (deftest parse-integer.1
  - [ ] (deftest parse-integer.2
  - [ ] (deftest parse-integer.3
  - [ ] (deftest parse-integer.4
  - [ ] (deftest parse-integer.5
  - [ ] (deftest parse-integer.6
  - [ ] (deftest parse-integer.7
  - [ ] (deftest parse-integer.8
  - [ ] (deftest parse-integer.9
  - [ ] (deftest parse-integer.10
  - [ ] (deftest parse-integer.11
  - [ ] (deftest parse-integer.12
  - [ ] (deftest parse-integer.13
  - [ ] (deftest parse-integer.14
  - [ ] (deftest parse-integer.15
  - [ ] (deftest parse-integer.16
  - [ ] (deftest parse-integer.17
  - [ ] (deftest parse-integer.18
  - [ ] (deftest parse-integer.19
  - [ ] (deftest parse-integer.20
  - [ ] (deftest parse-integer.21
  - [ ] (deftest parse-integer.22
  - [ ] (deftest parse-integer.23
  - [ ] (deftest parse-integer.24
  - [ ] (deftest parse-integer.25
  - [ ] (deftest parse-integer.26
  - [ ] (deftest parse-integer.27
  - [ ] (deftest parse-integer.28
  - [ ] (deftest parse-integer.28a
  - [ ] (deftest parse-integer.29
  - [ ] (deftest parse-integer.29a
  - [ ] (deftest parse-integer.30
  - [ ] (deftest parse-integer.30a
  - [ ] (deftest parse-integer.31
  - [ ] (deftest parse-integer.32
  - [ ] (deftest parse-integer.33
  - [ ] (deftest parse-integer.34
  - [ ] (deftest parse-integer.35
  - [ ] (deftest parse-integer.36
  - [ ] (deftest parse-integer.order.1
**** signum.lsp [0%]
  - [ ] (deftest signum.error.1
  - [ ] (deftest signum.error.2
  - [ ] (deftest signum.error.3
  - [ ] (deftest signum.1
  - [ ] (deftest signum.2
  - [ ] (deftest signum.3
  - [ ] (deftest signum.4
  - [ ] (deftest signum.5
  - [ ] (deftest signum.6
  - [ ] (deftest signum.7
  - [ ] (deftest signum.8
  - [ ] (deftest signum.9
  - [ ] (deftest signum.10
  - [ ] (deftest signum.11
**** logandc1.lsp [0%]
  - [ ] (deftest logandc1.error.1
  - [ ] (deftest logandc1.error.2
  - [ ] (deftest logandc1.error.3
  - [ ] (deftest logandc1.error.4
  - [ ] (deftest logandc1.error.5
  - [ ] (deftest logandc1.1
  - [ ] (deftest logandc1.2
  - [ ] (deftest logandc1.3
  - [ ] (deftest logandc1.4
  - [ ] (deftest logandc1.5
  - [ ] (deftest logandc1.6
  - [ ] (deftest logandc1.order.1
*** cons [0%]
**** set-exclusive-or.lsp [63%]
  - [X] (deftest set-exclusive-or.1
  - [X] (deftest set-exclusive-or.2
  - [X] (deftest set-exclusive-or.3
  - [ ] (deftest set-exclusive-or.4
  - [X] (deftest set-exclusive-or.5
  - [ ] (deftest set-exclusive-or.6
  - [X] (deftest set-exclusive-or.7
  - [X] (deftest set-exclusive-or.7-a
  - [X] (deftest set-exclusive-or.8
  - [X] (deftest set-exclusive-or.8-a
  - [ ] (deftest set-exclusive-or.8-b
  - [X] (deftest set-exclusive-or.9
  - [X] (deftest set-exclusive-or.10
  - [X] (deftest set-exclusive-or.11
  - [X] (deftest set-exclusive-or.12
  - [X] (deftest set-exclusive-or.14
  - [X] (deftest set-exclusive-or.15
  - [ ] (deftest set-exclusive-or.16
  - [ ] (deftest set-exclusive-or.17
  - [ ] (deftest set-exclusive-or.17-a
  - [ ] (deftest set-exclusive-or.18
  - [ ] (deftest set-exclusive-or.18-a
  - [X] (deftest set-exclusive-or.order.1
  - [X] (deftest set-exclusive-or.order.2
  - [ ] (deftest set-exclusive-or.order.3
  - [ ] (deftest set-exclusive-or.order.4
  - [ ] (deftest set-exclusive-or.order.5
  - [ ] (deftest set-exclusive.allow-other-keys.1
  - [X] (deftest set-exclusive.allow-other-keys.2
  - [X] (deftest set-exclusive.allow-other-keys.3
  - [X] (deftest set-exclusive.allow-other-keys.4
  - [ ] (deftest set-exclusive.allow-other-keys.5
  - [ ] (deftest set-exclusive.allow-other-keys.6
  - [ ] (deftest set-exclusive.allow-other-keys.7
  - [X] (deftest set-exclusive.keywords.8
  - [X] (deftest set-exclusive.keywords.9
  - [ ] (def-fold-test set-exclusive-or.fold.1 (set-exclusive-or '(a b c d e f) '(b x e y z c)))
  - [X] (deftest set-exclusive-or.error.1
  - [X] (deftest set-exclusive-or.error.2
  - [X] (deftest set-exclusive-or.error.3
  - [X] (deftest set-exclusive-or.error.4
  - [X] (deftest set-exclusive-or.error.5
  - [X] (deftest set-exclusive-or.error.6
  - [X] (deftest set-exclusive-or.error.7
  - [X] (deftest set-exclusive-or.error.8
  - [X] (deftest set-exclusive-or.error.9
  - [X] (deftest set-exclusive-or.error.10
  - [X] (deftest set-exclusive-or.error.11
  - [X] (deftest set-exclusive-or.error.12
  - [ ] (deftest set-exclusive-or.error.13
  - [ ] (deftest set-exclusive-or.error.14
  - [ ] (deftest random-set-exclusive-or
**** consp.lsp [80%]
  - [X] (deftest consp-list
  - [X] (deftest consp-cons
  - [X] (deftest consp-nil
  - [X] (deftest consp-empty-list
  - [X] (deftest consp-single-element-list
  - [ ] (deftest consp-xor-atom-universe
  - [ ] (deftest consp-cons-universe
  - [X] (deftest consp.order.1
  - [X] (deftest consp.error.1
  - [X] (deftest consp.error.2
**** nthcdr.lsp [92%]
  - [ ] (deftest nthcdr.error.1
  - [X] (deftest nthcdr.error.6
  - [X] (deftest nthcdr.error.7
  - [X] (deftest nthcdr.error.8
  - [X] (deftest nthcdr.error.9
  - [X] (deftest nthcdr.error.10
  - [X] (deftest nthcdr.error.11
  - [X] (deftest nthcdr.1
  - [X] (deftest nthcdr.2
  - [X] (deftest nthcdr.3
  - [X] (deftest nthcdr.4
  - [X] (deftest nthcdr.5
  - [X] (deftest nthcdr.order.1
**** getf.lsp [22%]
  - [ ] (deftest getf.1
  - [ ] (deftest getf.2
  - [ ] (deftest getf.3
  - [ ] (deftest getf.4
  - [ ] (deftest getf.5
  - [ ] (deftest getf.order.1
  - [ ] (deftest getf.order.2
  - [ ] (deftest setf-getf.1
  - [ ] (deftest setf-getf.2
  - [ ] (deftest setf-getf.3
  - [ ] (deftest setf-getf.4
  - [ ] (deftest setf-getf.5
  - [ ] (deftest setf-getf.order.1
  - [ ] (deftest setf-getf.order.2
  - [ ] (deftest incf-getf.1
  - [ ] (deftest incf-getf.2
  - [ ] (deftest push-getf.1
  - [X] (deftest getf.error.1
  - [X] (deftest getf.error.2
  - [X] (deftest getf.error.3
  - [X] (deftest getf.error.4
  - [X] (deftest getf.error.5
**** cons-test-05.lsp [33%]
  - [ ] (deftest first-etc-1
  - [ ] (deftest first-etc-2
  - [X] (deftest rest-set-1
**** last.lsp [50%]
  - [X] (deftest last.1
  - [X] (deftest last.2
  - [X] (deftest last.3
  - [ ] (deftest last.4
  - [ ] (deftest last.5
  - [ ] (deftest last.6
  - [ ] (deftest last.7
  - [ ] (deftest last.8
  - [ ] (deftest last.9
  - [ ] (deftest last.10
  - [ ] (deftest last.11
  - [ ] (deftest last.12
  - [ ] (deftest last.13
  - [ ] (deftest last.14
  - [ ] (deftest last.order.1
  - [X] (deftest last.order.2
  - [X] (deftest last.error.1
  - [X] (deftest last.error.2
  - [X] (deftest last.error.3
  - [X] (deftest last.error.4
  - [X] (deftest last.error.5
  - [X] (deftest last.error.6
  - [X] (deftest last.error.7
  - [X] (deftest last.error.8
**** assoc-if-not.lsp [35%]
  - [ ] (deftest assoc-if-not.1
  - [ ] (deftest assoc-if-not.2
  - [ ] (deftest assoc-if-not.3
  - [ ] (deftest assoc-if-not.4
  - [ ] (deftest assoc-if-not.order.1
  - [ ] (deftest assoc-if-not.order.2
  - [ ] (deftest assoc-if-not.allow-other-keys.1
  - [ ] (deftest assoc-if-not.allow-other-keys.2
  - [ ] (deftest assoc-if-not.allow-other-keys.3
  - [ ] (deftest assoc-if-not.allow-other-keys.4
  - [ ] (deftest assoc-if-not.allow-other-keys.5
  - [ ] (deftest assoc-if-not.keywords.6
  - [ ] (deftest assoc-if-not.keywords.7
  - [ ] (deftest assoc-if-not.env.1
  - [ ] (deftest assoc-if-not.env.2
  - [X] (deftest assoc-if-not.error.1
  - [X] (deftest assoc-if-not.error.2
  - [X] (deftest assoc-if-not.error.3
  - [X] (deftest assoc-if-not.error.4
  - [X] (deftest assoc-if-not.error.5
  - [X] (deftest assoc-if-not.error.6
  - [X] (deftest assoc-if-not.error.7
  - [X] (deftest assoc-if-not.error.8
  - [ ] (deftest assoc-if-not.error.9
  - [ ] (deftest assoc-if-not.error.10
  - [X] (deftest assoc-if-not.error.11
  - [X] (deftest assoc-if-not.error.12
  - [ ] (deftest assoc-if-not.error.13
**** endp.lsp [87%]
  - [X] (deftest endp-nil
  - [X] (deftest endp-cons
  - [X] (deftest endp-singleton-list
  - [X] (deftest endp.order.1
  - [ ] (deftest endp.error.1
  - [X] (deftest endp.error.4
  - [X] (deftest endp.error.5
  - [X] (deftest endp.error.6
**** tailp.lsp [27%]
  - [ ] (deftest tailp.1
  - [ ] (deftest tailp.2
  - [ ] (deftest tailp.3
  - [ ] (deftest tailp.4
  - [ ] (deftest tailp.5
  - [X] (deftest tailp.error.5
  - [X] (deftest tailp.error.6
  - [X] (deftest tailp.error.7
  - [ ] (deftest tailp.6
  - [ ] (deftest tailp.7
  - [ ] (deftest tailp.order.1
**** rassoc-if-not.lsp [44%]
  - [ ] (deftest rassoc-if-not.1
  - [ ] (deftest rassoc-if-not.2
  - [ ] (deftest rassoc-if-not.3
  - [ ] (deftest rassoc-if-not.4
  - [ ] (deftest rassoc-if-not.order.1
  - [ ] (deftest rassoc-if-not.order.2
  - [ ] (deftest rassoc-if-not.allow-other-keys.1
  - [ ] (deftest rassoc-if-not.allow-other-keys.2
  - [ ] (deftest rassoc-if-not.allow-other-keys.3
  - [ ] (deftest rassoc-if-not.allow-other-keys.4
  - [ ] (deftest rassoc-if-not.allow-other-keys.5
  - [ ] (deftest rassoc-if-not.allow-other-keys.6
  - [ ] (deftest rassoc-if-not.keywords.7
  - [X] (deftest rassoc-if-not.error.1
  - [X] (deftest rassoc-if-not.error.2
  - [X] (deftest rassoc-if-not.error.3
  - [X] (deftest rassoc-if-not.error.4
  - [X] (deftest rassoc-if-not.error.5
  - [X] (deftest rassoc-if-not.error.6
  - [X] (deftest rassoc-if-not.error.7
  - [X] (deftest rassoc-if-not.error.8
  - [X] (deftest rassoc-if-not.error.9
  - [X] (deftest rassoc-if-not.error.10
  - [X] (deftest rassoc-if-not.error.11
  - [ ] (deftest rassoc-if-not.error.12
**** pairlis.lsp [76%]
  - [X] (deftest pairlis.1
  - [X] (deftest pairlis.2
  - [X] (deftest pairlis.3
  - [X] (deftest pairlis.4
  - [ ] (def-fold-test pairlis.fold.1 (pairlis '(a b) '(c d)))
  - [X] (deftest pairlis.error.1
  - [X] (deftest pairlis.error.2
  - [X] (deftest pairlis.error.3
  - [X] (deftest pairlis.error.4
  - [X] (deftest pairlis.error.5
  - [X] (deftest pairlis.error.6
  - [ ] (deftest pairlis.error.7
  - [ ] (deftest pairlis.error.8
**** list-length.lsp [83%]
  - [X] (deftest list-length-nil
  - [X] (deftest list-length-list
  - [ ] (deftest list-length-circular-list
  - [X] (deftest list-length.order.1
  - [X] (deftest list-length.4
  - [ ] (deftest list-length.error.1
  - [X] (deftest list-length.error.2
  - [X] (deftest list-length.error.3
  - [X] (deftest list-length.error.4
  - [X] (deftest list-length.error.5
  - [X] (deftest list-length-symbol
  - [X] (deftest list-length-dotted-list
**** tree-equal.lsp [22%]
  - [ ] (deftest tree-equal.1
  - [ ] (deftest tree-equal.2
  - [ ] (deftest tree-equal.3
  - [ ] (deftest tree-equal.4
  - [ ] (deftest tree-equal.5
  - [ ] (deftest tree-equal.6
  - [ ] (deftest tree-equal.7
  - [ ] (deftest tree-equal.8
  - [ ] (deftest tree-equal.9
  - [ ] (deftest tree-equal.10
  - [ ] (deftest tree-equal.11
  - [ ] (deftest tree-equal.12
  - [ ] (deftest tree-equal.13
  - [ ] (deftest tree-equal.14
  - [ ] (deftest tree-equal.15
  - [ ] (deftest tree-equal.16
  - [ ] (deftest tree-equal.allow-other-keys.1
  - [ ] (deftest tree-equal.allow-other-keys.2
  - [ ] (deftest tree-equal.allow-other-keys.3
  - [ ] (deftest tree-equal.allow-other-keys.4
  - [ ] (deftest tree-equal.keywords.1
  - [X] (deftest tree-equal.error.1
  - [X] (deftest tree-equal.error.2
  - [X] (deftest tree-equal.error.3
  - [X] (deftest tree-equal.error.4
  - [X] (deftest tree-equal.error.5
  - [X] (deftest tree-equal.error.6
**** mapcar.lsp [76%]
  - [X] (deftest mapcar.1
  - [X] (deftest mapcar.2
  - [X] (deftest mapcar.3
  - [X] (deftest mapcar.4
  - [ ] (deftest mapcar.5
  - [X] (deftest mapcar.6
  - [X] (deftest mapcar.order.1
  - [ ] (def-fold-test mapcar.fold.1 (mapcar 'identity '(a b c d)))
  - [ ] (def-fold-test mapcar.fold.2 (mapcar 'not '(t nil nil t t)))
  - [ ] (deftest mapcar.error.1
  - [X] (deftest mapcar.error.2
  - [X] (deftest mapcar.error.3
  - [X] (deftest mapcar.error.4
  - [X] (deftest mapcar.error.5
  - [X] (deftest mapcar.error.6
  - [X] (deftest mapcar.error.7
  - [X] (deftest mapcar.error.8
**** pushnew.lsp [58%]
  - [X] (deftest pushnew.1
  - [X] (deftest pushnew.2
  - [X] (deftest pushnew.3
  - [X] (deftest pushnew.4
  - [X] (deftest pushnew.5
  - [X] (deftest pushnew.6
  - [ ] (deftest pushnew.7
  - [ ] (deftest pushnew.8
  - [ ] (deftest pushnew.9
  - [X] (deftest pushnew.10
  - [X] (deftest pushnew.11
  - [X] (deftest pushnew.12
  - [ ] (deftest pushnew.13
  - [X] (deftest pushnew.14
  - [ ] (deftest pushnew.15
  - [X] (deftest pushnew.16
  - [X] (deftest pushnew.17
  - [X] (deftest pushnew.18
  - [X] (deftest pushnew.19
  - [ ] (deftest pushnew.20
  - [ ] (deftest pushnew.21
  - [ ] (deftest pushnew.22
  - [ ] (deftest pushnew.23
  - [ ] (deftest pushnew.24
  - [ ] (deftest pushnew.order.1
  - [ ] (deftest pushnew.order.2
  - [X] (deftest pushnew.order.3
  - [X] (deftest pushnew.error.1
  - [X] (deftest pushnew.error.2
  - [X] (deftest pushnew.error.3
  - [ ] (def-macro-test pushnew.error.4 (pushnew x y))
**** subst-if.lsp [36%]
  - [ ] (deftest subst-if.1
  - [ ] (deftest subst-if.2
  - [ ] (deftest subst-if.3
  - [ ] (deftest subst-if.4
  - [ ] (deftest subst-if.5
  - [ ] (deftest subst-if.6
  - [ ] (deftest subst-if.7
  - [ ] (def-fold-test subst-if.fold.1 (subst-if 'x 'numberp '(a b 3 (4) c d . 12)))
  - [ ] (deftest subst-if.allow-other-keys.1
  - [ ] (deftest subst-if.allow-other-keys.2
  - [ ] (deftest subst-if.allow-other-keys.3
  - [ ] (deftest subst-if.allow-other-keys.4
  - [ ] (deftest subst-if.allow-other-keys.5
  - [ ] (deftest subst-if.keywords.6
  - [X] (deftest subst-if.error.1
  - [X] (deftest subst-if.error.2
  - [X] (deftest subst-if.error.3
  - [X] (deftest subst-if.error.4
  - [X] (deftest subst-if.error.5
  - [X] (deftest subst-if.error.6
  - [X] (deftest subst-if.error.7
  - [X] (deftest subst-if.error.8
**** remf.lsp [0%]
  - [ ] (deftest remf.1
  - [ ] (deftest remf.2
  - [ ] (deftest remf.3
  - [ ] (deftest remf.4
  - [ ] (deftest remf.5
  - [ ] (deftest remf.6
  - [ ] (deftest remf.7
  - [ ] (deftest remf.order.1
  - [ ] (deftest remf.order.2
  - [ ] (deftest remf.order.3
  - [ ] (def-macro-test remf.error.1 (remf x 'a))
**** subsetp.lsp [85%]
  - [X] (deftest subsetp.1
  - [X] (deftest subsetp.2
  - [X] (deftest subsetp.3
  - [ ] (deftest subsetp.4
  - [X] (deftest subsetp.5
  - [X] (deftest subsetp.6
  - [X] (deftest subsetp.7
  - [X] (deftest subsetp.8
  - [X] (deftest subsetp.9
  - [X] (deftest subsetp.10
  - [X] (deftest subsetp.11
  - [X] (deftest subsetp.12
  - [X] (deftest subsetp.13
  - [X] (deftest subsetp.14
  - [X] (deftest subsetp.15
  - [X] (deftest subsetp.order.1
  - [X] (deftest subsetp.order.2
  - [X] (deftest subsetp.order.3
  - [ ] (deftest subsetp.allow-other-keys.1
  - [X] (deftest subsetp.allow-other-keys.2
  - [X] (deftest subsetp.allow-other-keys.3
  - [X] (deftest subsetp.allow-other-keys.4
  - [ ] (deftest subsetp.allow-other-keys.5
  - [ ] (deftest subsetp.allow-other-keys.6
  - [X] (deftest subsetp.keywords.7
  - [X] (deftest subsetp.keywords.8
  - [X] (deftest subsetp.error.1
  - [X] (deftest subsetp.error.2
  - [X] (deftest subsetp.error.3
  - [X] (deftest subsetp.error.4
  - [X] (deftest subsetp.error.5
  - [X] (deftest subsetp.error.6
  - [X] (deftest subsetp.error.7
  - [X] (deftest subsetp.error.8
  - [X] (deftest subsetp.error.9
  - [X] (deftest subsetp.error.10
  - [X] (deftest subsetp.error.11
  - [X] (deftest subsetp.error.12
  - [ ] (deftest subsetp.error.13
  - [ ] (deftest subsetp.error.14
**** list.lsp [64%]
  - [X] (deftest list.1
  - [X] (deftest list.2
  - [X] (deftest list.order.1
  - [X] (deftest list.order.2
  - [X] (deftest list.order.3
  - [ ] (def-fold-test list.fold.1 (list 'a))
  - [ ] (def-fold-test list.fold.2 (list 'a 'b))
  - [ ] (def-fold-test list.fold.3 (list 'a 'b 'c 'd 'e 'f))
  - [X] (deftest list*.1
  - [X] (deftest list*.2
  - [X] (deftest list-list*.1
  - [X] (deftest list*.3
  - [X] (deftest list*.order.1
  - [X] (deftest list*.order.2
  - [ ] (def-fold-test list*.fold.1 (list* 'a 'b))
  - [ ] (def-fold-test list*.fold.2 (list* 'a 'b 'c))
  - [ ] (def-fold-test list*.fold.3 (list* 'a 'b 'c 'd 'e 'f))
**** append.lsp [62%]
  - [X] (deftest append.1
  - [X] (deftest append.2
  - [X] (deftest append.3
  - [X] (deftest append.4
  - [X] (deftest append.5
  - [ ] (deftest append.6
  - [X] (deftest append.7
  - [ ] (deftest append.8
  - [ ] (deftest append.9
  - [ ] (deftest append.10
  - [X] (deftest append.order.1
  - [X] (deftest append.order.2
  - [ ] (def-fold-test append.fold.1 (append '(a b c) nil))
  - [ ] (def-fold-test append.fold.2 (append nil '(x) nil))
  - [X] (deftest append.error.1
  - [X] (deftest append.error.2
**** nreconc.lsp [100%]
  - [X] (deftest nreconc.1
  - [X] (deftest nreconc.2
  - [X] (deftest nreconc.order.1
  - [X] (deftest nreconc.error.1
  - [X] (deftest nreconc.error.2
  - [X] (deftest nreconc.error.3
  - [X] (deftest nreconc.error.4
**** member-if-not.lsp [78%]
  - [X] (deftest member-if-not.1
  - [X] (deftest member-if-not.2
  - [X] (deftest member-if-not.3
  - [ ] (deftest member-if-not.4
  - [X] (deftest member-if-not.5
  - [X] (deftest member-if-not.order.1
  - [X] (deftest member-if-not.order.2
  - [X] (deftest member-if-not.keywords.1
  - [X] (deftest member-if-not.allow-other-keys.2
  - [ ] (deftest member-if-not.allow-other-keys.3
  - [X] (deftest member-if-not.allow-other-keys.4
  - [ ] (deftest member-if-not.allow-other-keys.5
  - [ ] (deftest member-if-not.allow-other-keys.6
  - [ ] (deftest member-if-not.error.1
  - [X] (deftest member-if-not.error.2
  - [X] (deftest member-if-not.error.3
  - [X] (deftest member-if-not.error.4
  - [X] (deftest member-if-not.error.5
  - [X] (deftest member-if-not.error.6
  - [X] (deftest member-if-not.error.7
  - [X] (deftest member-if-not.error.8
  - [X] (deftest member-if-not.error.9
  - [X] (deftest member-if-not.error.10
**** assoc.lsp [82%]
  - [X] (deftest assoc.1
  - [X] (deftest assoc.2
  - [X] (deftest assoc.3
  - [X] (deftest assoc.4
  - [X] (deftest assoc.5
  - [X] (deftest assoc.6
  - [X] (deftest assoc.7
  - [X] (deftest assoc.8
  - [X] (deftest assoc.9
  - [X] (deftest assoc.10
  - [X] (deftest assoc.11
  - [ ] (deftest assoc.12
  - [X] (deftest assoc.13
  - [X] (deftest assoc.14
  - [ ] (deftest assoc.15
  - [X] (deftest assoc.16
  - [ ] (deftest assoc.17
  - [X] (deftest assoc.18
  - [ ] (deftest assoc.19
  - [X] (deftest assoc.20
  - [X] (deftest assoc.21
  - [ ] (deftest assoc.22
  - [ ] (deftest assoc.23
  - [X] (deftest assoc.24
  - [X] (deftest assoc.25
  - [X] (deftest assoc.26
  - [X] (deftest assoc.27
  - [X] (deftest assoc.30
  - [X] (deftest assoc.31
  - [X] (deftest assoc.order.1
  - [X] (deftest assoc.order.2
  - [X] (deftest assoc.order.3
  - [X] (deftest assoc.order.4
  - [ ] (deftest assoc.allow-other-keys.1
  - [X] (deftest assoc.allow-other-keys.2
  - [X] (deftest assoc.allow-other-keys.3
  - [X] (deftest assoc.allow-other-keys.4
  - [ ] (deftest assoc.allow-other-keys.5
  - [X] (deftest assoc.keywords.6
  - [X] (deftest assoc.keywords.7
  - [X] (deftest assoc.error.1
  - [X] (deftest assoc.error.2
  - [X] (deftest assoc.error.3
  - [X] (deftest assoc.error.4
  - [X] (deftest assoc.error.5
  - [X] (deftest assoc.error.6
  - [X] (deftest assoc.error.7
  - [X] (deftest assoc.error.8
  - [X] (deftest assoc.error.9
  - [X] (deftest assoc.error.10
  - [X] (deftest assoc.error.11
  - [ ] (deftest assoc.error.12
**** cons.lsp [88%]
  - [X] (deftest cons-of-symbols
  - [X] (deftest cons-with-nil
  - [X] (deftest cons-eq-equal
  - [X] (deftest cons-equal-list
  - [X] (deftest cons.order.1
  - [ ] (def-fold-test cons.fold.1 (cons 'a 'b))
  - [X] (deftest cons.error.1
  - [X] (deftest cons.error.2
  - [X] (deftest cons.error.3
**** make-list.lsp [71%]
  - [X] (deftest make-list-empty.1
  - [X] (deftest make-list-empty.2
  - [X] (deftest make-list-no-initial-element
  - [X] (deftest make-list-with-initial-element
  - [X] (deftest make-list.allow-other-keys.1
  - [ ] (deftest make-list.allow-other-keys.2
  - [ ] (deftest make-list.allow-other-keys.3
  - [ ] (deftest make-list.allow-other-keys.4
  - [X] (deftest make-list.allow-other-keys.5
  - [X] (deftest make-list-repeated-keyword
  - [X] (deftest make-list.order.1
  - [X] (deftest make-list.order.2
  - [ ] (def-fold-test make-list.fold.1 (make-list 1))
  - [ ] (def-fold-test make-list.fold.2 (make-list 10 :initial-element 'x))
  - [ ] (deftest make-list.error.1
  - [X] (deftest make-list.error.3
  - [X] (deftest make-list.error.4
  - [X] (deftest make-list.error.5
  - [X] (deftest make-list.error.6
  - [X] (deftest make-list.error.7
  - [X] (deftest make-list.error.8
**** mapc.lsp [86%]
  - [X] (deftest mapc.1
  - [X] (deftest mapc.2
  - [X] (deftest mapc.3
  - [X] (deftest mapc.4
  - [ ] (deftest mapc.5
  - [X] (deftest mapc.6
  - [X] (deftest mapc.order.1
  - [ ] (deftest mapc.error.1
  - [X] (deftest mapc.error.2
  - [X] (deftest mapc.error.3
  - [X] (deftest mapc.error.4
  - [X] (deftest mapc.error.5
  - [X] (deftest mapc.error.6
  - [X] (deftest mapc.error.7
  - [X] (deftest mapc.error.8
**** union.lsp [63%]
  - [X] (deftest union.1
  - [X] (deftest union.2
  - [X] (deftest union.3
  - [X] (deftest union-4
  - [X] (deftest union.5
  - [X] (deftest union.6
  - [X] (deftest union.6-a
  - [X] (deftest union.7
  - [X] (deftest union.8
  - [ ] (deftest union.9
  - [ ] (deftest union.10
  - [ ] (deftest union.11
  - [X] (deftest union.12
  - [X] (deftest union.13
  - [X] (deftest union.14
  - [ ] (deftest union.15
  - [ ] (deftest union.16
  - [X] (deftest union.17
  - [X] (deftest union.18
  - [X] (deftest union.19
  - [ ] (deftest union.20
  - [ ] (deftest union.21
  - [ ] (deftest union.22
  - [X] (deftest union.23
  - [ ] (deftest union.24
  - [ ] (deftest union.25
  - [X] (deftest union.26
  - [X] (deftest union.27
  - [ ] (deftest union.28
  - [ ] (deftest union.29
  - [ ] (deftest union.30
  - [ ] (deftest union.31
  - [X] (deftest union.order.1
  - [X] (deftest union.order.2
  - [X] (deftest union.order.3
  - [ ] (deftest union.allow-other-keys.1
  - [X] (deftest union.allow-other-keys.2
  - [X] (deftest union.allow-other-keys.3
  - [X] (deftest union.allow-other-keys.4
  - [ ] (deftest union.allow-other-keys.5
  - [ ] (deftest union.allow-other-keys.6
  - [ ] (deftest union.allow-other-keys.7
  - [X] (deftest union.keywords.9
  - [ ] (def-fold-test union.fold.1 (union '(a b c d e) '(d x y a w c)))
  - [X] (deftest union.error.1
  - [X] (deftest union.error.2
  - [X] (deftest union.error.3
  - [X] (deftest union.error.4
  - [X] (deftest union.error.5
  - [X] (deftest union.error.6
  - [X] (deftest union.error.7
  - [X] (deftest union.error.8
  - [X] (deftest union.error.9
  - [X] (deftest union.error.10
  - [X] (deftest union.error.11
  - [X] (deftest union.error.12
  - [ ] (deftest union.error.13
  - [ ] (deftest union.error.14
**** cons-test-03.lsp [0%]
  - [ ] (deftest typep-nil-list
  - [ ] (deftest typep-symbol-list
  - [ ] (deftest typep-singleton-list-list
  - [ ] (deftest typep-circular-list-list
  - [ ] (deftest typep-longer-list-list
**** maplist.lsp [85%]
  - [X] (deftest maplist.1
  - [X] (deftest maplist.2
  - [X] (deftest maplist.3
  - [X] (deftest maplist.4
  - [X] (deftest maplist.5
  - [X] (deftest maplist.6
  - [X] (deftest maplist.7
  - [X] (deftest maplist.order.1
  - [ ] (def-fold-test maplist.fold.1 (maplist 'car '(a b c d e)))
  - [ ] (def-fold-test maplist.fold.2 (maplist #'cadr '(a b c d e)))
  - [ ] (deftest maplist.error.1
  - [X] (deftest maplist.error.2
  - [X] (deftest maplist.error.3
  - [X] (deftest maplist.error.4
  - [X] (deftest maplist.error.5
  - [X] (deftest maplist.error.6
  - [X] (deftest maplist.error.7
  - [X] (deftest maplist.error.8
  - [X] (deftest maplist.error.9
  - [X] (deftest maplist.error.10
  - [X] (deftest maplist.error.11
**** get-properties.lsp [37%]
  - [ ] (deftest get-properties.1
  - [ ] (deftest get-properties.2
  - [ ] (deftest get-properties.3
  - [ ] (deftest get-properties.4
  - [ ] (deftest get-properties.5
  - [ ] (deftest get-properties.6
  - [ ] (deftest get-properties.7
  - [ ] (deftest get-properties.8
  - [ ] (deftest get-properties.9
  - [ ] (deftest get-properties.order.1
  - [X] (deftest get-properties.error.1
  - [X] (deftest get-properties.error.2
  - [X] (deftest get-properties.error.3
  - [X] (deftest get-properties.error.4
  - [X] (deftest get-properties.error.5
  - [X] (deftest get-properties.error.6
**** pop.lsp [66%]
  - [X] (deftest pop.1
  - [X] (deftest pop.2
  - [ ] (deftest pop.3
  - [X] (deftest pop.order.1
  - [X] (deftest push-and-pop
  - [ ] (def-macro-test pop.error.1 (pop x))
**** copy-tree.lsp [50%]
  - [X] (deftest copy-tree.1
  - [ ] (deftest copy-tree.2
  - [X] (deftest copy-tree.order.1
  - [ ] (def-fold-test copy-tree.fold.1 (copy-tree '(a . b)))
  - [ ] (def-fold-test copy-tree.fold.2 (copy-tree '(a)))
  - [ ] (def-fold-test copy-tree.fold.3 (copy-tree '(a b c d e)))
  - [X] (deftest copy-tree.error.1
  - [X] (deftest copy-tree.error.2
**** rassoc.lsp [45%]
  - [X] (deftest rassoc.1
  - [X] (deftest rassoc.2
  - [X] (deftest rassoc.3
  - [X] (deftest rassoc.4
  - [X] (deftest rassoc.5
  - [X] (deftest rassoc.6
  - [X] (deftest rassoc.7
  - [X] (deftest rassoc.8
  - [X] (deftest rassoc.9
  - [X] (deftest rassoc.10
  - [X] (deftest rassoc.11
  - [ ] (deftest rassoc.12
  - [ ] (deftest rassoc.13
  - [ ] (deftest rassoc.14
  - [ ] (deftest rassoc.15
  - [ ] (deftest rassoc.16
  - [ ] (deftest rassoc.17
  - [ ] (deftest rassoc.18
  - [ ] (deftest rassoc.19
  - [ ] (deftest rassoc.20
  - [ ] (deftest rassoc.21
  - [ ] (deftest rassoc.22
  - [ ] (deftest rassoc.23
  - [ ] (deftest rassoc.24
  - [ ] (deftest rassoc.25
  - [ ] (deftest rassoc.26
  - [ ] (deftest rassoc.27
  - [X] (deftest rassoc.order.1
  - [ ] (deftest rassoc.order.2
  - [ ] (deftest rassoc.order.3
  - [ ] (deftest rassoc.order.4
  - [ ] (deftest rassoc.allow-other-keys.1
  - [ ] (deftest rassoc.allow-other-keys.2
  - [ ] (deftest rassoc.allow-other-keys.3
  - [ ] (deftest rassoc.allow-other-keys.4
  - [ ] (deftest rassoc.allow-other-keys.5
  - [ ] (deftest rassoc.keywords.6
  - [X] (deftest rassoc.error.1
  - [X] (deftest rassoc.error.2
  - [X] (deftest rassoc.error.3
  - [X] (deftest rassoc.error.4
  - [X] (deftest rassoc.error.5
  - [X] (deftest rassoc.error.6
  - [X] (deftest rassoc.error.7
  - [X] (deftest rassoc.error.8
  - [X] (deftest rassoc.error.9
  - [X] (deftest rassoc.error.10
  - [ ] (deftest rassoci.error.11
**** rplacd.lsp [85%]
  - [X] (deftest rplacd.1
  - [X] (deftest rplacd.order.1
  - [ ] (deftest rplacd.error.1
  - [X] (deftest rplacd.error.2
  - [X] (deftest rplacd.error.3
  - [X] (deftest rplacd.error.4
  - [X] (deftest rplacd.error.6
**** assoc-if.lsp [35%]
  - [ ] (deftest assoc-if.1
  - [ ] (deftest assoc-if.2
  - [ ] (deftest assoc-if.3
  - [ ] (deftest assoc-if.4
  - [ ] (deftest assoc-if.5
  - [ ] (deftest assoc-if.order.1
  - [ ] (deftest assoc-if.order.2
  - [ ] (deftest assoc-if.allow-other-keys.1
  - [ ] (deftest assoc-if.allow-other-keys.2
  - [ ] (deftest assoc-if.allow-other-keys.3
  - [ ] (deftest assoc-if.allow-other-keys.4
  - [ ] (deftest assoc-if.allow-other-keys.5
  - [ ] (deftest assoc-if.keywords.6
  - [ ] (deftest assoc-if.keywords.7
  - [ ] (deftest assoc-if.env.1
  - [X] (deftest assoc-if.error.1
  - [X] (deftest assoc-if.error.2
  - [X] (deftest assoc-if.error.3
  - [X] (deftest assoc-if.error.4
  - [X] (deftest assoc-if.error.5
  - [X] (deftest assoc-if.error.6
  - [X] (deftest assoc-if.error.7
  - [X] (deftest assoc-if.error.8
  - [ ] (deftest assoc-if.error.9
  - [ ] (deftest assoc-if.error.10
  - [X] (deftest assoc-if.error.11
  - [X] (deftest assoc-if.error.12
  - [ ] (deftest assoc-if.error.13
**** nsublis.lsp [29%]
  - [ ] (deftest nsublis.1
  - [ ] (deftest nsublis.2
  - [ ] (deftest nsublis.3
  - [ ] (deftest nsublis.4
  - [ ] (deftest nsublis.5
  - [ ] (deftest nsublis.6
  - [ ] (deftest nsublis.7
  - [ ] (deftest nsublis.8
  - [ ] (deftest nsublis.9
  - [ ] (deftest nsublis.10
  - [ ] (deftest nsublis.11
  - [ ] (deftest nsublis.order.1
  - [ ] (deftest nsublis.order.2
  - [ ] (deftest nsublis.allow-other-keys.1
  - [ ] (deftest nsublis.allow-other-keys.2
  - [ ] (deftest nsublis.allow-other-keys.3
  - [ ] (deftest nsublis.allow-other-keys.4
  - [ ] (deftest nsublis.allow-other-keys.5
  - [ ] (deftest nsublis.keywords.6
  - [X] (deftest nsublis.error.1
  - [X] (deftest nsublis.error.2
  - [X] (deftest nsublis.error.3
  - [X] (deftest nsublis.error.4
  - [X] (deftest nsublis.error.5
  - [X] (deftest nsublis.error.6
  - [X] (deftest nsublis.error.7
  - [X] (deftest nsublis.error.8
**** member-if.lsp [75%]
  - [X] (deftest member-if.1
  - [X] (deftest member-if.2
  - [X] (deftest member-if.3
  - [ ] (deftest member-if.4
  - [X] (deftest member-if.5
  - [X] (deftest member-if.order.1
  - [X] (deftest member-if.order.2
  - [X] (deftest member-if.keywords.1
  - [X] (deftest member-if.allow-other-keys.2
  - [ ] (deftest member-if.allow-other-keys.3
  - [X] (deftest member-if.allow-other-keys.4
  - [ ] (deftest member-if.allow-other-keys.5
  - [ ] (deftest member-if.allow-other-keys.6
  - [ ] (deftest member-if.allow-other-keys.7
  - [ ] (deftest member-if.error.1
  - [X] (deftest member-if.error.2
  - [X] (deftest member-if.error.3
  - [X] (deftest member-if.error.4
  - [X] (deftest member-if.error.5
  - [X] (deftest member-if.error.6
  - [X] (deftest member-if.error.7
  - [X] (deftest member-if.error.8
  - [X] (deftest member-if.error.9
  - [X] (deftest member-if.error.10
**** rassoc-if.lsp [45%]
  - [ ] (deftest rassoc-if.1
  - [ ] (deftest rassoc-if.2
  - [ ] (deftest rassoc-if.3
  - [ ] (deftest rassoc-if.4
  - [ ] (deftest rassoc-if.order.1
  - [ ] (deftest rassoc-if.order.2
  - [ ] (deftest rassoc-if.allow-other-keys.1
  - [ ] (deftest rassoc-if.allow-other-keys.2
  - [ ] (deftest rassoc-if.allow-other-keys.3
  - [ ] (deftest rassoc-if.allow-other-keys.4
  - [ ] (deftest rassoc-if.allow-other-keys.5
  - [ ] (deftest rassoc-if.keywords.6
  - [X] (deftest rassoc-if.error.1
  - [X] (deftest rassoc-if.error.2
  - [X] (deftest rassoc-if.error.3
  - [X] (deftest rassoc-if.error.4
  - [X] (deftest rassoc-if.error.5
  - [X] (deftest rassoc-if.error.6
  - [X] (deftest rassoc-if.error.7
  - [X] (deftest rassoc-if.error.8
  - [X] (deftest rassoc-if.error.9
  - [X] (deftest rassoc-if.error.10
  - [X] (deftest rassoc-if.error.11
  - [ ] (deftest rassoc-if.error.12
**** push.lsp [55%]
  - [X] (deftest push.1
  - [X] (deftest push.2
  - [X] (deftest push.3
  - [ ] (deftest push.4
  - [ ] (deftest push.5
  - [X] (deftest push.order.1
  - [ ] (deftest push.order.2
  - [X] (deftest push.order.3
  - [ ] (def-macro-test push.error.1 (push x y))
**** nintersection.lsp [25%]
  - [ ] (deftest nintersection.1
  - [ ] (deftest nintersection.2
  - [ ] (deftest nintersection.3
  - [ ] (deftest nintersection.4
  - [ ] (deftest nintersection.5
  - [ ] (deftest nintersection.6
  - [ ] (deftest nintersection.7
  - [ ] (deftest nintersection.8
  - [ ] (deftest nintersection.9
  - [ ] (deftest nintersection.9-a
  - [ ] (deftest nintersection.9-b
  - [ ] (deftest nintersection.10
  - [ ] (deftest nintersection.11
  - [ ] (deftest nintersection.12
  - [ ] (deftest nintersection.13
  - [ ] (deftest nintersection.14
  - [ ] (deftest nintersection.15
  - [ ] (deftest nintersection.16
  - [ ] (deftest nintersection.17
  - [ ] (deftest nintersection.18
  - [ ] (deftest nintersection.order.1
  - [ ] (deftest nintersection.order.2
  - [ ] (deftest nintersection.order.3
  - [ ] (deftest nintersection.order.4
  - [ ] (deftest nintersection.order.5
  - [ ] (deftest nintersection.allow-other-keys.1
  - [ ] (deftest nintersection.allow-other-keys.2
  - [ ] (deftest nintersection.allow-other-keys.3
  - [ ] (deftest nintersection.allow-other-keys.4
  - [ ] (deftest nintersection.allow-other-keys.5
  - [ ] (deftest nintersection.allow-other-keys.6
  - [ ] (deftest nintersection.allow-other-keys.7
  - [ ] (deftest nintersection.keywords.8
  - [ ] (deftest nintersection.allow-other-keys.9
  - [X] (deftest nintersection.error.1
  - [X] (deftest nintersection.error.2
  - [X] (deftest nintersection.error.3
  - [X] (deftest nintersection.error.4
  - [X] (deftest nintersection.error.5
  - [X] (deftest nintersection.error.6
  - [X] (deftest nintersection.error.7
  - [X] (deftest nintersection.error.8
  - [X] (deftest nintersection.error.9
  - [X] (deftest nintersection.error.10
  - [X] (deftest nintersection.error.11
  - [X] (deftest nintersection.error.12
  - [ ] (deftest nintersection.error.13
  - [ ] (deftest nintersection.error.14
**** intersection.lsp [80%]
  - [X] (deftest intersection.1
  - [X] (deftest intersection.2
  - [X] (deftest intersection.3
  - [X] (deftest intersection.4
  - [X] (deftest intersection.5
  - [X] (deftest intersection.6
  - [X] (deftest intersection.7
  - [X] (deftest intersection.8
  - [X] (deftest intersection.9
  - [X] (deftest intersection.9-a
  - [X] (deftest intersection.9-b
  - [X] (deftest intersection.10
  - [X] (deftest intersection.11
  - [X] (deftest intersection.11-a
  - [ ] (deftest intersection.12
  - [X] (deftest intersection.13
  - [X] (deftest intersection.13-a
  - [ ] (deftest intersection.14
  - [X] (deftest intersection.15
  - [X] (deftest intersection.16
  - [X] (deftest intersection.17
  - [X] (deftest intersection.18
  - [X] (deftest intersection.order.1
  - [X] (deftest intersection.order.2
  - [ ] (deftest intersection.order.3
  - [X] (deftest intersection.order.4
  - [X] (deftest intersection.order.5
  - [ ] (deftest intersection.allow-other-keys.1
  - [X] (deftest intersection.allow-other-keys.2
  - [X] (deftest intersectionallow-other-keys.3
  - [X] (deftest intersection.allow-other-keys.4
  - [ ] (deftest intersection.allow-other-keys.5
  - [ ] (deftest intersection.allow-other-keys.6
  - [ ] (deftest intersection.allow-other-keys.7
  - [X] (deftest intersection.keywords.8
  - [ ] (def-fold-test intersection.fold.1 (intersection '(a b c d e f) '(d w a x b y)))
  - [X] (deftest intersection.error.1
  - [X] (deftest intersection.error.2
  - [X] (deftest intersection.error.3
  - [X] (deftest intersection.error.4
  - [X] (deftest intersection.error.5
  - [X] (deftest intersection.error.6
  - [X] (deftest intersection.error.7
  - [X] (deftest intersection.error.8
  - [X] (deftest intersection.error.9
  - [X] (deftest intersection.error.10
  - [X] (deftest intersection.error.11
  - [X] (deftest intersection.error.12
  - [ ] (deftest intersection.error.13
  - [ ] (deftest intersection.error.14
**** copy-list.lsp [75%]
  - [X] (deftest copy-list.1
  - [X] (deftest copy-list.2
  - [X] (deftest copy-list.3
  - [X] (deftest copy-list.4
  - [ ] (def-fold-test copy-list.fold.1 (copy-list '(a b c d)))
  - [ ] (def-fold-test copy-list.fold.2 (copy-list '(a . b)))
  - [X] (deftest copy-list.error.1
  - [X] (deftest copy-list.error.2
**** member.lsp [84%]
  - [X] (deftest member.1
  - [X] (deftest member.2
  - [X] (deftest member.3
  - [X] (deftest member.4
  - [X] (deftest member.5
  - [X] (deftest member.6
  - [X] (deftest member.7
  - [ ] (deftest member.8
  - [X] (deftest member.9
  - [X] (deftest member.10
  - [X] (deftest member.11
  - [X] (deftest member.12
  - [X] (deftest member.13
  - [X] (deftest member.14
  - [X] (deftest member.15
  - [X] (deftest member.16
  - [X] (deftest member.16-a
  - [X] (deftest member.17
  - [X] (deftest member.18
  - [X] (deftest member.19
  - [X] (deftest member.20
  - [X] (deftest member.21
  - [X] (deftest member.order.1
  - [X] (deftest member.order.2
  - [X] (deftest member.order.3
  - [ ] (deftest member.order.4
  - [ ] (deftest member.order.5
  - [ ] (deftest member.allow-other-keys.1
  - [X] (deftest member.allow-other-keys.2
  - [X] (deftest member.allow-other-keys.3
  - [ ] (deftest member.allow-other-keys.4
  - [ ] (deftest member.allow-other-keys.5
  - [ ] (deftest member.keywords.6
  - [ ] (deftest member.error.1
  - [X] (deftest member.error.2
  - [X] (deftest member.error.3
  - [X] (deftest member.error.4
  - [X] (deftest member.error.5
  - [X] (deftest member.error.6
  - [X] (deftest member.error.7
  - [X] (deftest member.error.8
  - [X] (deftest member.error.9
  - [X] (deftest member.error.10
  - [X] (deftest member.error.11
  - [X] (deftest member.error.12
  - [X] (deftest member.error.13
  - [X] (deftest member.error.14
  - [X] (deftest member.error.15
  - [X] (deftest member.error.16
  - [X] (deftest member.error.17
**** copy-alist.lsp [42%]
  - [ ] (deftest copy-alist.1
  - [ ] (def-fold-test copy-alist.2 (copy-alist '((a . b) nil (c . d))))
  - [ ] (def-fold-test copy-alist.3 (car (copy-alist '((a . b) nil (c . d)))))
  - [ ] (def-fold-test copy-alist.4 (caddr (copy-alist '((a . b) nil (c . d)))))
  - [X] (deftest copy-alist.error.1
  - [X] (deftest copy-alist.error.2
  - [X] (deftest copy-alist.error.3
**** butlast.lsp [68%]
  - [X] (deftest butlast.1
  - [X] (deftest butlast.2
  - [X] (deftest butlast.3
  - [X] (deftest butlast.4
  - [X] (deftest butlast.5
  - [X] (deftest butlast.6
  - [ ] (deftest butlast.7
  - [ ] (deftest butlast.8
  - [ ] (deftest butlast.9
  - [X] (deftest butlast.order.1
  - [X] (deftest butlast.order.2
  - [ ] (def-fold-test butlast.fold.1 (butlast '(a b) 1))
  - [ ] (def-fold-test butlast.fold.2 (butlast '(a b c d e f) 3))
  - [ ] (def-fold-test butlast.fold.3 (butlast '(a b c d e f g h i) 7))
  - [X] (deftest butlast.error.1
  - [X] (deftest butlast.error.2
  - [X] (deftest butlast.error.3
  - [X] (deftest butlast.error.4
  - [X] (deftest butlast.error.5
**** set-difference.lsp [71%]
  - [X] (deftest set-difference.1
  - [X] (deftest set-difference.2
  - [X] (deftest set-difference.3
  - [ ] (deftest set-difference.4
  - [X] (deftest set-difference.5
  - [ ] (deftest set-difference.6
  - [X] (deftest set-difference.7
  - [X] (deftest set-difference.8
  - [X] (deftest set-difference.9
  - [X] (deftest set-difference.10
  - [X] (deftest set-difference.11
  - [X] (deftest set-difference.12
  - [ ] (deftest set-difference.13
  - [X] (deftest set-difference.14
  - [X] (deftest set-difference.15
  - [X] (deftest set-difference.16
  - [X] (deftest set-difference.17
  - [X] (deftest set-difference.18
  - [X] (deftest set-difference.19
  - [X] (deftest set-difference.order.1
  - [X] (deftest set-difference.order.2
  - [ ] (deftest set-difference.order.3
  - [ ] (deftest set-difference.allow-other-keys.1
  - [X] (deftest set-difference.allow-other-keys.2
  - [X] (deftest set-difference.allow-other-keys.3
  - [X] (deftest set-difference.allow-other-keys.4
  - [ ] (deftest set-difference.allow-other-keys.5
  - [ ] (deftest set-difference.allow-other-keys.6
  - [ ] (deftest set-difference.allow-other-keys.7
  - [ ] (deftest set-difference.keywords.8
  - [ ] (deftest set-difference.keywords.9
  - [ ] (def-fold-test set-difference.fold.1 (set-difference '(a b c d e f g h) '(b w h x e y)))
  - [X] (deftest set-difference.error.1
  - [X] (deftest set-difference.error.2
  - [X] (deftest set-difference.error.3
  - [X] (deftest set-difference.error.4
  - [X] (deftest set-difference.error.5
  - [X] (deftest set-difference.error.6
  - [X] (deftest set-difference.error.7
  - [X] (deftest set-difference.error.8
  - [X] (deftest set-difference.error.9
  - [X] (deftest set-difference.error.10
  - [X] (deftest set-difference.error.11
  - [X] (deftest set-difference.error.12
  - [ ] (deftest set-difference.error.13
  - [ ] (deftest set-difference.error.14
**** nset-exclusive-or.lsp [23%]
  - [ ] (deftest nset-exclusive-or.1
  - [ ] (deftest nset-exclusive-or.2
  - [ ] (deftest nset-exclusive-or.3
  - [ ] (deftest nset-exclusive-or.4
  - [ ] (deftest nset-exclusive-or.5
  - [ ] (deftest nset-exclusive-or.6
  - [ ] (deftest nset-exclusive-or.7
  - [ ] (deftest nset-exclusive-or.7-a
  - [ ] (deftest nset-exclusive-or.8
  - [ ] (deftest nset-exclusive-or.8-a
  - [ ] (deftest nset-exclusive-or.8-b
  - [ ] (deftest nset-exclusive-or.9
  - [ ] (deftest nset-exclusive-or.10
  - [ ] (deftest nset-exclusive-or.11
  - [ ] (deftest nset-exclusive-or.12
  - [ ] (deftest nset-exclusive-or.14
  - [ ] (deftest nset-exclusive-or.15
  - [ ] (deftest nset-exclusive-or.16
  - [ ] (deftest nset-exclusive-or.17
  - [ ] (deftest nset-exclusive-or.17-a
  - [ ] (deftest nset-exclusive-or.18
  - [ ] (deftest nset-exclusive-or.18-a
  - [ ] (deftest nset-exclusive-or.order.1
  - [ ] (deftest nset-exclusive-or.order.2
  - [ ] (deftest nset-exclusive-or.order.3
  - [ ] (deftest nset-exclusive-or.order.4
  - [ ] (deftest nset-exclusive-or.order.5
  - [ ] (deftest nset-exclusive.allow-other-keys.1
  - [ ] (deftest nset-exclusive.allow-other-keys.2
  - [ ] (deftest nset-exclusive.allow-other-keys.3
  - [ ] (deftest nset-exclusive.allow-other-keys.4
  - [ ] (deftest nset-exclusive.allow-other-keys.5
  - [ ] (deftest nset-exclusive.allow-other-keys.6
  - [ ] (deftest nset-exclusive.allow-other-keys.7
  - [ ] (deftest nset-exclusive.keywords.8
  - [ ] (deftest nset-exclusive.keywords.9
  - [ ] (deftest random-nset-exclusive-or
  - [X] (deftest nset-exclusive-or.error.1
  - [X] (deftest nset-exclusive-or.error.2
  - [X] (deftest nset-exclusive-or.error.3
  - [X] (deftest nset-exclusive-or.error.4
  - [X] (deftest nset-exclusive-or.error.5
  - [X] (deftest nset-exclusive-or.error.6
  - [X] (deftest nset-exclusive-or.error.7
  - [X] (deftest nset-exclusive-or.error.8
  - [X] (deftest nset-exclusive-or.error.9
  - [X] (deftest nset-exclusive-or.error.10
  - [X] (deftest nset-exclusive-or.error.11
  - [X] (deftest nset-exclusive-or.error.12
  - [ ] (deftest nset-exclusive-or.error.13
  - [ ] (deftest nset-exclusive-or.error.14
**** sublis.lsp [28%]
  - [ ] (deftest sublis.1
  - [ ] (deftest sublis.2
  - [ ] (deftest sublis.3
  - [ ] (deftest sublis.4
  - [ ] (deftest sublis.5
  - [ ] (deftest sublis.6
  - [ ] (deftest sublis.7
  - [ ] (deftest sublis.8
  - [ ] (deftest sublis.9
  - [ ] (deftest sublis.10
  - [ ] (deftest sublis.order.1
  - [ ] (deftest sublis.order.2
  - [ ] (def-fold-test sublis.fold.1 (sublis '((a . b)) '(a x y . a)))
  - [ ] (deftest sublis.allow-other-keys.1
  - [ ] (deftest sublis.allow-other-keys.2
  - [ ] (deftest sublis.allow-other-keys.3
  - [ ] (deftest sublis.allow-other-keys.4
  - [ ] (deftest sublis.allow-other-keys.5
  - [ ] (deftest sublis.keywords.6
  - [X] (deftest sublis.error.1
  - [X] (deftest sublis.error.2
  - [X] (deftest sublis.error.3
  - [X] (deftest sublis.error.4
  - [X] (deftest sublis.error.5
  - [X] (deftest sublis.error.6
  - [X] (deftest sublis.error.7
  - [X] (deftest sublis.error.8
  - [ ] (deftest sublis.shared
**** acons.lsp [68%]
  - [X] (deftest acons.1
  - [X] (deftest acons.2
  - [X] (deftest acons.3
  - [X] (deftest acons.4
  - [X] (deftest acons.5
  - [X] (deftest acons.6
  - [ ] (deftest acons.7
  - [ ] (deftest acons.8
  - [ ] (deftest acons.9
  - [X] (deftest acons.order.1
  - [ ] (def-fold-test acons.fold.1 (acons 'x 'y nil))
  - [ ] (def-fold-test acons.fold.2 (acons 1 2 '((3 . 4) (5 . 6))))
  - [X] (deftest acons.error.1
  - [X] (deftest acons.error.2
  - [X] (deftest acons.error.3
  - [X] (deftest acons.error.4
**** subst-if-not.lsp [38%]
  - [ ] (deftest subst-if-not.1
  - [ ] (deftest subst-if-not.2
  - [ ] (deftest subst-if-not.3
  - [ ] (deftest subst-if-not.4
  - [ ] (deftest subst-if-not.5
  - [ ] (deftest subst-if-not.7
  - [ ] (def-fold-test subst-if-not.fold.1 (subst-if-not 'a #'consp '((1 . 2) 3 . 4)))
  - [ ] (deftest subst-if-not.allow-other-keys.1
  - [ ] (deftest subst-if-not.allow-other-keys.2
  - [ ] (deftest subst-if-not.allow-other-keys.3
  - [ ] (deftest subst-if-not.allow-other-keys.4
  - [ ] (deftest subst-if-not.allow-other-keys.5
  - [ ] (deftest subst-if-not.keywords.6
  - [X] (deftest subst-if-not.error.1
  - [X] (deftest subst-if-not.error.2
  - [X] (deftest subst-if-not.error.3
  - [X] (deftest subst-if-not.error.4
  - [X] (deftest subst-if-not.error.5
  - [X] (deftest subst-if-not.error.6
  - [X] (deftest subst-if-not.error.7
  - [X] (deftest subst-if-not.error.8
**** nconc.lsp [87%]
  - [X] (deftest nconc.1
  - [X] (deftest nconc.2
  - [X] (deftest nconc.4
  - [ ] (deftest nconc.5
  - [X] (deftest nconc.6
  - [X] (deftest nconc.7
  - [X] (deftest nconc.order.1
  - [X] (deftest nconc.order.2
**** ldiff.lsp [15%]
  - [ ] (deftest ldiff.1
  - [ ] (deftest ldiff.2
  - [ ] (deftest ldiff.3
  - [ ] (deftest ldiff.4
  - [ ] (deftest ldiff.5
  - [ ] (deftest ldiff.6
  - [ ] (deftest ldiff.7
  - [ ] (deftest ldiff.8
  - [ ] (deftest ldiff.order.1
  - [ ] (def-fold-test ldiff.fold.1 (ldiff '(a b c) 'x))
  - [ ] (def-fold-test ldiff.fold.2 (let ((x '(a b c))) (ldiff x (cddr x))))
  - [ ] (deftest ldiff.error.1
  - [ ] (deftest ldiff.error.2
  - [ ] (deftest ldiff.error.3
  - [ ] (deftest ldiff.error.4
  - [ ] (deftest ldiff.error.5
  - [X] (deftest ldiff.error.6
  - [X] (deftest ldiff.error.7
  - [X] (deftest ldiff.error.8
  - [ ] (deftest ldiff-12
**** nset-difference.lsp [26%]
  - [ ] (deftest nset-difference.1
  - [ ] (deftest nset-difference.2
  - [ ] (deftest nset-difference.3
  - [ ] (deftest nset-difference.4
  - [ ] (deftest nset-difference.5
  - [ ] (deftest nset-difference.6
  - [ ] (deftest nset-difference.7
  - [ ] (deftest nset-difference.8
  - [ ] (deftest nset-difference.9
  - [ ] (deftest nset-difference.10
  - [ ] (deftest nset-difference.11
  - [ ] (deftest nset-difference.12
  - [ ] (deftest nset-difference.13
  - [ ] (deftest nset-difference.14
  - [ ] (deftest nset-difference.15
  - [ ] (deftest nset-difference.16
  - [ ] (deftest nset-difference.17
  - [ ] (deftest nset-difference.18
  - [ ] (deftest nset-difference.19
  - [ ] (deftest nset-difference.order.1
  - [ ] (deftest nset-difference.order.2
  - [ ] (deftest nset-difference.order.3
  - [ ] (deftest nset-difference.allow-other-keys.1
  - [ ] (deftest nset-difference.allow-other-keys.2
  - [ ] (deftest nset-difference.allow-other-keys.3
  - [ ] (deftest nset-difference.allow-other-keys.4
  - [ ] (deftest nset-difference.allow-other-keys.5
  - [ ] (deftest nset-difference.allow-other-keys.6
  - [ ] (deftest nset-difference.allow-other-keys.7
  - [ ] (deftest nset-difference.keywords.8
  - [ ] (deftest nset-difference.keywords.9
  - [X] (deftest nset-difference.error.1
  - [X] (deftest nset-difference.error.2
  - [X] (deftest nset-difference.error.3
  - [X] (deftest nset-difference.error.4
  - [X] (deftest nset-difference.error.5
  - [X] (deftest nset-difference.error.6
  - [X] (deftest nset-difference.error.7
  - [X] (deftest nset-difference.error.8
  - [X] (deftest nset-difference.error.9
  - [X] (deftest nset-difference.error.10
  - [X] (deftest nset-difference.error.11
  - [X] (deftest nset-difference.error.12
  - [ ] (deftest nset-difference.error.13
  - [ ] (deftest nset-difference.error.14
**** cxr.lsp [89%]
  - [X] (deftest cons.23
  - [X] (deftest cons.24
  - [X] (deftest cons.25
  - [X] (deftest cons.26
  - [X] (deftest cons.27
  - [X] (deftest cons.28
  - [X] (deftest cons.29
  - [X] (deftest cons.30
  - [X] (deftest cons.31
  - [X] (deftest cons.32
  - [X] (deftest cons.33
  - [X] (deftest cons.34
  - [X] (deftest cons.36
  - [X] (deftest cons.37
  - [ ] (deftest cons.38
  - [ ] (deftest cons.39
  - [ ] (deftest cons.40
  - [ ] (deftest cons.41
  - [ ] (deftest cons.42
  - [ ] (deftest cons.43
  - [ ] (deftest cons.44
  - [ ] (deftest cons.45
  - [ ] (deftest cons.46
  - [ ] (deftest cons.47
  - [ ] (deftest cons.48
  - [ ] (deftest cons.49
  - [X] (deftest cons.50
  - [X] (deftest cons.51
  - [X] (deftest cons.52
  - [X] (deftest cons.53
  - [X] (deftest car.1
  - [X] (deftest car-nil
  - [ ] (deftest car.error.1
  - [X] (deftest car.error.2
  - [X] (deftest car.order.1
  - [X] (deftest cdr.1
  - [X] (deftest cdr-nil
  - [X] (deftest cdr.order.1
  - [ ] (deftest cdr.error.1
  - [X] (deftest cdr.error.2
  - [X] (deftest caar.error.1
  - [X] (deftest caar.error.2
  - [X] (deftest cadr.error.1
  - [X] (deftest cadr.error.2
  - [X] (deftest cdar.error.1
  - [X] (deftest cdar.error.2
  - [X] (deftest cddr.error.1
  - [X] (deftest cddr.error.2
  - [X] (deftest caaar.error.1
  - [X] (deftest caaar.error.2
  - [X] (deftest caaar.error.3
  - [X] (deftest caadr.error.1
  - [X] (deftest caadr.error.2
  - [X] (deftest caadr.error.3
  - [X] (deftest cadar.error.1
  - [X] (deftest cadar.error.2
  - [X] (deftest cadar.error.3
  - [X] (deftest caddr.error.1
  - [X] (deftest caddr.error.2
  - [X] (deftest caddr.error.3
  - [X] (deftest cdaar.error.1
  - [X] (deftest cdaar.error.2
  - [X] (deftest cdaar.error.3
  - [X] (deftest cdadr.error.1
  - [X] (deftest cdadr.error.2
  - [X] (deftest cdadr.error.3
  - [X] (deftest cddar.error.1
  - [X] (deftest cddar.error.2
  - [X] (deftest cddar.error.3
  - [X] (deftest cdddr.error.1
  - [X] (deftest cdddr.error.2
  - [X] (deftest cdddr.error.3
  - [X] (deftest caaaar.error.1
  - [X] (deftest caaaar.error.2
  - [X] (deftest caaaar.error.3
  - [X] (deftest caaaar.error.4
  - [X] (deftest caaadr.error.1
  - [X] (deftest caaadr.error.2
  - [X] (deftest caaadr.error.3
  - [X] (deftest caaadr.error.4
  - [X] (deftest caadar.error.1
  - [X] (deftest caadar.error.2
  - [X] (deftest caadar.error.3
  - [X] (deftest caadar.error.4
  - [X] (deftest caaddr.error.1
  - [X] (deftest caaddr.error.2
  - [X] (deftest caaddr.error.3
  - [X] (deftest caaddr.error.4
  - [X] (deftest cadaar.error.1
  - [X] (deftest cadaar.error.2
  - [X] (deftest cadaar.error.3
  - [X] (deftest cadaar.error.4
  - [X] (deftest cadadr.error.1
  - [X] (deftest cadadr.error.2
  - [X] (deftest cadadr.error.3
  - [X] (deftest cadadr.error.4
  - [X] (deftest caddar.error.1
  - [X] (deftest caddar.error.2
  - [X] (deftest caddar.error.3
  - [X] (deftest caddar.error.4
  - [X] (deftest cadddr.error.1
  - [X] (deftest cadddr.error.2
  - [X] (deftest cadddr.error.3
  - [X] (deftest cadddr.error.4
  - [X] (deftest cdaaar.error.1
  - [X] (deftest cdaaar.error.2
  - [X] (deftest cdaaar.error.3
  - [X] (deftest cdaaar.error.4
  - [X] (deftest cdaadr.error.1
  - [X] (deftest cdaadr.error.2
  - [X] (deftest cdaadr.error.3
  - [X] (deftest cdaadr.error.4
  - [X] (deftest cdadar.error.1
  - [X] (deftest cdadar.error.2
  - [X] (deftest cdadar.error.3
  - [X] (deftest cdadar.error.4
  - [X] (deftest cdaddr.error.1
  - [X] (deftest cdaddr.error.2
  - [X] (deftest cdaddr.error.3
  - [X] (deftest cdaddr.error.4
  - [X] (deftest cddaar.error.1
  - [X] (deftest cddaar.error.2
  - [X] (deftest cddaar.error.3
  - [X] (deftest cddaar.error.4
  - [X] (deftest cddadr.error.1
  - [X] (deftest cddadr.error.2
  - [X] (deftest cddadr.error.3
  - [X] (deftest cddadr.error.4
  - [X] (deftest cdddar.error.1
  - [X] (deftest cdddar.error.2
  - [X] (deftest cdddar.error.3
  - [X] (deftest cdddar.error.4
  - [X] (deftest cddddr.error.1
  - [X] (deftest cddddr.error.2
  - [X] (deftest cddddr.error.3
  - [X] (deftest cddddr.error.4
**** cons-test-01.lsp [15%]
  - [ ] (deftest subtypep-null-list
  - [ ] (deftest subtypep-cons-list
  - [ ] (deftest subtypep-null-cons
  - [ ] (deftest subtypep-cons-null
  - [ ] (deftest subtypep-null-atom
  - [ ] (deftest subtypep-cons-atom
  - [ ] (deftest subtypep-atom-cons
  - [ ] (deftest subtypep-atom-list
  - [ ] (deftest subtypep-list-atom
  - [ ] (deftest null-null-universe
  - [ ] (deftest function-bound-cons-fns
  - [X] (deftest macro-bound-cons-macros
  - [X] (deftest no-cons-fns-are-macros
**** mapcon.lsp [84%]
  - [X] (deftest mapcon.1
  - [X] (deftest mapcon.2
  - [X] (deftest mapcon.3
  - [ ] (deftest mapcon.4
  - [X] (deftest mapcon.order.1
  - [ ] (deftest mapcon.error.1
  - [X] (deftest mapcon.error.2
  - [X] (deftest mapcon.error.3
  - [X] (deftest mapcon.error.4
  - [X] (deftest mapcon.error.5
  - [X] (deftest mapcon.error.6
  - [X] (deftest mapcon.error.7
  - [X] (deftest mapcon.error.8
**** listp.lsp [88%]
  - [X] (deftest listp-nil
  - [X] (deftest listp-symbol
  - [X] (deftest listp-singleton-list
  - [X] (deftest listp-circular-list
  - [X] (deftest listp-longer-list
  - [ ] (deftest listp-universe
  - [X] (deftest listp.order.1
  - [X] (deftest listp.error.1
  - [X] (deftest listp.error.2
**** nsubst.lsp [48%]
  - [X] (deftest nsubst.1
  - [X] (deftest nsubst.2
  - [ ] (deftest nsubst.3
  - [X] (deftest nsubst.4
  - [X] (deftest nsubst.5
  - [ ] (deftest nsubst.6
  - [ ] (deftest nsubst.7
  - [ ] (deftest nsubst.8
  - [ ] (deftest nsubst.9
  - [ ] (deftest nsubst.10
  - [ ] (deftest nsubst.11
  - [ ] (deftest nsubst.order.1
  - [ ] (deftest nsubst.order.2
  - [ ] (deftest nsubst.allow-other-keys.1
  - [ ] (deftest nsubst.allow-other-keys.2
  - [ ] (deftest nsubst.allow-other-keys.3
  - [ ] (deftest nsubst.allow-other-keys.4
  - [ ] (deftest nsubst.allow-other-keys.5
  - [ ] (deftest nsubst.keywords.6
  - [X] (deftest nsubst.error.1
  - [X] (deftest nsubst.error.2
  - [X] (deftest nsubst.error.3
  - [X] (deftest nsubst.error.4
  - [X] (deftest nsubst.error.5
  - [X] (deftest nsubst.error.6
  - [X] (deftest nsubst.error.7
  - [X] (deftest nsubst.error.8
  - [X] (deftest nsubst.error.9
  - [X] (deftest nsubst.error.10
**** nunion.lsp [21%]
  - [ ] (deftest nunion.1
  - [ ] (deftest nunion.2
  - [ ] (deftest nunion.3
  - [ ] (deftest nunion.4
  - [ ] (deftest nunion.5
  - [ ] (deftest nunion.6
  - [ ] (deftest nunion.6-a
  - [ ] (deftest nunion.7
  - [ ] (deftest nunion.8
  - [ ] (deftest nunion.9
  - [ ] (deftest nunion.10
  - [ ] (deftest nunion.11
  - [ ] (deftest nunion.12
  - [ ] (deftest nunion.13
  - [ ] (deftest nunion.14
  - [ ] (deftest nunion.15
  - [ ] (deftest nunion.16
  - [ ] (deftest nunion.17
  - [ ] (deftest nunion.18
  - [ ] (deftest nunion.19
  - [ ] (deftest nunion.20
  - [ ] (deftest nunion.21
  - [ ] (deftest nunion.22
  - [ ] (deftest nunion.23
  - [ ] (deftest nunion.24
  - [ ] (deftest nunion.25
  - [ ] (deftest nunion.26
  - [ ] (deftest nunion.27
  - [ ] (deftest nunion.28
  - [ ] (deftest nunion.29
  - [ ] (deftest nunion.30
  - [ ] (deftest nunion.31
  - [ ] (deftest nunion.order.1
  - [ ] (deftest nunion.order.2
  - [ ] (deftest nunion.order.3
  - [ ] (deftest nunion.allow-other-keys.1
  - [ ] (deftest nunion.allow-other-keys.2
  - [ ] (deftest nunion.allow-other-keys.3
  - [ ] (deftest nunion.allow-other-keys.4
  - [ ] (deftest nunion.allow-other-keys.5
  - [ ] (deftest nunion.allow-other-keys.6
  - [ ] (deftest nunion.allow-other-keys.7
  - [ ] (deftest nunion.keywords.9
  - [X] (deftest nunion.error.1
  - [X] (deftest nunion.error.2
  - [X] (deftest nunion.error.3
  - [X] (deftest nunion.error.4
  - [X] (deftest nunion.error.5
  - [X] (deftest nunion.error.6
  - [X] (deftest nunion.error.7
  - [X] (deftest nunion.error.8
  - [X] (deftest nunion.error.9
  - [X] (deftest nunion.error.10
  - [X] (deftest nunion.error.11
  - [X] (deftest nunion.error.12
  - [ ] (deftest nunion.error.13
  - [ ] (deftest nunion.error.14
**** rplaca.lsp [85%]
  - [X] (deftest rplaca.1
  - [X] (deftest rplaca.order.1
  - [ ] (deftest rplaca.error.1
  - [X] (deftest rplaca.error.2
  - [X] (deftest rplaca.error.3
  - [X] (deftest rplaca.error.4
  - [X] (deftest rplaca.error.6
**** atom.lsp [60%]
  - [ ] (deftest atom.1
  - [ ] (deftest atom.2
  - [X] (deftest atom.order.1
  - [X] (deftest atom.error.1
  - [X] (deftest atom.error.2
**** subst.lsp [46%]
  - [X] (deftest subst.1
  - [X] (deftest subst.2
  - [ ] (deftest subst.3
  - [X] (deftest subst.4
  - [X] (deftest subst.5
  - [ ] (deftest subst.6
  - [ ] (deftest subst.7
  - [ ] (deftest subst.8
  - [ ] (deftest subst.9
  - [ ] (deftest subst.10
  - [ ] (deftest subst.11
  - [ ] (deftest subst.order.1
  - [ ] (deftest subst.order.2
  - [ ] (def-fold-test subst.fold.1 (subst 'a 'b '(a b c (a . b) . a)))
  - [ ] (deftest subst.allow-other-keys.1
  - [ ] (deftest subst.allow-other-keys.2
  - [ ] (deftest subst.allow-other-keys.3
  - [ ] (deftest subst.allow-other-keys.4
  - [ ] (deftest subst.allow-other-keys.5
  - [ ] (deftest subst.keywords.6
  - [X] (deftest subst.error.1
  - [X] (deftest subst.error.2
  - [X] (deftest subst.error.3
  - [X] (deftest subst.error.4
  - [X] (deftest subst.error.5
  - [X] (deftest subst.error.6
  - [X] (deftest subst.error.7
  - [X] (deftest subst.error.8
  - [X] (deftest subst.error.9
  - [X] (deftest subst.error.10
**** adjoin.lsp [78%]
  - [X] (deftest adjoin.1
  - [X] (deftest adjoin.2
  - [X] (deftest adjoin.3
  - [X] (deftest adjoin.4
  - [X] (deftest adjoin.5
  - [X] (deftest adjoin.6
  - [X] (deftest adjoin.7
  - [X] (deftest adjoin.8
  - [X] (deftest adjoin.9
  - [X] (deftest adjoin.10
  - [X] (deftest adjoin.11
  - [ ] (deftest adjoin.12
  - [X] (deftest adjoin.14
  - [X] (deftest adjoin.15
  - [X] (deftest adjoin.16
  - [X] (deftest adjoin.17
  - [ ] (deftest adjoin.18
  - [X] (deftest adjoin.19
  - [X] (deftest adjoin.20
  - [X] (deftest adjoin.21
  - [X] (deftest adjoin.22
  - [ ] (deftest adjoin.24
  - [X] (deftest adjoin.order.1
  - [ ] (deftest adjoin.order.2
  - [ ] (def-fold-test adjoin.fold.1 (adjoin 'x '(a b c nil d)))
  - [ ] (deftest adjoin.allow-other-keys.1
  - [X] (deftest adjoin.allow-other-keys.2
  - [X] (deftest adjoin.allow-other-keys.3
  - [ ] (deftest adjoin.allow-other-keys.4
  - [ ] (deftest adjoin.allow-other-keys.5
  - [ ] (deftest adjoin.repeat-key
  - [X] (deftest adjoin.error.1
  - [X] (deftest adjoin.error.2
  - [X] (deftest adjoin.error.3
  - [X] (deftest adjoin.error.4
  - [X] (deftest adjoin.error.5
  - [X] (deftest adjoin.error.6
  - [X] (deftest adjoin.error.7
  - [X] (deftest adjoin.error.8
  - [X] (deftest adjoin.error.9
  - [X] (deftest adjoin.error.10
**** nsubst-if.lsp [36%]
  - [ ] (deftest nsubst-if.1
  - [ ] (deftest nsubst-if.2
  - [ ] (deftest nsubst-if.3
  - [ ] (deftest nsubst-if.4
  - [ ] (deftest nsubst-if.5
  - [ ] (deftest nsubst-if.6
  - [ ] (deftest nsubst-if.7
  - [ ] (deftest nsubst-if.8
  - [ ] (deftest nsubst-if.allow-other-keys.1
  - [ ] (deftest nsubst-if.allow-other-keys.2
  - [ ] (deftest nsubst-if.allow-other-keys.3
  - [ ] (deftest nsubst-if.allow-other-keys.4
  - [ ] (deftest nsubst-if.allow-other-keys.5
  - [ ] (deftest nsubst-if.keywords.6
  - [X] (deftest nsubst-if.error.1
  - [X] (deftest nsubst-if.error.2
  - [X] (deftest nsubst-if.error.3
  - [X] (deftest nsubst-if.error.4
  - [X] (deftest nsubst-if.error.5
  - [X] (deftest nsubst-if.error.6
  - [X] (deftest nsubst-if.error.7
  - [X] (deftest nsubst-if.error.8
**** nth.lsp [100%]
  - [X] (deftest nth.1
  - [X] (deftest nth.2
  - [X] (deftest nth.order.1
  - [X] (deftest nth.order.2
  - [X] (deftest nth.error.1
  - [X] (deftest nth.error.2
  - [X] (deftest nth.error.3
  - [X] (deftest nth.error.4
**** revappend.lsp [81%]
  - [X] (deftest revappend.1
  - [X] (deftest revappend.2
  - [X] (deftest revappend.3
  - [X] (deftest revappend.4
  - [X] (deftest revappend.order.1
  - [ ] (def-fold-test revappend.fold.1 (revappend '(x) nil))
  - [ ] (def-fold-test revappend.fold.2 (revappend '(x y z) nil))
  - [X] (deftest revappend.error.1
  - [X] (deftest revappend.error.2
  - [X] (deftest revappend.error.3
  - [X] (deftest revappend.error.4
**** mapl.lsp [50%]
  - [ ] (deftest mapl.1
  - [ ] (deftest mapl.2
  - [ ] (deftest mapl.3
  - [ ] (deftest mapl.4
  - [ ] (deftest mapl.5
  - [ ] (deftest mapl.order.1
  - [ ] (deftest mapl.error.1
  - [X] (deftest mapl.error.2
  - [X] (deftest mapl.error.3
  - [X] (deftest mapl.error.4
  - [X] (deftest mapl.error.5
  - [X] (deftest mapl.error.6
  - [X] (deftest mapl.error.7
  - [X] (deftest mapl.error.8
**** nsubst-if-not.lsp [38%]
  - [ ] (deftest nsubst-if-not.1
  - [ ] (deftest nsubst-if-not.2
  - [ ] (deftest nsubst-if-not.3
  - [ ] (deftest nsubst-if-not.4
  - [ ] (deftest nsubst-if-not.5
  - [ ] (deftest nsubst-if-not.6
  - [ ] (deftest nsubst-if-not.7
  - [ ] (deftest nsubst-if-not.allow-other-keys.1
  - [ ] (deftest nsubst-if-not.allow-other-keys.2
  - [ ] (deftest nsubst-if-not.allow-other-keys.3
  - [ ] (deftest nsubst-if-not.allow-other-keys.4
  - [ ] (deftest nsubst-if-not.allow-other-keys.5
  - [ ] (deftest nsubst-if-not.keywords.6
  - [X] (deftest nsubst-if-not.error.1
  - [X] (deftest nsubst-if-not.error.2
  - [X] (deftest nsubst-if-not.error.3
  - [X] (deftest nsubst-if-not.error.4
  - [X] (deftest nsubst-if-not.error.5
  - [X] (deftest nsubst-if-not.error.6
  - [X] (deftest nsubst-if-not.error.7
  - [X] (deftest nsubst-if-not.error.8
**** nbutlast.lsp [80%]
  - [X] (deftest nbutlast.1
  - [ ] (deftest nbutlast.2
  - [ ] (deftest nbutlast.3
  - [X] (deftest nbutlast.4
  - [X] (deftest nbutlast.5
  - [X] (deftest nbutlast.6
  - [X] (deftest nbutlast.7
  - [ ] (deftest nbutlast.8
  - [ ] (deftest nbutlast.9
  - [X] (deftest nbutlast.order.1
  - [X] (deftest nbutlast.order.2
  - [X] (deftest nbutlast.error.1
  - [X] (deftest nbutlast.error.2
  - [X] (deftest nbutlast.error.3
  - [X] (deftest nbutlast.error.4
  - [X] (deftest nbutlast.error.5
  - [X] (deftest nbutlast.error.6
  - [X] (deftest nbutlast.error.7
  - [X] (deftest nbutlast.error.8
  - [X] (deftest nbutlast.error.9
  - [X] (deftest nbutlast.error.10
**** rest.lsp [100%]
  - [X] (deftest rest.1
  - [X] (deftest rest.order.1
  - [X] (deftest rest.error.1
  - [X] (deftest rest.error.2
**** mapcan.lsp [78%]
  - [X] (deftest mapcan.1
  - [X] (deftest mapcan.2
  - [X] (deftest mapcan.3
  - [X] (deftest mapcan.4
  - [X] (deftest mapcan.5
  - [X] (deftest mapcan.6
  - [X] (deftest mapcan.order.1
  - [X] (deftest mapcan.8
  - [ ] (deftest mapcan.9
  - [ ] (deftest mapcan.10
  - [ ] (deftest mapcan.11
  - [ ] (deftest mapcan.error.1
  - [X] (deftest mapcan.error.2
  - [X] (deftest mapcan.error.3
  - [X] (deftest mapcan.error.4
  - [X] (deftest mapcan.error.5
  - [X] (deftest mapcan.error.6
  - [X] (deftest mapcan.error.7
  - [X] (deftest mapcan.error.8
*** streams [0%]
**** write-char.lsp [0%]
  - [ ] (deftest write-char.1
  - [ ] (deftest write-char.2
  - [ ] (deftest write-char.3
  - [ ] (deftest write-char.error.1
  - [ ] (deftest write-char.error.2
**** write-sequence.lsp [0%]
  - [ ] (def-write-sequence-test write-sequence.string.1 "abcde" () "abcde")
  - [ ] (def-write-sequence-test write-sequence.string.2 "abcde" (:start 1) "bcde")
  - [ ] (def-write-sequence-test write-sequence.string.3 "abcde" (:end 3) "abc")
  - [ ] (def-write-sequence-test write-sequence.string.4 "abcde"
  - [ ] (def-write-sequence-test write-sequence.string.5 "abcde" (:end nil) "abcde")
  - [ ] (def-write-sequence-test write-sequence.string.6 "abcde" (:start 3 :end 3) "")
  - [ ] (def-write-sequence-test write-sequence.string.7 "abcde"
  - [ ] (def-write-sequence-test write-sequence.string.8 "abcde"
  - [ ] (def-write-sequence-test write-sequence.string.9 "abcde"
  - [ ] (def-write-sequence-test write-sequence.string.10 "abcde"
  - [ ] (def-write-sequence-test write-sequence.string.11 "abcde"
  - [ ] (def-write-sequence-test write-sequence.string.12 "abcde"
  - [ ] (def-write-sequence-test write-sequence.string.13 "" () "")
  - [ ] (def-write-sequence-special-test write-sequence.string.14 "12345" () "12345")
  - [ ] (def-write-sequence-special-test write-sequence.string.15 "12345" (:start 1 :end 3) "23")
  - [ ] (def-write-sequence-test write-sequence.list.1 (coerce "abcde" 'list)
  - [ ] (def-write-sequence-test write-sequence.list.2 (coerce "abcde" 'list)
  - [ ] (def-write-sequence-test write-sequence.list.3 (coerce "abcde" 'list)
  - [ ] (def-write-sequence-test write-sequence.list.4 (coerce "abcde" 'list)
  - [ ] (def-write-sequence-test write-sequence.list.5 (coerce "abcde" 'list)
  - [ ] (def-write-sequence-test write-sequence.list.6 (coerce "abcde" 'list)
  - [ ] (def-write-sequence-test write-sequence.list.7 (coerce "abcde" 'list)
  - [ ] (def-write-sequence-test write-sequence.list.8 () () "")
  - [ ] (def-write-sequence-test write-sequence.simple-vector.1
  - [ ] (def-write-sequence-test write-sequence.simple-vector.2
  - [ ] (def-write-sequence-test write-sequence.simple-vector.3
  - [ ] (def-write-sequence-test write-sequence.simple-vector.4
  - [ ] (def-write-sequence-test write-sequence.simple-vector.5
  - [ ] (def-write-sequence-test write-sequence.simple-vector.6
  - [ ] (def-write-sequence-test write-sequence.simple-vector.7
  - [ ] (def-write-sequence-test write-sequence.simple-vector.8 #() () "")
  - [ ] (def-write-sequence-test write-sequence.fill-vector.1
  - [ ] (def-write-sequence-test write-sequence.fill-vector.2
  - [ ] (def-write-sequence-test write-sequence.fill-vector.3
  - [ ] (def-write-sequence-test write-sequence.fill-vector.4
  - [ ] (def-write-sequence-test write-sequence.fill-vector.5
  - [ ] (def-write-sequence-test write-sequence.fill-vector.6
  - [ ] (def-write-sequence-test write-sequence.fill-vector.7
  - [ ] (def-write-sequence-bv-test write-sequence.bv.1 #*00111010
  - [ ] (def-write-sequence-bv-test write-sequence.bv.2 #*00111010
  - [ ] (def-write-sequence-bv-test write-sequence.bv.3 #*00111010
  - [ ] (def-write-sequence-bv-test write-sequence.bv.4 #*00111010
  - [ ] (def-write-sequence-bv-test write-sequence.bv.5 #*00111010
  - [ ] (def-write-sequence-bv-test write-sequence.bv.6 #*00111010
  - [ ] (deftest write-sequence.error.1
  - [ ] (deftest write-sequence.error.2
  - [ ] (deftest write-sequence.error.3
  - [ ] (deftest write-sequence.error.4
  - [ ] (deftest write-sequence.error.5
  - [ ] (deftest write-sequence.error.6
  - [ ] (deftest write-sequence.error.7
  - [ ] (deftest write-sequence.error.8
  - [ ] (deftest write-sequence.error.9
  - [ ] (deftest write-sequence.error.10
  - [ ] (deftest write-sequence.error.11
  - [ ] (deftest write-sequence.error.12
  - [ ] (deftest write-sequence.error.13
  - [ ] (deftest write-sequence.error.14
  - [ ] (deftest write-sequence.error.15
  - [ ] (deftest write-sequence.error.16
**** finish-output.lsp [0%]
  - [ ] (deftest finish-output.1
  - [ ] (deftest finish-output.2
  - [ ] (deftest finish-output.3
  - [ ] (deftest finish-output.4
  - [ ] (deftest finish-output.5
  - [ ] (deftest finish-output.6
  - [ ] (deftest finish-output.error.1
  - [ ] (deftest finish-output.error.2
  - [ ] (deftest finish-output.error.3
**** with-output-to-string.lsp [0%]
  - [ ] (deftest with-output-to-string.1
  - [ ] (deftest with-output-to-string.2
  - [ ] (deftest with-output-to-string.3
  - [ ] (deftest with-output-to-string.4
  - [ ] (deftest with-output-to-string.5
  - [ ] (deftest with-output-to-string.6
  - [ ] (deftest with-output-to-string.7
  - [ ] (deftest with-output-to-string.8
  - [ ] (deftest with-output-to-string.9
  - [ ] (deftest with-output-to-string.10
  - [ ] (deftest with-output-to-string.11
  - [ ] (deftest with-output-to-string.12
  - [ ] (deftest with-output-to-string.13
  - [ ] (deftest with-output-to-string.14
  - [ ] (deftest with-output-to-string.15
  - [ ] (deftest with-output-to-string.16
**** listen.lsp [0%]
  - [ ] (deftest listen.1
  - [ ] (deftest listen.2
  - [ ] (deftest listen.3
  - [ ] (deftest listen.4
  - [ ] (deftest listen.6
  - [ ] (deftest listen.7
  - [ ] (deftest listen.8
  - [ ] (deftest listen.9
  - [ ] (deftest listen.error.1
  - [ ] (deftest listen.error.2
**** read-char.lsp [0%]
  - [ ] (deftest read-char.1
  - [ ] (deftest read-char.2
  - [ ] (deftest read-char.4
  - [ ] (deftest read-char.5
  - [ ] (deftest read-char.6
  - [ ] (deftest read-char.7
  - [ ] (deftest read-char.8
  - [ ] (deftest read-char.9
  - [ ] (deftest read-char.10
  - [ ] (deftest read-char.error.1
  - [ ] (deftest read-char.error.2
  - [ ] (deftest read-char.error.3
  - [ ] (deftest read-char.error.4
**** file-position.lsp [0%]
  - [ ] (deftest file-position.1
  - [ ] (deftest file-position.2
  - [ ] (deftest file-position.3
  - [ ] (deftest file-position.4
  - [ ] (deftest file-position.5
  - [ ] (deftest file-position.6
  - [ ] (deftest file-position.7
  - [ ] (deftest file-position.8
  - [ ] (deftest file-position.9
  - [ ] (deftest file-position.10
  - [ ] (deftest file-position.error.1
  - [ ] (deftest file-position.error.2
  - [ ] (deftest file-position.error.3
  - [ ] (deftest file-position.error.4
**** interactive-stream-p.lsp [0%]
  - [ ] (deftest interactive-stream-p.1
  - [ ] (deftest interactive-stream-p.error.1
  - [ ] (deftest interactive-stream-p.error.2
  - [ ] (deftest interactive-stream-p.error.3
**** file-string-length.lsp [0%]
  - [ ] (deftest file-string-length.1
  - [ ] (deftest file-string-length.2
  - [ ] (deftest file-string-length.3
  - [ ] (deftest file-string-length.error.1
  - [ ] (deftest file-string-length.error.2
  - [ ] (deftest file-string-length.error.3
**** make-string-input-stream.lsp [0%]
  - [ ] (deftest make-string-input-stream.1
  - [ ] (deftest make-string-input-stream.2
  - [ ] (deftest make-string-input-stream.3
  - [ ] (deftest make-string-input-stream.4
  - [ ] (deftest make-string-input-stream.5
  - [ ] (deftest make-string-input-stream.6
  - [ ] (deftest make-string-input-stream.7
  - [ ] (deftest make-string-input-stream.8
  - [ ] (deftest make-string-input-stream.9
  - [ ] (deftest make-string-input-stream.10
  - [ ] (deftest make-string-input-stream.error.1
  - [ ] (deftest make-string-input-stream.error.2
**** echo-stream-output-stream.lsp [0%]
  - [ ] (deftest echo-stream-output-stream.1
  - [ ] (deftest echo-stream-output-stream.error.1
  - [ ] (deftest echo-stream-output-stream.error.2
**** read-byte.lsp [0%]
  - [ ] (deftest read-byte.1
  - [ ] (deftest read-byte.2
  - [ ] (deftest read-byte.3
  - [ ] (deftest read-byte.4
  - [ ] (deftest read-byte.error.1
  - [ ] (deftest read-byte.error.2
  - [ ] (deftest read-byte.error.3
  - [ ] (deftest read-byte.error.4
  - [ ] (deftest read-byte.error.5
  - [ ] (deftest read-byte.error.6
  - [ ] (deftest write-byte.error.1
  - [ ] (deftest write-byte.error.2
  - [ ] (deftest write-byte.error.3
  - [ ] (deftest write-byte.error.4
  - [ ] (deftest write-byte.error.5
**** fresh-line.lsp [0%]
  - [ ] (deftest fresh-line.1
  - [ ] (deftest fresh-line.2
  - [ ] (deftest fresh-line.3
  - [ ] (deftest fresh-line.4
  - [ ] (deftest fresh-line.5
  - [ ] (deftest fresh-line.6
  - [ ] (deftest fresh-line.7
  - [ ] (deftest fresh-line.error.1
**** unread-char.lsp [0%]
  - [ ] (deftest unread-char.1
  - [ ] (deftest unread-char.2
  - [ ] (deftest unread-char.3
  - [ ] (deftest unread-char.4
  - [ ] (deftest unread-char.5
  - [ ] (deftest unread-char.error.1
  - [ ] (deftest unread-char.error.2
**** peek-char.lsp [0%]
  - [ ] (deftest peek-char.1
  - [ ] (deftest peek-char.2
  - [ ] (deftest peek-char.3
  - [ ] (deftest peek-char.8
  - [ ] (deftest peek-char.9
  - [ ] (deftest peek-char.10
  - [ ] (deftest peek-char.11
  - [ ] (deftest peek-char.12
  - [ ] (deftest peek-char.13
  - [ ] (deftest peek-char.14
  - [ ] (deftest peek-char.15
  - [ ] (deftest peek-char.16
  - [ ] (deftest peek-char.17
  - [ ] (deftest peek-char.18
  - [ ] (deftest peek-char.19
  - [ ] (deftest peek-char.20
  - [ ] (deftest peek-char.21
  - [ ] (deftest peek-char.22
  - [ ] (deftest peek-char.23
  - [ ] (deftest peek-char.error.1
  - [ ] (deftest peek-char.error.2
  - [ ] (deftest peek-char.error.3
  - [ ] (deftest peek-char.error.4
  - [ ] (deftest peek-char.error.5
  - [ ] (deftest peek-char.error.6
**** make-synonym-stream.lsp [0%]
  - [ ] (deftest make-synonym-stream.1
  - [ ] (deftest make-synonym-stream.2
  - [ ] (deftest make-synonym-stream.3
  - [ ] (deftest make-synonym-stream.4
  - [ ] (deftest make-synonym-stream.error.1
  - [ ] (deftest make-synonym-stream.error.2
  - [ ] (deftest make-synonym-stream.error.3
**** synonym-stream-symbol.lsp [0%]
  - [ ] (deftest synonym-stream-symbol.1
  - [ ] (deftest synonym-stream-symbol.error.1
  - [ ] (deftest synonym-stream-symbol.error.2
**** with-input-from-string.lsp [0%]
  - [ ] (deftest with-input-from-string.1
  - [ ] (deftest with-input-from-string.2
  - [ ] (deftest with-input-from-string.3
  - [ ] (deftest with-input-from-string.3a
  - [ ] (deftest with-input-from-string.4
  - [ ] (deftest with-input-from-string.5
  - [ ] (deftest with-input-from-string.6
  - [ ] (deftest with-input-from-string.7
  - [ ] (deftest with-input-from-string.9
  - [ ] (deftest with-input-from-string.10
  - [ ] (deftest with-input-from-string.11
  - [ ] (deftest with-input-from-string.12
  - [ ] (deftest with-input-from-string.13
  - [ ] (deftest with-input-from-string.14
  - [ ] (deftest with-input-from-string.15
  - [ ] (deftest with-input-from-string.16
  - [ ] (deftest with-input-from-string.17
  - [ ] (deftest with-input-from-string.18
  - [ ] (deftest with-input-from-string.19
  - [ ] (deftest with-input-from-string.20
  - [ ] (deftest with-input-from-string.21
  - [ ] (deftest with-input-from-string.22
  - [ ] (deftest with-input-from-string.23
  - [ ] (deftest with-input-from-string.24
  - [ ] (deftest with-input-from-string.25
**** with-open-stream.lsp [0%]
  - [ ] (deftest with-open-stream.1
  - [ ] (deftest with-open-stream.2
  - [ ] (deftest with-open-stream.3
  - [ ] (deftest with-open-stream.4
  - [ ] (deftest with-open-stream.5
  - [ ] (deftest with-open-stream.6
  - [ ] (deftest with-open-stream.7
  - [ ] (deftest with-open-stream.8
  - [ ] (deftest with-open-stream.9
  - [ ] (deftest with-open-stream.10
**** stream-element-type.lsp [0%]
  - [ ] (deftest stream-element-type.1
  - [ ] (deftest stream-element-type.2
  - [ ] (deftest stream-element-type.3
  - [ ] (deftest stream-element-type.4
  - [ ] (deftest stream-element-type.5
  - [ ] (deftest stream-element-type.6
  - [ ] (deftest stream-element-type.error.1
  - [ ] (deftest stream-element-type.error.2
  - [ ] (deftest stream-element-type.error.3
**** read-sequence.lsp [0%]
  - [ ] (def-read-sequence-test read-sequence.string.1 (copy-seq "     ")
  - [ ] (def-read-sequence-test read-sequence.string.2 (copy-seq "     ")
  - [ ] (def-read-sequence-test read-sequence.string.3 (copy-seq "     ")
  - [ ] (def-read-sequence-test read-sequence.string.4 (copy-seq "     ")
  - [ ] (def-read-sequence-test read-sequence.string.5 (copy-seq "     ")
  - [ ] (def-read-sequence-test read-sequence.string.6 (copy-seq "     ")
  - [ ] (def-read-sequence-test read-sequence.string.7 (copy-seq "     ")
  - [ ] (def-read-sequence-test read-sequence.string.8 (copy-seq "     ")
  - [ ] (def-read-sequence-test read-sequence.string.9 (copy-seq "     ")
  - [ ] (def-read-sequence-test read-sequence.string.10 (copy-seq "     ")
  - [ ] (def-read-sequence-test read-sequence.string.11 (copy-seq "     ")
  - [ ] (def-read-sequence-test read-sequence.string.12 (copy-seq "     ")
  - [ ] (def-read-sequence-test read-sequence.base-string.1
  - [ ] (def-read-sequence-test read-sequence.base-string.2
  - [ ] (def-read-sequence-test read-sequence.base-string.3
  - [ ] (def-read-sequence-test read-sequence.base-string.4
  - [ ] (def-read-sequence-test read-sequence.base-string.5
  - [ ] (def-read-sequence-test read-sequence.base-string.6
  - [ ] (def-read-sequence-test read-sequence.base-string.7
  - [ ] (def-read-sequence-test read-sequence.list.1 (make-list 5)
  - [ ] (def-read-sequence-test read-sequence.list.2 (make-list 5)
  - [ ] (def-read-sequence-test read-sequence.list.3 (make-list 5)
  - [ ] (def-read-sequence-test read-sequence.list.4 (make-list 5)
  - [ ] (def-read-sequence-test read-sequence.list.5 (make-list 5)
  - [ ] (def-read-sequence-test read-sequence.list.6 (make-list 5)
  - [ ] (def-read-sequence-test read-sequence.list.7 (make-list 5)
  - [ ] (def-read-sequence-test read-sequence.vector.1
  - [ ] (def-read-sequence-test read-sequence.vector.2
  - [ ] (def-read-sequence-test read-sequence.vector.3
  - [ ] (def-read-sequence-test read-sequence.vector.4
  - [ ] (def-read-sequence-test read-sequence.vector.5
  - [ ] (def-read-sequence-test read-sequence.vector.6
  - [ ] (def-read-sequence-test read-sequence.vector.7
  - [ ] (def-read-sequence-test read-sequence.fill-vector.1
  - [ ] (def-read-sequence-test read-sequence.fill-vector.2
  - [ ] (def-read-sequence-test read-sequence.fill-vector.3
  - [ ] (def-read-sequence-test read-sequence.fill-vector.4
  - [ ] (def-read-sequence-test read-sequence.fill-vector.5
  - [ ] (def-read-sequence-test read-sequence.fill-vector.6
  - [ ] (def-read-sequence-test read-sequence.fill-vector.7
  - [ ] (def-read-sequence-test read-sequence.fill-vector.8
  - [ ] (deftest read-sequence.nil-vector.1
  - [ ] (def-read-sequence-bv-test read-sequence.bv.1 #*00000000000000 ()
  - [ ] (def-read-sequence-bv-test read-sequence.bv.2 #*00000000000000 (:start 0)
  - [ ] (def-read-sequence-bv-test read-sequence.bv.3 #*00000000000000 (:end 14)
  - [ ] (def-read-sequence-bv-test read-sequence.bv.4 #*00000000000000 (:end nil)
  - [ ] (def-read-sequence-bv-test read-sequence.bv.5 #*00000000000000 (:start 2)
  - [ ] (def-read-sequence-bv-test read-sequence.bv.6 #*00000000000000
  - [ ] (def-read-sequence-bv-test read-sequence.bv.7 #*00000000000000 (:end 6)
  - [ ] (deftest read-sequence.error.1
  - [ ] (deftest read-sequence.error.2
  - [ ] (deftest read-sequence.error.3
  - [ ] (deftest read-sequence.error.4
  - [ ] (deftest read-sequence.error.5
  - [ ] (deftest read-sequence.error.6
  - [ ] (deftest read-sequence.error.7
  - [ ] (deftest read-sequence.error.8
  - [ ] (deftest read-sequence.error.9
  - [ ] (deftest read-sequence.error.10
  - [ ] (deftest read-sequence.error.11
**** broadcast-stream-streams.lsp [0%]
  - [ ] (deftest broadcast-stream-streams.1
  - [ ] (deftest broadcast-stream-streams.2
  - [ ] (deftest broadcast-stream-streams.error.1
  - [ ] (deftest broadcast-stream-streams.error.2
**** clear-input.lsp [0%]
  - [ ] (deftest clear-input.1
  - [ ] (deftest clear-input.2
  - [ ] (deftest clear-input.3
  - [ ] (deftest clear-input.4
  - [ ] (deftest clear-input.5
  - [ ] (deftest clear-input.6
  - [ ] (deftest clear-input.error.1
  - [ ] (deftest clear-input.error.2
  - [ ] (deftest clear-input.error.3
  - [ ] (deftest clear-input.error.4
  - [ ] (deftest clear-input.error.5
**** make-string-output-stream.lsp [0%]
  - [ ] (deftest make-string-output-stream.1
  - [ ] (deftest make-string-output-stream.2
  - [ ] (deftest make-string-output-stream.3
  - [ ] (deftest make-string-output-stream.4
  - [ ] (deftest make-string-output-stream.5
  - [ ] (deftest make-string-output-stream.6
  - [ ] (deftest make-string-output-stream.7
  - [ ] (deftest make-string-output-stream.8
  - [ ] (deftest make-string-output-stream.9
  - [ ] (deftest make-string-output-stream.10
  - [ ] (deftest make-string-output-stream.11
  - [ ] (deftest make-string-output-stream.12
  - [ ] (deftest make-string-output-stream.13
  - [ ] (deftest make-string-output-stream.error.1
  - [ ] (deftest make-string-output-stream.error.2
  - [ ] (deftest make-string-output-stream.error.3
**** open.lsp [0%]
  - [ ] (def-open-test open.1 () (values (read-line s nil)) ("abcdefghij"))
  - [ ] (def-open-test open.2 (:direction :input)
  - [ ] (def-open-test open.3 (:direction :input)
  - [ ] (def-open-test open.4 (:direction :input)
  - [ ] (def-open-test open.5 (:if-exists :error)
  - [ ] (def-open-test open.6 (:if-exists :error :direction :input)
  - [ ] (def-open-test open.7 (:if-exists :new-version)
  - [ ] (def-open-test open.8 (:if-exists :new-version :direction :input)
  - [ ] (def-open-test open.9 (:if-exists :rename)
  - [ ] (def-open-test open.10 (:if-exists :rename :direction :input)
  - [ ] (def-open-test open.11 (:if-exists :rename-and-delete)
  - [ ] (def-open-test open.12 (:if-exists :rename-and-delete :direction :input)
  - [ ] (def-open-test open.13 (:if-exists :overwrite)
  - [ ] (def-open-test open.14 (:if-exists :overwrite :direction :input)
  - [ ] (def-open-test open.15 (:if-exists :append)
  - [ ] (def-open-test open.16 (:if-exists :append :direction :input)
  - [ ] (def-open-test open.17 (:if-exists :supersede)
  - [ ] (def-open-test open.18 (:if-exists :supersede :direction :input)
  - [ ] (def-open-test open.19 (:if-exists nil)
  - [ ] (def-open-test open.20 (:if-exists nil :direction :input)
  - [ ] (def-open-test open.21 (:if-does-not-exist nil)
  - [ ] (def-open-test open.22 (:if-does-not-exist nil :direction :input)
  - [ ] (def-open-test open.23 (:if-does-not-exist :error)
  - [ ] (def-open-test open.24 (:if-does-not-exist :error :direction :input)
  - [ ] (def-open-test open.25 (:if-does-not-exist :create)
  - [ ] (def-open-test open.26 (:if-does-not-exist :create :direction :input)
  - [ ] (def-open-test open.27 (:external-format :default)
  - [ ] (def-open-test open.28 (:external-format :default :direction :input)
  - [ ] (def-open-test open.29 ()
  - [ ] (def-open-test open.30 (:direction :input)
  - [ ] (def-open-test open.31 ()
  - [ ] (def-open-test open.32 (:direction :input)
  - [ ] (def-open-test open.33 ()
  - [ ] (def-open-test open.34 (:direction :input)
  - [ ] (def-open-test open.35 ()
  - [ ] (def-open-test open.36 (:direction :input)
  - [ ] (def-open-test open.37 ()
  - [ ] (def-open-test open.38 (:direction :input)
  - [ ] (def-open-test open.39 ()
  - [ ] (def-open-test open.40 (:direction :input)
  - [ ] (def-open-test open.41 ()
  - [ ] (def-open-test open.42 (:direction :input)
  - [ ] (def-open-test open.43 ()
  - [ ] (def-open-test open.44 (:direction :input)
  - [ ] (def-open-test open.45 ()
  - [ ] (def-open-test open.46 (:direction :input)
  - [ ] (def-open-test open.47 ()
  - [ ] (def-open-test open.48 (:direction :input)
  - [ ] (def-open-test open.49 ()
  - [ ] (def-open-test open.50 (:direction :input)
  - [ ] (def-open-test open.51 ()
  - [ ] (def-open-test open.52 (:direction :input)
  - [ ] (def-open-test open.53 ()
  - [ ] (def-open-test open.54 (:direction :input)
  - [ ] (def-open-test open.55 ()
  - [ ] (def-open-test open.56 (:direction :input)
  - [ ] (def-open-test open.57 ()
  - [ ] (def-open-test open.58 (:direction :input)
  - [ ] (def-open-test open.59 ()
  - [ ] (def-open-test open.60 (:direction :input)
  - [ ] (def-open-test open.61 ()
  - [ ] (def-open-test open.62 (:direction :input)
  - [ ] (def-open-test open.63 ()
  - [ ] (def-open-test open.64 ()
  - [ ] (deftest open.65
  - [ ] (deftest open.66
  - [ ] (deftest open.67
  - [ ] (def-open-output-test open.output.1 ()
  - [ ] (def-open-output-test open.output.2 ()
  - [ ] (def-open-output-test open.output.3
  - [ ] (def-open-output-test open.output.4 ()
  - [ ] (def-open-output-test open.output.5 ()
  - [ ] (def-open-output-test open.output.6 ()
  - [ ] (def-open-output-test open.output.7 ()
  - [ ] (def-open-output-test open.output.8 ()
  - [ ] (def-open-output-test open.output.9 ()
  - [ ] (def-open-output-test open.output.10 ()
  - [ ] (def-open-output-test open.output.11 ()
  - [ ] (def-open-output-test open.output.12 ()
  - [ ] (def-open-output-test open.output.13 ()
  - [ ] (def-open-output-test open.output.14 ()
  - [ ] (def-open-output-test open.output.15 ()
  - [ ] (def-open-output-test open.output.16 ()
  - [ ] (def-open-output-test open.output.17 ()
  - [ ] (def-open-output-test open.output.18 ()
  - [ ] (def-open-output-test open.output.19 ()
  - [ ] (deftest open.output.20
  - [ ] (def-open-test open.output.21 (:if-exists :new-version :direction :output)
  - [ ] (def-open-test open.output.22 (:if-exists :rename :direction :output)
  - [ ] (def-open-test open.output.23 (:if-exists :rename-and-delete
  - [ ] (def-open-test open.output.24 (:if-exists :overwrite
  - [ ] (def-open-test open.output.25 (:if-exists :append
  - [ ] (def-open-test open.output.26 (:if-exists :supersede
  - [ ] (def-open-output-test open.output.27 (:if-does-not-exist :create
  - [ ] (deftest open.output.28
  - [ ] (def-open-output-test open.output.28a (:external-format :default)
  - [ ] (def-open-output-test open.output.29
  - [ ] (deftest open.output.30
  - [ ] (def-open-output-test open.output.31 (:if-exists :rename
  - [ ] (def-open-output-test open.output.32 (:if-exists :rename-and-delete
  - [ ] (def-open-output-test open.output.33 (:if-exists :new-version
  - [ ] (def-open-output-test open.output.34 (:if-exists :supersede
  - [ ] (def-open-output-test open.output.35 (:if-exists nil
  - [ ] (def-open-io-test open.io.1 ()
  - [ ] (def-open-io-test open.io.2 ()
  - [ ] (def-open-io-test open.io.3
  - [ ] (def-open-io-test open.io.4 ()
  - [ ] (def-open-io-test open.io.5 ()
  - [ ] (def-open-io-test open.io.6 ()
  - [ ] (def-open-io-test open.io.7 ()
  - [ ] (def-open-io-test open.io.8 ()
  - [ ] (def-open-io-test open.io.9 ()
  - [ ] (def-open-io-test open.io.10 ()
  - [ ] (def-open-io-test open.io.11 ()
  - [ ] (def-open-io-test open.io.12 ()
  - [ ] (def-open-io-test open.io.13 ()
  - [ ] (def-open-io-test open.io.14 ()
  - [ ] (def-open-io-test open.io.15 ()
  - [ ] (def-open-io-test open.io.16 ()
  - [ ] (def-open-io-test open.io.17 ()
  - [ ] (def-open-io-test open.io.18 ()
  - [ ] (def-open-io-test open.io.19 ()
  - [ ] (deftest open.io.20
  - [ ] (def-open-test open.io.21 (:if-exists :new-version :direction :io)
  - [ ] (def-open-test open.io.22 (:if-exists :rename :direction :io)
  - [ ] (def-open-test open.io.23 (:if-exists :rename-and-delete
  - [ ] (def-open-test open.io.24 (:if-exists :overwrite
  - [ ] (def-open-test open.io.25 (:if-exists :append
  - [ ] (def-open-test open.io.26 (:if-exists :supersede
  - [ ] (def-open-io-test open.io.27 (:if-does-not-exist :create
  - [ ] (deftest open.io.28
  - [ ] (def-open-io-test open.io.28a (:external-format :default)
  - [ ] (def-open-io-test open.io.29
  - [ ] (deftest open.io.30
  - [ ] (def-open-io-test open.io.31 (:if-exists :rename
  - [ ] (def-open-io-test open.io.32 (:if-exists :rename-and-delete
  - [ ] (def-open-io-test open.io.33 (:if-exists :new-version
  - [ ] (def-open-io-test open.io.34 (:if-exists :supersede
  - [ ] (def-open-io-test open.io.35 (:if-exists nil
  - [ ] (def-open-probe-test open.probe.1 () t)
  - [ ] (def-open-probe-test open.probe.2 (:if-exists :error) t)
  - [ ] (def-open-probe-test open.probe.3 (:if-exists :new-version) t)
  - [ ] (def-open-probe-test open.probe.4 (:if-exists :rename) t)
  - [ ] (def-open-probe-test open.probe.5 (:if-exists :rename-and-delete) t)
  - [ ] (def-open-probe-test open.probe.6 (:if-exists :overwrite) t)
  - [ ] (def-open-probe-test open.probe.7 (:if-exists :append) t)
  - [ ] (def-open-probe-test open.probe.8 (:if-exists :supersede) t)
  - [ ] (def-open-probe-test open.probe.9 (:if-does-not-exist :error) t)
  - [ ] (def-open-probe-test open.probe.10 (:if-does-not-exist nil) t)
  - [ ] (def-open-probe-test open.probe.11 (:if-does-not-exist :create) t)
  - [ ] (def-open-probe-test open.probe.12 () t :build-form nil)
  - [ ] (def-open-probe-test open.probe.13 (:if-exists :error) t :build-form nil)
  - [ ] (def-open-probe-test open.probe.14 (:if-exists :new-version) t :build-form nil)
  - [ ] (def-open-probe-test open.probe.15 (:if-exists :rename) t :build-form nil)
  - [ ] (def-open-probe-test open.probe.16 (:if-exists :rename-and-delete) t
  - [ ] (def-open-probe-test open.probe.17 (:if-exists :overwrite) t
  - [ ] (def-open-probe-test open.probe.18 (:if-exists :append) t
  - [ ] (def-open-probe-test open.probe.19 (:if-exists :supersede) t
  - [ ] (def-open-probe-test open.probe.20 (:if-does-not-exist nil) t
  - [ ] (deftest open.probe.21
  - [ ] (deftest open.probe.22
  - [ ] (def-open-probe-test open.probe.23 (:external-format :default) t)
  - [ ] (def-open-probe-test open.probe.24 (:element-type 'character) t)
  - [ ] (def-open-probe-test open.probe.25 (:element-type 'bit) t)
  - [ ] (def-open-probe-test open.probe.26 (:element-type '(unsigned-byte 2)) t)
  - [ ] (def-open-probe-test open.probe.27 (:element-type '(unsigned-byte 4)) t)
  - [ ] (def-open-probe-test open.probe.28 (:element-type '(unsigned-byte 8)) t)
  - [ ] (def-open-probe-test open.probe.29 (:element-type '(unsigned-byte 9)) t)
  - [ ] (def-open-probe-test open.probe.30 (:element-type '(unsigned-byte 15)) t)
  - [ ] (def-open-probe-test open.probe.31 (:element-type '(unsigned-byte 16)) t)
  - [ ] (def-open-probe-test open.probe.32 (:element-type '(unsigned-byte 17)) t)
  - [ ] (def-open-probe-test open.probe.33 (:element-type '(unsigned-byte 31)) t)
  - [ ] (def-open-probe-test open.probe.34 (:element-type '(unsigned-byte 32)) t)
  - [ ] (def-open-probe-test open.probe.35 (:element-type '(unsigned-byte 33)) t)
  - [ ] (def-open-probe-test open.probe.36 (:element-type '(integer -1002 13112)) t)
  - [ ] (deftest open.error.1
  - [ ] (deftest open.error.2
  - [ ] (deftest open.error.3
  - [ ] (deftest open.error.4
  - [ ] (deftest open.error.5
  - [ ] (deftest open.error.6
  - [ ] (deftest open.error.7
  - [ ] (deftest open.error.8
  - [ ] (deftest open.error.9
  - [ ] (deftest open.error.10
  - [ ] (deftest open.error.11
  - [ ] (deftest open.error.12
  - [ ] (deftest open.error.13
  - [ ] (deftest open.error.14
  - [ ] (deftest open.error.15
  - [ ] (deftest open.error.16
  - [ ] (deftest open.error.17
  - [ ] (deftest open.error.18
**** get-output-stream-string.lsp [0%]
  - [ ] (deftest get-output-stream-string.1
  - [ ] (deftest get-output-stream-string.error.1
  - [ ] (deftest get-output-stream-string.error.2
**** make-broadcast-stream.lsp [0%]
  - [ ] (deftest make-broadcast-stream.1
  - [ ] (deftest make-broadcast-stream.2
  - [ ] (deftest make-broadcast-stream.3
  - [ ] (deftest make-broadcast-stream.4
  - [ ] (deftest make-broadcast-stream.5
  - [ ] (deftest make-broadcast-stream.6
  - [ ] (deftest make-broadcast-stream.7
  - [ ] (deftest make-broadcast-stream.8
  - [ ] (deftest make-broadcast-stream.error.1
  - [ ] (deftest make-broadcast-stream.error.2
**** file-length.lsp [0%]
  - [ ] (deftest file-length.error.1
  - [ ] (deftest file-length.error.2
  - [ ] (deftest file-length.error.3
  - [ ] (deftest file-length.error.4
  - [ ] (deftest file-length.error.5
  - [ ] (deftest file-length.error.6
  - [ ] (deftest file-length.error.8
  - [ ] (deftest file-length.error.9
  - [ ] (deftest file-length.error.10
  - [ ] (deftest file-length.error.11
  - [ ] (deftest file-length.error.12
  - [ ] (deftest file-length.1
  - [ ] (deftest file-length.2
  - [ ] (deftest file-length.3
  - [ ] (deftest file-length.4
  - [ ] (deftest file-length.5
  - [ ] (deftest file-length.6
**** clear-output.lsp [0%]
  - [ ] (deftest clear-output.1
  - [ ] (deftest clear-output.2
  - [ ] (deftest clear-output.3
  - [ ] (deftest clear-output.4
  - [ ] (deftest clear-output.5
  - [ ] (deftest clear-output.6
  - [ ] (deftest clear-output.error.1
  - [ ] (deftest clear-output.error.2
  - [ ] (deftest clear-output.error.3
**** two-way-stream-input-stream.lsp [0%]
  - [ ] (deftest two-way-stream-input-stream.1
  - [ ] (deftest two-way-stream-input-stream.error.1
  - [ ] (deftest two-way-stream-input-stream.error.2
**** make-two-way-stream.lsp [0%]
  - [ ] (deftest make-two-way-stream.1
  - [ ] (deftest make-two-way-stream.2
  - [ ] (deftest make-two-way-stream.3
  - [ ] (deftest make-two-way-stream.4
  - [ ] (deftest make-two-way-stream.5
  - [ ] (deftest make-two-way-stream.6
  - [ ] (deftest make-two-way-stream.7
  - [ ] (deftest make-two-way-stream.8
  - [ ] (deftest make-two-way-stream.9
  - [ ] (deftest make-two-way-stream.10
  - [ ] (deftest make-two-way-stream.11
  - [ ] (deftest make-two-way-stream.12
  - [ ] (deftest make-two-way-stream.13
  - [ ] (deftest make-two-way-stream.14
  - [ ] (deftest make-two-way-stream.error.1
  - [ ] (deftest make-two-way-stream.error.2
  - [ ] (deftest make-two-way-stream.error.3
  - [ ] (deftest make-two-way-stream.error.4
  - [ ] (deftest make-two-way-stream.error.5
  - [ ] (deftest make-two-way-stream.error.6
  - [ ] (deftest make-two-way-stream.error.7
**** output-stream-p.lsp [0%]
  - [ ] (deftest output-stream-p.1
  - [ ] (deftest output-stream-p.2
  - [ ] (deftest output-stream-p.3
  - [ ] (deftest output-stream-p.4
  - [ ] (deftest output-stream-p.error.1
  - [ ] (deftest output-stream-p.error.2
  - [ ] (deftest output-stream-p.error.3
**** read-char-no-hang.lsp [0%]
  - [ ] (deftest read-char-no-hang.1
  - [ ] (deftest read-char-no-hang.2
  - [ ] (deftest read-char-no-hang.4
  - [ ] (deftest read-char-no-hang.5
  - [ ] (deftest read-char-no-hang.6
  - [ ] (deftest read-char-no-hang.7
  - [ ] (deftest read-char-no-hang.8
  - [ ] (deftest read-char-no-hang.9
  - [ ] (deftest read-char-no-hang.10
  - [ ] (deftest read-char-no-hang.error.1
  - [ ] (deftest read-char-no-hang.error.2
  - [ ] (deftest read-char-no-hang.error.3
  - [ ] (deftest read-char-no-hang.error.4
**** echo-stream-input-stream.lsp [0%]
  - [ ] (deftest echo-stream-input-stream.1
  - [ ] (deftest echo-stream-input-stream.error.1
  - [ ] (deftest echo-stream-input-stream.error.2
**** write-string.lsp [0%]
  - [ ] (deftest write-string.1
  - [ ] (deftest write-string.2
  - [ ] (deftest write-string.3
  - [ ] (deftest write-string.4
  - [ ] (deftest write-string.5
  - [ ] (deftest write-string.6
  - [ ] (deftest write-string.7
  - [ ] (deftest write-string.8
  - [ ] (deftest write-string.9
  - [ ] (deftest write-string.10
  - [ ] (deftest write-string.11
  - [ ] (deftest write-string.12
  - [ ] (deftest write-string.13
  - [ ] (deftest write-string.error.1
  - [ ] (deftest write-string.error.2
  - [ ] (deftest write-string.error.3
  - [ ] (deftest write-string.error.4
**** stream-external-format.lsp [0%]
  - [ ] (deftest stream-external-format.error.1
  - [ ] (deftest stream-external-format.error.2
**** terpri.lsp [0%]
  - [ ] (deftest terpri.1
  - [ ] (deftest terpri.2
  - [ ] (deftest terpri.3
  - [ ] (deftest terpri.4
  - [ ] (deftest terpri.5
  - [ ] (deftest terpri.error.1
**** open-stream-p.lsp [0%]
  - [ ] (deftest open-stream-p.1
  - [ ] (deftest open-stream-p.2
  - [ ] (deftest open-stream-p.3
  - [ ] (deftest open-stream-p.4
  - [ ] (deftest open-stream-p.5
  - [ ] (deftest open-stream-p.error.1
  - [ ] (deftest open-stream-p.error.2
  - [ ] (deftest open-stream-p.error.3
**** input-stream-p.lsp [0%]
  - [ ] (deftest input-stream-p.1
  - [ ] (deftest input-stream-p.2
  - [ ] (deftest input-stream-p.3
  - [ ] (deftest input-stream-p.4
  - [ ] (deftest input-stream-p.error.1
  - [ ] (deftest input-stream-p.error.2
  - [ ] (deftest input-stream-p.error.3
**** concatenated-stream-streams.lsp [0%]
  - [ ] (deftest concatenated-stream-streams.1
  - [ ] (deftest concatenated-stream-streams.2
  - [ ] (deftest concatenated-stream-streams.3
  - [ ] (deftest concatenated-stream-streams.4
  - [ ] (deftest concatenated-stream-streams.5
  - [ ] (deftest concatenated-stream-streams.error.1
  - [ ] (deftest concatenated-stream-streams.error.2
**** stream-error-stream.lsp [0%]
  - [ ] (deftest stream-error-stream.1
  - [ ] (deftest stream-error-stream.error.1
  - [ ] (deftest stream-error-stream.error.2
**** make-echo-stream.lsp [0%]
  - [ ] (deftest make-echo-stream.1
  - [ ] (deftest make-echo-stream.2
  - [ ] (deftest make-echo-stream.3
  - [ ] (deftest make-echo-stream.4
  - [ ] (deftest make-echo-stream.5
  - [ ] (deftest make-echo-stream.6
  - [ ] (deftest make-echo-stream.7
  - [ ] (deftest make-echo-stream.8
  - [ ] (deftest make-echo-stream.9
  - [ ] (deftest make-echo-stream.10
  - [ ] (deftest make-echo-stream.11
  - [ ] (deftest make-echo-stream.12
  - [ ] (deftest make-echo-stream.13
  - [ ] (deftest make-echo-stream.14
  - [ ] (deftest make-echo-stream.15
  - [ ] (deftest make-echo-stream.16
  - [ ] (deftest make-echo-stream.17
  - [ ] (deftest make-echo-stream.18
  - [ ] (deftest make-echo-stream.20
  - [ ] (deftest make-echo-stream.21
  - [ ] (deftest make-echo-stream.22
  - [ ] (deftest make-echo-stream.error.1
  - [ ] (deftest make-echo-stream.error.2
  - [ ] (deftest make-echo-stream.error.3
**** read-line.lsp [0%]
  - [ ] (deftest read-line.1
  - [ ] (deftest read-line.2
  - [ ] (deftest read-line.3
  - [ ] (deftest read-line.4
  - [ ] (deftest read-line.5
  - [ ] (deftest read-line.6
  - [ ] (deftest read-line.7
  - [ ] (deftest read-line.8
  - [ ] (deftest read-line.error.1
  - [ ] (deftest read-line.error.2
  - [ ] (deftest read-line.error.3
  - [ ] (deftest read-line.error.4
**** write-line.lsp [0%]
  - [ ] (deftest write-line.1
  - [ ] (deftest write-line.2
  - [ ] (deftest write-line.3
  - [ ] (deftest write-line.4
  - [ ] (deftest write-line.5
  - [ ] (deftest write-line.6
  - [ ] (deftest write-line.7
  - [ ] (deftest write-line.8
  - [ ] (deftest write-line.9
  - [ ] (deftest write-line.10
  - [ ] (deftest write-line.11
  - [ ] (deftest write-line.12
  - [ ] (deftest write-line.13
  - [ ] (deftest write-line.error.1
  - [ ] (deftest write-line.error.2
  - [ ] (deftest write-line.error.3
  - [ ] (deftest write-line.error.4
**** force-output.lsp [0%]
  - [ ] (deftest force-output.1
  - [ ] (deftest force-output.2
  - [ ] (deftest force-output.3
  - [ ] (deftest force-output.4
  - [ ] (deftest force-output.5
  - [ ] (deftest force-output.6
  - [ ] (deftest force-output.error.1
  - [ ] (deftest force-output.error.2
  - [ ] (deftest force-output.error.3
**** two-way-stream-output-stream.lsp [0%]
  - [ ] (deftest two-way-stream-output-stream.1
  - [ ] (deftest two-way-stream-output-stream.error.1
  - [ ] (deftest two-way-stream-output-stream.error.2
**** with-open-file.lsp [0%]
  - [ ] (deftest with-open-file.1
  - [ ] (deftest with-open-file.2
  - [ ] (deftest with-open-file.3
  - [ ] (deftest with-open-file.4
  - [ ] (deftest with-open-file.5
  - [ ] (deftest with-open-file.6
  - [ ] (deftest with-open-file.7
  - [ ] (deftest with-open-file.8
  - [ ] (deftest with-open-file.9
  - [ ] (deftest with-open-file.10
**** make-concatenated-stream.lsp [0%]
  - [ ] (deftest make-concatenated-stream.1
  - [ ] (deftest make-concatenated-stream.2
  - [ ] (deftest make-concatenated-stream.3
  - [ ] (deftest make-concatenated-stream.4
  - [ ] (deftest make-concatenated-stream.5
  - [ ] (deftest make-concatenated-stream.6
  - [ ] (deftest make-concatenated-stream.7
  - [ ] (deftest make-concatenated-stream.8
  - [ ] (deftest make-concatenated-stream.9
  - [ ] (deftest make-concatenated-stream.10
  - [ ] (deftest make-concatenated-stream.11
  - [ ] (deftest make-concatenated-stream.12
  - [ ] (deftest make-concatenated-stream.13
  - [ ] (deftest make-concatenated-stream.14
  - [ ] (deftest make-concatenated-stream.15
  - [ ] (deftest make-concatenated-stream.16
  - [ ] (deftest make-concatenated-stream.17
  - [ ] (deftest make-concatenated-stream.18
  - [ ] (deftest make-concatenated-stream.19
  - [ ] (deftest make-concatenated-stream.20
  - [ ] (deftest make-concatenated-stream.21
  - [ ] (deftest make-concatenated-stream.22
  - [ ] (deftest make-concatenated-stream.23
  - [ ] (deftest make-concatenated-stream.24
  - [ ] (deftest make-concatenated-stream.25
  - [ ] (deftest make-concatenated-stream.26
  - [ ] (deftest make-concatenated-stream.27
  - [ ] (deftest make-concatenated-stream.28
  - [ ] (deftest make-concatenated-stream.28a
  - [ ] (deftest make-concatenated-stream.29
  - [ ] (deftest make-concatenated-stream.30
  - [ ] (deftest make-concatenated-stream.31
  - [ ] (deftest make-concatenated-stream.32
  - [ ] (deftest make-concatenated-stream.33
  - [ ] (deftest make-concatenated-stream.error.1
  - [ ] (deftest make-concatenated-stream.error.2
**** streamp.lsp [0%]
  - [ ] (deftest streamp.1
  - [ ] (deftest streamp.2
  - [ ] (deftest streamp.3
  - [ ] (deftest streamp.4
  - [ ] (deftest streamp.error.1
  - [ ] (deftest streamp.error.2
*** hash-tables [0%]
**** clrhash.lsp [85%]
  - [X] (deftest clrhash.1
  - [X] (deftest clrhash.2
  - [X] (deftest clrhash.3
  - [ ] (deftest clrhash.4
  - [X] (deftest clrhash.5
  - [X] (deftest clrhash.error.1
  - [X] (deftest clrhash.error.2
**** hash-table.lsp [60%]
  - [X] (deftest hash-table.1
  - [X] (deftest hash-table.2
  - [ ] (deftest hash-table.3
  - [X] (deftest hash-table.4
  - [ ] (deftest hash-table.5
**** hash-table-rehash-threshold.lsp [33%]
  - [ ] (deftest hash-table-rehash-threshold.1
  - [ ] (deftest hash-table-rehash-threshold.2
  - [ ] (deftest hash-table-rehash-threshold.3
  - [X] (deftest hash-table-rehash-threshold.error.1
  - [X] (deftest hash-table-rehash-threshold.error.2
  - [ ] (deftest hash-table-rehash-threshold.error.3
**** gethash.lsp [43%]
  - [ ] (deftest gethash.1
  - [ ] (deftest gethash.2
  - [ ] (deftest gethash.3
  - [ ] (deftest gethash.4
  - [X] (deftest gethash.5
  - [X] (deftest gethash.order.1
  - [ ] (deftest gethash.order.2
  - [X] (deftest gethash.order.3
  - [X] (deftest gethash.order.4
  - [ ] (deftest gethash.zero.1
  - [ ] (deftest gethash.zero.2
  - [ ] (deftest gethash.zero.3
  - [ ] (deftest gethash.zero.4
  - [X] (deftest gethash.error.1
  - [X] (deftest gethash.error.2
  - [X] (deftest gethash.error.3
**** remhash.lsp [90%]
  - [X] (deftest remhash.1
  - [X] (deftest remhash.2
  - [X] (deftest remhash.3
  - [ ] (deftest remhash.4
  - [X] (deftest remhash.5
  - [X] (deftest remhash.6
  - [X] (deftest remhash.order.1
  - [X] (deftest remhash.error.1
  - [X] (deftest remhash.error.2
  - [X] (deftest remhash.error.3
**** make-hash-table.lsp [48%]
  - [X] (deftest make-hash-table.1
  - [X] (deftest make-hash-table.2
  - [X] (deftest make-hash-table.3
  - [X] (deftest make-hash-table.4
  - [X] (deftest make-hash-table.5
  - [X] (deftest make-hash-table.6
  - [X] (deftest make-hash-table.7
  - [X] (deftest make-hash-table.8
  - [X] (deftest make-hash-table.9
  - [ ] (deftest make-hash-table.10
  - [X] (deftest make-hash-table.11
  - [X] (deftest make-hash-table.12
  - [X] (deftest make-hash-table.13
  - [X] (deftest make-hash-table.14
  - [X] (deftest make-hash-table.15
  - [ ] (deftest make-hash-table.16
  - [ ] (deftest make-hash-table.17
  - [ ] (deftest make-hash-table.18
  - [ ] (deftest make-hash-table.19
  - [ ] (deftest make-hash-table.20
  - [ ] (deftest make-hash-table.21
  - [ ] (deftest make-hash-table.22
  - [ ] (deftest make-hash-table.23
  - [ ] (deftest make-hash-table.24
  - [ ] (deftest make-hash-table.25
  - [ ] (deftest make-hash-table.26
  - [ ] (deftest make-hash-table.27
  - [ ] (deftest make-hash-table.28
  - [ ] (deftest make-hash-table.29
**** hash-table-size.lsp [66%]
  - [X] (deftest hash-table-size.error.1
  - [X] (deftest hash-table-size.error.2
  - [ ] (deftest hash-table-size.error.3
**** sxhash.lsp [4%]
  - [ ] (deftest sxhash.1
  - [ ] (deftest sxhash.2
  - [X] (deftest sxhash.3
  - [ ] (deftest sxhash.4
  - [ ] (deftest sxhash.5
  - [ ] (deftest sxhash.6
  - [ ] (deftest sxhash.7
  - [ ] (deftest sxhash.8
  - [ ] (deftest sxhash.9
  - [ ] (deftest sxhash.10
  - [ ] (deftest sxhash.11
  - [ ] (deftest sxhash.12
  - [ ] (deftest sxhash.13
  - [ ] (deftest sxhash.15
  - [ ] (deftest sxhash.16
  - [ ] (deftest sxhash.17
  - [ ] (deftest sxhash.18
  - [ ] (deftest sxhash.19
  - [ ] (deftest sxhash.20
  - [ ] (deftest sxhash.21
  - [ ] (deftest sxhash.22
  - [ ] (deftest sxhash.23
  - [ ] (deftest sxhash.error.1
  - [ ] (deftest sxhash.error.2
**** hash-table-rehash-size.lsp [33%]
  - [ ] (deftest hash-table-rehash-size.1
  - [ ] (deftest hash-table-rehash-size.2
  - [ ] (deftest hash-table-rehash-size.3
  - [X] (deftest hash-table-rehash-size.error.1
  - [X] (deftest hash-table-rehash-size.error.2
  - [ ] (deftest hash-table-rehash-size.error.3
**** hash-table-test.lsp [28%]
  - [ ] (deftest hash-table-test.1
  - [ ] (deftest hash-table-test.2
  - [ ] (deftest hash-table-test.3
  - [ ] (deftest hash-table-test.4
  - [X] (deftest hash-table-test.error.1
  - [X] (deftest hash-table-test.error.2
  - [ ] (deftest hash-table-test.error.3
**** with-hash-table-iterator.lsp [0%]
  - [ ] (deftest with-hash-table-iterator.1
  - [ ] (deftest with-hash-table-iterator.2
  - [ ] (deftest with-hash-table-iterator.3
  - [ ] (deftest with-hash-table-iterator.4
  - [ ] (deftest with-hash-table-iterator.5
  - [ ] (deftest with-hash-table-iterator.6
  - [ ] (deftest with-hash-table-iterator.7
  - [ ] (deftest with-hash-table-iterator.8
  - [ ] (deftest with-hash-table-iterator.8a
  - [ ] (deftest with-hash-table-iterator.9
  - [ ] (deftest with-hash-table-iterator.10
  - [ ] (deftest with-hash-table-iterator.11
  - [ ] (deftest with-hash-table-iterator.12
**** maphash.lsp [83%]
  - [X] (deftest maphash.1
  - [X] (deftest maphash.2
  - [ ] (deftest maphash.3
  - [X] (deftest maphash.4
  - [X] (deftest maphash.5
  - [ ] (deftest maphash.6
  - [X] (deftest maphash.7
  - [X] (deftest maphash.8
  - [X] (deftest maphash.order.1
  - [X] (deftest maphash.error.1
  - [X] (deftest maphash.error.2
  - [X] (deftest maphash.error.3
**** hash-table-p.lsp [85%]
  - [X] (deftest hash-table-p.1
  - [ ] (deftest hash-table-p.2
  - [X] (deftest hash-table-p.3
  - [X] (deftest hash-table-p.4
  - [X] (deftest hash-table-p.5
  - [X] (deftest hash-table-p.error.1
  - [X] (deftest hash-table-p.error.2
**** hash-table-count.lsp [92%]
  - [X] (deftest hash-table-count.1
  - [X] (deftest hash-table-count.2
  - [X] (deftest hash-table-count.3
  - [X] (deftest hash-table-count.4
  - [X] (deftest hash-table-count.5
  - [X] (deftest hash-table-count.6
  - [X] (deftest hash-table-count.7
  - [X] (deftest hash-table-count.8
  - [ ] (deftest hash-table-count.9
  - [X] (deftest hash-table-count.10
  - [X] (deftest hash-table-count.11
  - [X] (deftest hash-table-count.error.1
  - [X] (deftest hash-table-count.error.2
*** environment [0%]
**** get-universal-time.lsp [57%]
  - [ ] (deftest get-universal-time.1
  - [ ] (deftest get-universal-time.2
  - [ ] (deftest get-universal-time.3
  - [X] (deftest get-universal-time.error.1
  - [X] (deftest get-universal-time.error.2
  - [X] (deftest get-decoded-time.error.1
  - [X] (deftest get-decoded-time.error.2
**** room.lsp [20%]
  - [ ] (deftest room.1
  - [ ] (deftest room.2
  - [ ] (deftest room.3
  - [ ] (deftest room.4
  - [X] (deftest room.errpr.1
**** disassemble.lsp [0%]
  - [ ] (deftest disassemble.1
  - [ ] (deftest disassemble.2
  - [ ] (deftest disassemble.3
  - [ ] (deftest disassemble.4
  - [ ] (deftest disassemble.5
  - [ ] (deftest disassemble.6
  - [ ] (deftest disassemble.7
  - [ ] (deftest disassemble.8
  - [ ] (deftest disassemble.9
  - [ ] (deftest disassemble.10
  - [ ] (deftest disassemble.11
  - [ ] (deftest disassemble.error.1
  - [ ] (deftest disassemble.error.2
  - [ ] (deftest disassemble.error.3
**** get-internal-time.lsp [50%]
  - [ ] (deftest get-internal-real-time.1
  - [ ] (deftest get-internal-real-time.2
  - [X] (deftest get-internal-real-time.error.1
  - [X] (deftest get-internal-real-time.error.2
  - [ ] (deftest get-internal-run-time.1
  - [ ] (deftest get-internal-run-time.2
  - [X] (deftest get-internal-run-time.error.1
  - [X] (deftest get-internal-run-time.error.2
  - [X] (deftest internal-time-units-per-second.1
  - [ ] (deftest internal-time-units-per-second.2
**** decode-universal-time.lsp [14%]
  - [ ] (deftest decode-universal-time.1
  - [ ] (deftest decode-universal-time.2
  - [ ] (deftest decode-universal-time.3
  - [ ] (deftest decode-universal-time.4
  - [ ] (deftest decode-universal-time.5
  - [ ] (deftest decode-universal-time.6
  - [ ] (deftest decode-universal-time.7
  - [ ] (deftest decode-universal-time.8
  - [ ] (deftest decode-universal-time.9
  - [ ] (deftest decode-universal-time.10
  - [ ] (deftest decode-universal-time.11
  - [ ] (deftest decode-universal-time.12
  - [X] (deftest decode-universal-time.error.1
  - [X] (deftest decode-universal-time.error.2
**** trace.lsp [0%]
  - [ ] (deftest trace.1
  - [ ] (deftest trace.2
  - [ ] (deftest trace.3
  - [ ] (deftest trace.4
  - [ ] (deftest trace.5
  - [ ] (deftest trace.6
  - [ ] (deftest trace.7
  - [ ] (deftest trace.8
  - [ ] (deftest trace.9
  - [ ] (deftest trace.10
  - [ ] (deftest trace.11
  - [ ] (deftest trace.12
  - [ ] (deftest trace.13
  - [ ] (deftest trace.14
  - [ ] (deftest trace.15
**** ed.lsp [100%]
  - [X] (deftest ed.error.1
**** user-homedir-pathname.lsp [14%]
  - [ ] (deftest user-homedir-pathname.1
  - [ ] (deftest user-homedir-pathname.2
  - [ ] (deftest user-homedir-pathname.3
  - [ ] (deftest user-homedir-pathname.4
  - [ ] (deftest user-homedir-pathname.5
  - [ ] (deftest user-homedir-pathname.7
  - [X] (deftest user-homedir-pathname.error.1
**** encode-universal-time.lsp [40%]
  - [ ] (deftest encode-universal-time.1
  - [ ] (deftest encode-universal-time.2
  - [ ] (deftest encode-universal-time.3
  - [X] (deftest encode-universal-time.error.1
  - [X] (deftest encode-universal-time.error.2
**** dribble.lsp [100%]
  - [X] (deftest dribble.error.1
**** describe.lsp [28%]
  - [ ] (deftest describe.1
  - [ ] (deftest describe.2
  - [ ] (deftest describe.3
  - [ ] (deftest describe.4
  - [ ] (deftest describe.5
  - [X] (deftest describe.error.1
  - [X] (deftest describe.error.2
**** environment-functions.lsp [0%]
  - [ ] (def-env-tests lisp-implementation-type)
  - [ ] (def-env-tests lisp-implementation-version)
  - [ ] (def-env-tests short-site-name)
  - [ ] (def-env-tests long-site-name)
  - [ ] (def-env-tests machine-instance)
  - [ ] (def-env-tests machine-type)
  - [ ] (def-env-tests machine-version)
  - [ ] (def-env-tests software-type)
  - [ ] (def-env-tests software-version)
**** apropos-list.lsp [18%]
  - [ ] (deftest apropos-list.1
  - [ ] (deftest apropos-list.2
  - [ ] (deftest apropos-list.3
  - [ ] (deftest apropos-list.4
  - [ ] (deftest apropos-list.5
  - [ ] (deftest apropos-list.6
  - [ ] (deftest apropos-list.7
  - [ ] (deftest apropos-list.8
  - [ ] (deftest apropos-list.9
  - [X] (deftest apropos-list.error.1
  - [X] (deftest apropos-list.error.2
**** inspect.lsp [0%]
  - [ ] (deftest inspect.error.1
  - [ ] (deftest inspect.error.2
**** time.lsp [0%]
  - [ ] (deftest time.1
  - [ ] (deftest time.2
  - [ ] (deftest time.3
  - [ ] (deftest time.4
  - [ ] (deftest time.5
  - [ ] (deftest time.6
  - [ ] (deftest time.7
  - [ ] (deftest time.8
  - [ ] (deftest time.9
**** sleep.lsp [12%]
  - [ ] (deftest sleep.1
  - [ ] (deftest sleep.2
  - [ ] (deftest sleep.3
  - [ ] (deftest sleep.4
  - [ ] (deftest sleep.5
  - [ ] (deftest sleep.6
  - [ ] (deftest sleep.7
  - [ ] (deftest sleep.8
  - [ ] (deftest sleep.9
  - [ ] (deftest sleep.10
  - [ ] (deftest sleep.11
  - [ ] (deftest sleep.12
  - [ ] (deftest sleep.13
  - [X] (deftest sleep.error.1
  - [X] (deftest sleep.error.2
  - [ ] (deftest sleep.error.3
**** documentation.lsp [3%]
  - [ ] (deftest documentation.function.t.1
  - [ ] (deftest documentation.function.t.2
  - [ ] (deftest documentation.function.t.3
  - [ ] (deftest documentation.function.t.4
  - [ ] (deftest documentation.function.t.6
  - [ ] (deftest documentation.function.t.6a
  - [ ] (deftest documentation.function.t.5
  - [ ] (deftest documentation.function.t.5a
  - [ ] (deftest documentation.function.t.7
  - [ ] (deftest documentation.function.t.8
  - [ ] (deftest documentation.function.t.9
  - [ ] (deftest documentation.function.t.10
  - [ ] (deftest documentation.function.t.11
  - [ ] (deftest documentation.function.t.12
  - [ ] (deftest documentation.function.function.1
  - [ ] (deftest documentation.function.function.2
  - [ ] (deftest documentation.function.function.3
  - [ ] (deftest documentation.function.function.4
  - [ ] (deftest documentation.function.function.5
  - [ ] (deftest documentation.function.function.8
  - [ ] (deftest documentation.list.function.1
  - [ ] (deftest documentation.list.function.2
  - [ ] (deftest documentation.list.compiler-macro.1
  - [ ] (deftest documentation.list.compiler-macro.2
  - [X] (deftest documentation.symbol.function.1
  - [ ] (deftest documentation.symbol.function.2
  - [X] (deftest documentation.symbol.function.3
  - [ ] (deftest documentation.symbol.function.4
  - [ ] (deftest documentation.symbol.function.5
  - [ ] (deftest documentation.symbol.function.6
  - [ ] (deftest documentation.symbol.function.7
  - [ ] (deftest documentation.symbol.function.8
  - [ ] (deftest documentation.symbol.function.9
  - [ ] (deftest documentation.symbol.compiler-macro.1
  - [ ] (deftest documentation.symbol.compiler-macro.2
  - [ ] (deftest documentation.symbol.setf.1
  - [ ] (deftest documentation.symbol.setf.2
  - [ ] (deftest documentation.symbol.method-combination.1
  - [ ] (deftest documentation.standard-method.t.1
  - [ ] (deftest documentation.package.t.1
  - [ ] (deftest documentation.standard-class.t.1
  - [ ] (deftest documentation.standard-class.type.1
  - [ ] (deftest documentation.struct-class.t.1
  - [ ] (deftest documentation.struct-class.type.1
  - [ ] (deftest documentation.symbol.type.1
  - [ ] (deftest documentation.symbol.type.2
  - [ ] (deftest documentation.symbol.type.3
  - [ ] (deftest documentation.symbol.type.4
  - [ ] (deftest documentation.symbol.structure.1
  - [ ] (deftest documentation.symbol.structure.2
  - [ ] (deftest documentation.symbol.structure.3
  - [ ] (deftest documentation.symbol.variable.1
  - [ ] (deftest documentation.symbol.variable.2
  - [ ] (deftest documentation.symbol.variable.3
  - [ ] (deftest documentation.symbol.variable.4
  - [ ] (deftest documentation.symbol.variable.5
  - [ ] (deftest documentation.symbol.variable.6
  - [ ] (deftest documentation.new-method.1
**** apropos.lsp [25%]
  - [X] (deftest apropos.1
  - [ ] (deftest apropos.2
  - [ ] (deftest apropos.3
  - [ ] (deftest apropos.4
  - [ ] (deftest apropos.5
  - [ ] (deftest apropos.6
  - [ ] (deftest apropos.7
  - [ ] (deftest apropos.8
  - [ ] (deftest apropos.9
  - [ ] (deftest apropos.10
  - [X] (deftest apropos.error.1
  - [X] (deftest apropos.error.2
*** random [0%]
**** random-type-prop-tests-07.lsp [0%]
  - [ ] (def-type-prop-test simple-string-p 'simple-string-p '(t) 1)
  - [ ] (def-type-prop-test char 'char (list 'string (index-type-for-dim 0)) 2)
  - [ ] (def-type-prop-test schar 'schar (list 'simple-string (index-type-for-dim 0)) 2)
  - [ ] (def-type-prop-test string 'string '((or string symbol character)) 1)
  - [ ] (def-type-prop-test string-upcase 'string-upcase '(string) 1)
  - [ ] (def-type-prop-test string-downcase 'string-downcase '(string) 1)
  - [ ] (def-type-prop-test string-capitalize 'string-capitalize '(string) 1)
  - [ ] (def-type-prop-test string-trim.1 'string-trim '(string string) 2)
  - [ ] (def-type-prop-test string-trim.2 'string-trim (list #'(lambda () (make-list-type (random 10) 'null 'character))
  - [ ] (def-type-prop-test string-left-trim.1 'string-left-trim '(string string) 2)
  - [ ] (def-type-prop-test string-left-trim.2 'string-left-trim (list #'(lambda () (make-list-type (random 10) 'null 'character))
  - [ ] (def-type-prop-test string-right-trim.1 'string-right-trim '(string string) 2)
  - [ ] (def-type-prop-test string-right-trim.2 'string-right-trim
  - [ ] (def-string-comparison-type-prop-test string=)
  - [ ] (def-string-comparison-type-prop-test string/=)
  - [ ] (def-string-comparison-type-prop-test string<)
  - [ ] (def-string-comparison-type-prop-test string<=)
  - [ ] (def-string-comparison-type-prop-test string>)
  - [ ] (def-string-comparison-type-prop-test string>=)
  - [ ] (def-string-comparison-type-prop-test string-equal)
  - [ ] (def-string-comparison-type-prop-test string-not-equal)
  - [ ] (def-string-comparison-type-prop-test string-lessp)
  - [ ] (def-string-comparison-type-prop-test string-greaterp)
  - [ ] (def-string-comparison-type-prop-test string-not-lessp)
  - [ ] (def-string-comparison-type-prop-test string-not-greaterp)
  - [ ] (def-type-prop-test stringp 'stringp '(t) 1)
  - [ ] (def-type-prop-test make-string.1 'make-string '((integer 0 100) (eql :initial-element) character) 3)
  - [ ] (def-type-prop-test make-string.2 'make-string `((integer 0 100) (eql :initial-element) character
**** random-type-prop-tests-04.lsp [0%]
  - [ ] (def-type-prop-test char=.1 'char= nil 2 :rest-type 'base-char :maxargs 5)
  - [ ] (def-type-prop-test char=.2 'char= '(character character) 2)
  - [ ] (def-type-prop-test char=.3 'char= (list 'character #'char-or-same) 2)
  - [ ] (def-type-prop-test char=.4 'char= (list 'character #'char-or-same #'char-or-same) 3)
  - [ ] (def-type-prop-test char=.5 'char= '(character) 3 :rest-type #'char-or-same :maxargs 6)
  - [ ] (def-type-prop-test char/=.1 'char/= nil 2 :rest-type 'base-char :maxargs 5)
  - [ ] (def-type-prop-test char/=.2 'char/= '(character character) 2)
  - [ ] (def-type-prop-test char/=.3 'char/= (list 'character #'char-or-same) 2)
  - [ ] (def-type-prop-test char/=.4 'char/= (list 'character 'character #'char-or-same) 3)
  - [ ] (def-type-prop-test char/=.5 'char/= nil 2 :rest-type 'character :maxargs 6)
  - [ ] (def-type-prop-test char<=.1 'char<= nil 2 :rest-type 'base-char :maxargs 5)
  - [ ] (def-type-prop-test char<=.2 'char<= '(character character) 2)
  - [ ] (def-type-prop-test char<=.3 'char<= (list 'character #'char-or-same) 2)
  - [ ] (def-type-prop-test char<=.4 'char<= (list 'character #'char-or-same #'char-or-same) 3)
  - [ ] (def-type-prop-test char<=.5 'char<= '(character) 3 :rest-type #'char-or-same :maxargs 6)
  - [ ] (def-type-prop-test char>=.1 'char>= nil 2 :rest-type 'base-char :maxargs 5)
  - [ ] (def-type-prop-test char>=.2 'char>= '(character character) 2)
  - [ ] (def-type-prop-test char>=.3 'char>= (list 'character #'char-or-same) 2)
  - [ ] (def-type-prop-test char>=.4 'char>= (list 'character #'char-or-same #'char-or-same) 3)
  - [ ] (def-type-prop-test char>=.5 'char>= '(character) 3 :rest-type #'char-or-same :maxargs 6)
  - [ ] (def-type-prop-test char<.1 'char< nil 2 :rest-type 'base-char :maxargs 5)
  - [ ] (def-type-prop-test char<.2 'char< '(character character) 2)
  - [ ] (def-type-prop-test char<.3 'char< (list 'character #'char-or-same) 2)
  - [ ] (def-type-prop-test char<.4 'char< (list 'character 'character #'char-or-same) 3)
  - [ ] (def-type-prop-test char<.5 'char< nil 2 :rest-type 'character :maxargs 6)
  - [ ] (def-type-prop-test char>.1 'char> nil 2 :rest-type 'base-char :maxargs 5)
  - [ ] (def-type-prop-test char>.2 'char> '(character character) 2)
  - [ ] (def-type-prop-test char>.3 'char> (list 'character #'char-or-same) 2)
  - [ ] (def-type-prop-test char>.4 'char> (list 'character 'character #'char-or-same) 3)
  - [ ] (def-type-prop-test char>.5 'char> nil 2 :rest-type 'character :maxargs 6)
  - [ ] (def-type-prop-test char-equal.1 'char-equal nil 2 :rest-type 'base-char :maxargs 5)
  - [ ] (def-type-prop-test char-equal.2 'char-equal '(character character) 2)
  - [ ] (def-type-prop-test char-equal.3 'char-equal (list 'character #'char-or-same) 2)
  - [ ] (def-type-prop-test char-equal.4 'char-equal (list 'character #'char-or-same #'char-or-same) 3)
  - [ ] (def-type-prop-test char-equal.5 'char-equal '(character) 3 :rest-type #'char-or-same :maxargs 6)
  - [ ] (def-type-prop-test char-not-equal.1 'char-not-equal nil 2 :rest-type 'base-char :maxargs 5)
  - [ ] (def-type-prop-test char-not-equal.2 'char-not-equal '(character character) 2)
  - [ ] (def-type-prop-test char-not-equal.3 'char-not-equal (list 'character #'char-or-same) 2)
  - [ ] (def-type-prop-test char-not-equal.4 'char-not-equal (list 'character 'character #'char-or-same) 3)
  - [ ] (def-type-prop-test char-not-equal.5 'char-not-equal nil 2 :rest-type 'character :maxargs 6)
  - [ ] (def-type-prop-test char-not-greaterp.1 'char-not-greaterp nil 2 :rest-type 'base-char :maxargs 5)
  - [ ] (def-type-prop-test char-not-greaterp.2 'char-not-greaterp '(character character) 2)
  - [ ] (def-type-prop-test char-not-greaterp.3 'char-not-greaterp (list 'character #'char-or-same) 2)
  - [ ] (def-type-prop-test char-not-greaterp.4 'char-not-greaterp (list 'character #'char-or-same #'char-or-same) 3)
  - [ ] (def-type-prop-test char-not-greaterp.5 'char-not-greaterp '(character) 3 :rest-type #'char-or-same :maxargs 6)
  - [ ] (def-type-prop-test char-not-lessp.1 'char-not-lessp nil 2 :rest-type 'base-char :maxargs 5)
  - [ ] (def-type-prop-test char-not-lessp.2 'char-not-lessp '(character character) 2)
  - [ ] (def-type-prop-test char-not-lessp.3 'char-not-lessp (list 'character #'char-or-same) 2)
  - [ ] (def-type-prop-test char-not-lessp.4 'char-not-lessp (list 'character #'char-or-same #'char-or-same) 3)
  - [ ] (def-type-prop-test char-not-lessp.5 'char-not-lessp '(character) 3 :rest-type #'char-or-same :maxargs 6)
  - [ ] (def-type-prop-test char-lessp.1 'char-lessp nil 2 :rest-type 'base-char :maxargs 5)
  - [ ] (def-type-prop-test char-lessp.2 'char-lessp '(character character) 2)
  - [ ] (def-type-prop-test char-lessp.3 'char-lessp (list 'character #'char-or-same) 2)
  - [ ] (def-type-prop-test char-lessp.4 'char-lessp (list 'character 'character #'char-or-same) 3)
  - [ ] (def-type-prop-test char-lessp.5 'char-lessp nil 2 :rest-type 'character :maxargs 6)
  - [ ] (def-type-prop-test char-greaterp.1 'char-greaterp nil 2 :rest-type 'base-char :maxargs 5)
  - [ ] (def-type-prop-test char-greaterp.2 'char-greaterp '(character character) 2)
  - [ ] (def-type-prop-test char-greaterp.3 'char-greaterp (list 'character #'char-or-same) 2)
  - [ ] (def-type-prop-test char-greaterp.4 'char-greaterp (list 'character 'character #'char-or-same) 3)
  - [ ] (def-type-prop-test char-greaterp.5 'char-greaterp nil 2 :rest-type 'character :maxargs 6)
  - [ ] (def-type-prop-test character 'character '((or character (and (string 1) (satisfies length1-p)))) 1)
  - [ ] (def-type-prop-test characterp 'characterp '(t) 1)
  - [ ] (def-type-prop-test alpha-char-p 'alpha-char-p '(character) 1)
  - [ ] (def-type-prop-test alphanumericp 'alphanumericp '(character) 1)
  - [ ] (def-type-prop-test digit-char 'digit-char '((or (integer 0 36) (integer 0)) (integer 2 36)) 1 :maxargs 2)
  - [ ] (def-type-prop-test digit-char-p 'digit-char-p '(character) 1)
  - [ ] (def-type-prop-test graphic-char-p 'graphic-char-p '(character) 1)
  - [ ] (def-type-prop-test standard-char-p 'standard-char-p '(character) 1)
  - [ ] (def-type-prop-test char-upcase 'char-upcase '(character) 1)
  - [ ] (def-type-prop-test char-downcase 'char-downcase '(character) 1)
  - [ ] (def-type-prop-test upper-case-p 'upper-case-p '(character) 1)
  - [ ] (def-type-prop-test lower-case-p 'lower-case-p '(character) 1)
  - [ ] (def-type-prop-test both-case-p 'both-case-p '(character) 1)
  - [ ] (def-type-prop-test char-code 'char-code '(character) 1)
  - [ ] (def-type-prop-test char-int 'char-int '(character) 1)
  - [ ] (def-type-prop-test code-char 'code-char '((integer 0 #.char-code-limit)) 1)
  - [ ] (def-type-prop-test char-name 'char-name '(character) 1)
  - [ ] (def-type-prop-test name-char 'name-char '(string) 1)
**** random-type-prop-tests-09.lsp [0%]
  - [ ] (def-type-prop-test find.1 'find
  - [ ] (def-type-prop-test find.2 'find
  - [ ] (def-type-prop-test find.3 'find
  - [ ] (def-type-prop-test find.4 'find
  - [ ] (def-type-prop-test find.5 'find
  - [ ] (def-type-prop-test find.6 'find
  - [ ] (def-type-prop-test find.7 'find
  - [ ] (def-type-prop-test find.8 'find
  - [ ] (def-type-prop-test find.9 'find
  - [ ] (def-type-prop-test find.10 'find
  - [ ] (def-type-prop-test find-if.1 'find-if
  - [ ] (def-type-prop-test find-if.2 'find-if
  - [ ] (def-type-prop-test find-if.3 'find-if
  - [ ] (def-type-prop-test find-if.4 'find-if
  - [ ] (def-type-prop-test find-if.5 'find-if
  - [ ] (def-type-prop-test find-if.6 'find-if
  - [ ] (def-type-prop-test find-if.7 'find-if
  - [ ] (def-type-prop-test find-if.8 'find-if
  - [ ] (def-type-prop-test find-if.9 'find-if
  - [ ] (def-type-prop-test find-if.10 'find-if
  - [ ] (def-type-prop-test find-if-not.1 'find-if-not
  - [ ] (def-type-prop-test find-if-not.2 'find-if-not
  - [ ] (def-type-prop-test find-if-not.3 'find-if-not
  - [ ] (def-type-prop-test find-if-not.4 'find-if-not
  - [ ] (def-type-prop-test find-if-not.5 'find-if-not
  - [ ] (def-type-prop-test find-if-not.6 'find-if-not
  - [ ] (def-type-prop-test find-if-not.7 'find-if-not
  - [ ] (def-type-prop-test find-if-not.8 'find-if-not
  - [ ] (def-type-prop-test find-if-not.9 'find-if-not
  - [ ] (def-type-prop-test find-if-not.10 'find-if-not
  - [ ] (def-type-prop-test position.1 'position
  - [ ] (def-type-prop-test position.2 'position
  - [ ] (def-type-prop-test position.3 'position
  - [ ] (def-type-prop-test position.4 'position
  - [ ] (def-type-prop-test position.5 'position
  - [ ] (def-type-prop-test position.6 'position
  - [ ] (def-type-prop-test position.7 'position
  - [ ] (def-type-prop-test position.8 'position
  - [ ] (def-type-prop-test position.9 'position
  - [ ] (def-type-prop-test position.10 'position
  - [ ] (def-type-prop-test position-if.1 'position-if
  - [ ] (def-type-prop-test position-if.2 'position-if
  - [ ] (def-type-prop-test position-if.3 'position-if
  - [ ] (def-type-prop-test position-if.4 'position-if
  - [ ] (def-type-prop-test position-if.5 'position-if
  - [ ] (def-type-prop-test position-if.6 'position-if
  - [ ] (def-type-prop-test position-if.7 'position-if
  - [ ] (def-type-prop-test position-if.8 'position-if
  - [ ] (def-type-prop-test position-if.9 'position-if
  - [ ] (def-type-prop-test position-if.10 'position-if
  - [ ] (def-type-prop-test position-if-not.1 'position-if-not
  - [ ] (def-type-prop-test position-if-not.2 'position-if-not
  - [ ] (def-type-prop-test position-if-not.3 'position-if-not
  - [ ] (def-type-prop-test position-if-not.4 'position-if-not
  - [ ] (def-type-prop-test position-if-not.5 'position-if-not
  - [ ] (def-type-prop-test position-if-not.6 'position-if-not
  - [ ] (def-type-prop-test position-if-not.7 'position-if-not
  - [ ] (def-type-prop-test position-if-not.8 'position-if-not
  - [ ] (def-type-prop-test position-if-not.9 'position-if-not
  - [ ] (def-type-prop-test position-if-not.10 'position-if-not
**** random-type-prop-tests-10.lsp [0%]
  - [ ] (def-type-prop-test search.1 'search
  - [ ] (def-type-prop-test search.2 'search
  - [ ] (def-type-prop-test search.3 'search
  - [ ] (def-type-prop-test search.4 'search
  - [ ] (def-type-prop-test search.5 'search
  - [ ] (def-type-prop-test search.6 'search
  - [ ] (def-type-prop-test search.7 'search
  - [ ] (def-type-prop-test search.8 'search
  - [ ] (def-type-prop-test search.9 'search
  - [ ] (def-type-prop-test search.10 'search
  - [ ] (def-type-prop-test search.11 'search
  - [ ] (def-type-prop-test search.12 'search
**** random-type-prop-tests-03.lsp [0%]
  - [ ] (def-type-prop-test *.1 '* '(integer integer) 2)
  - [ ] (def-type-prop-test *.2 '* nil 1 :rest-type 'integer :maxargs 4)
  - [ ] (def-type-prop-test *.3 '* nil 2 :rest-type 'integer :maxargs 10)
  - [ ] (def-type-prop-test *.4 '* '(real real) 2  :test #'approx=)
  - [ ] (def-type-prop-test *.5 '* '(number number) 2 :test #'approx=)
  - [ ] (def-type-prop-test \+.1 '+ '(integer integer) 2)
  - [ ] (def-type-prop-test \+.2 '+ nil 1 :rest-type 'integer :maxargs 4)
  - [ ] (def-type-prop-test \+.3 '+ nil 2 :rest-type 'integer :maxargs 10)
  - [ ] (def-type-prop-test \+.4 '+ '(real real) 2 :test #'approx=)
  - [ ] (def-type-prop-test \+.5 '+ '(number number) 2 :test #'approx=)
  - [ ] (def-type-prop-test \-.1 '- '(integer integer) 2)
  - [ ] (def-type-prop-test \-.2 '- nil 1 :rest-type 'integer :maxargs 4)
  - [ ] (def-type-prop-test \-.3 '- nil 2 :rest-type 'integer :maxargs 10)
  - [ ] (def-type-prop-test \-.4 '- '(real real) 2 :test #'approx=)
  - [ ] (def-type-prop-test \-.5 '- '(number number) 2 :test #'approx=)
  - [ ] (def-type-prop-test \-.6 '- '(number) 1)
  - [ ] (def-type-prop-test /.1 '/ '((and integer (not (satisfies zerop)))) 1)
  - [ ] (def-type-prop-test /.2 '/ '((and rational (not (satisfies zerop)))) 1)
  - [ ] (def-type-prop-test /.3 '/ '((and real (not (satisfies zerop)))) 1 :ignore 'arithmetic-error)
  - [ ] (def-type-prop-test /.4 '/ '((and complex (not (satisfies zerop)))) 1 :ignore 'arithmetic-error)
  - [ ] (def-type-prop-test /.5 '/ '(integer) 2 :maxargs 6 :rest-type '(and integer (not (satisfies zerop))))
  - [ ] (def-type-prop-test /.6 '/ '(rational) 2 :maxargs 6 :rest-type '(and rational (not (satisfies zerop))))
  - [ ] (def-type-prop-test /.7 '/ '(real) 2 :maxargs 6 :rest-type '(and real (not (satisfies zerop)))
  - [ ] (def-type-prop-test /.8 '/ '(number) 2 :maxargs 6 :rest-type '(and number (not (satisfies zerop)))
  - [ ] (def-type-prop-test 1+.1 '1+ '(integer) 1)
  - [ ] (def-type-prop-test 1+.2 '1+ '(rational) 1)
  - [ ] (def-type-prop-test 1+.3 '1+ '(real) 1)
  - [ ] (def-type-prop-test 1+.4 '1+ '(number) 1)
  - [ ] (def-type-prop-test 1-.1 '1- '(integer) 1)
  - [ ] (def-type-prop-test 1-.2 '1- '(rational) 1)
  - [ ] (def-type-prop-test 1-.3 '1- '(real) 1)
  - [ ] (def-type-prop-test 1-.4 '1- '(number) 1)
  - [ ] (def-type-prop-test abs.1 'abs '(integer) 1)
  - [ ] (def-type-prop-test abs.2 'abs '(rational) 1)
  - [ ] (def-type-prop-test abs.3 'abs '(real) 1)
  - [ ] (def-type-prop-test abs.4 'abs '(number) 1)
  - [ ] (def-type-prop-test evenp 'evenp '(integer) 1)
  - [ ] (def-type-prop-test oddp 'oddp '(integer) 1)
  - [ ] (def-type-prop-test gcd 'gcd nil 1 :maxargs 6 :rest-type 'integer)
  - [ ] (def-type-prop-test lcm 'lcm nil 1 :maxargs 6 :rest-type 'integer)
  - [ ] (def-type-prop-test log.1 'log '((and real (not (satisfies zerop)))) 1 :test #'approx=)
  - [ ] (def-type-prop-test log.2 'log '((and number (not (satisfies zerop)))) 1 :test #'approx=)
  - [ ] (def-type-prop-test mod.1 'mod '(integer (and integer (not (satisfies zerop)))) 2)
  - [ ] (def-type-prop-test mod.2 'mod '(real (and real (not (satisfies zerop)))) 2 :test #'approx=)
  - [ ] (def-type-prop-test rem.1 'rem '(integer (and integer (not (satisfies zerop)))) 2)
  - [ ] (def-type-prop-test rem.2 'rem '(real (and real (not (satisfies zerop)))) 2 :test #'approx=)
  - [ ] (def-type-prop-test signum.1 'signum '(integer) 1)
  - [ ] (def-type-prop-test signum.2 'signum '(rational) 1)
  - [ ] (def-type-prop-test signum.3 'signum '(real) 1)
  - [ ] (def-type-prop-test signum.4 'signum '(number) 1)
  - [ ] (def-type-prop-test sqrt.1 'sqrt '(integer) 1 :test #'approx=)
  - [ ] (def-type-prop-test sqrt.2 'sqrt '(rational) 1 :test #'approx=)
  - [ ] (def-type-prop-test sqrt.3 'sqrt '(real) 1 :test #'approx=)
  - [ ] (def-type-prop-test sqrt.4 'sqrt '(number) 1 :test #'approx=)
  - [ ] (def-type-prop-test isqrt 'isqrt '((integer 0)) 1)
  - [ ] (def-type-prop-test numberp 'numberp '(t) 1)
  - [ ] (def-type-prop-test complex.1 'complex '(integer) 1)
  - [ ] (def-type-prop-test complex.2 'complex '(rational) 1)
  - [ ] (def-type-prop-test complex.3 'complex '(real) 1)
  - [ ] (def-type-prop-test complex.4 'complex '(rational rational) 2)
  - [ ] (def-type-prop-test complex.5 'complex '(real real) 2)
  - [ ] (def-type-prop-test complexp 'complexp '(t) 1)
  - [ ] (def-type-prop-test conjugate 'conjugate '(number) 1)
  - [ ] (def-type-prop-test phase.1 'phase '(real) 1)
  - [ ] (def-type-prop-test phase.2 'phase '(number) 1 :test #'approx=)
  - [ ] (def-type-prop-test realpart.1 'realpart '(real) 1)
  - [ ] (def-type-prop-test realpart.2 'realpart '(number) 1)
  - [ ] (def-type-prop-test imagpart.1 'imagpart '(real) 1)
  - [ ] (def-type-prop-test imagpart.2 'imagpart '(number) 1)
  - [ ] (def-type-prop-test realp 'realp '(t) 1)
  - [ ] (def-type-prop-test numerator 'numerator '(rational) 1)
  - [ ] (def-type-prop-test denominator 'denominator '(rational) 1)
  - [ ] (def-type-prop-test rational 'rational '(real) 1)
  - [ ] (def-type-prop-test rationalize 'rationalize '(real) 1)
  - [ ] (def-type-prop-test rationalp 'rationalp '(t) 1)
  - [ ] (def-type-prop-test ash.1 'ash '(integer (integer -32 32)) 2)
  - [ ] (def-type-prop-test ash.2 'ash '(integer (integer -100 100)) 2)
  - [ ] (def-type-prop-test integer-length 'integer-length '(integer) 1)
  - [ ] (def-type-prop-test integerp 'integerp '(t) 1)
  - [ ] (def-type-prop-test logand.1 'logand '(integer integer) 2)
  - [ ] (def-type-prop-test logand.2 'logand nil 2 :rest-type 'integer :maxargs 6)
  - [ ] (def-type-prop-test logandc1 'logandc1 '(integer integer) 2)
  - [ ] (def-type-prop-test logandc2 'logandc2 '(integer integer) 2)
  - [ ] (def-type-prop-test lognand 'lognand '(integer integer) 2)
  - [ ] (def-type-prop-test lognor 'lognor '(integer integer) 2)
  - [ ] (def-type-prop-test logeqv.1 'logeqv '(integer integer) 2)
  - [ ] (def-type-prop-test logeqv.2 'logeqv nil 2 :rest-type 'integer :maxargs 6)
  - [ ] (def-type-prop-test logior.1 'logior '(integer integer) 2)
  - [ ] (def-type-prop-test logior.2 'logior nil 2 :rest-type 'integer :maxargs 6)
  - [ ] (def-type-prop-test logxor.1 'logxor '(integer integer) 2)
  - [ ] (def-type-prop-test logxor.2 'logxor nil 2 :rest-type 'integer :maxargs 6)
  - [ ] (def-type-prop-test logorc1 'logorc1 '(integer integer) 2)
  - [ ] (def-type-prop-test logorc2 'logorc2 '(integer integer) 2)
  - [ ] (def-type-prop-test lognot 'lognot '(integer) 1)
  - [ ] (def-type-prop-test logbitp.1 'logbitp '((integer 0 32) integer) 2)
  - [ ] (def-type-prop-test logbitp.2 'logbitp '((integer 0 100) integer) 2)
  - [ ] (def-type-prop-test logcount 'logcount '(integer) 1)
  - [ ] (def-type-prop-test logtest 'logtest '(integer integer) 2)
  - [ ] (def-type-prop-test decode-float.1 'decode-float '(float) 1)
  - [ ] (def-type-prop-test decode-float.2 '(lambda (x) (nth-value 1 (decode-float x))) '(float) 1)
  - [ ] (def-type-prop-test decode-float.3 '(lambda (x) (nth-value 2 (decode-float x))) '(float) 1)
  - [ ] (def-type-prop-test float-radix 'float-radix '(float) 1)
  - [ ] (def-type-prop-test scale-float 'scale-float '(float (integer -30 30)) 2 :ignore 'arithmetic-error :test #'approx=)
  - [ ] (def-type-prop-test float-sign.1 'float-sign '(float) 1)
  - [ ] (def-type-prop-test float-sign.2 'float-sign '(float float) 2)
  - [ ] (def-type-prop-test float-digits 'float-digits '(float) 1)
  - [ ] (def-type-prop-test float-precision 'float-precision '(float) 1)
  - [ ] (def-type-prop-test integer-decode-float.1 'integer-decode-float '(float) 1)
  - [ ] (def-type-prop-test integer-decode-float.2 '(lambda (x) (nth-value 1 (integer-decode-float x))) '(float) 1)
  - [ ] (def-type-prop-test integer-decode-float.3 '(lambda (x) (nth-value 2 (integer-decode-float x))) '(float) 1)
  - [ ] (def-type-prop-test float.1 'float '(real) 1)
  - [ ] (def-type-prop-test float.2 'float '(real float) 2)
  - [ ] (def-type-prop-test floatp 'floatp '(t) 1)
  - [ ] (def-type-prop-test parse-integer.1 'parse-integer
  - [ ] (def-type-prop-test parse-integer.2 'parse-integer
  - [ ] (def-type-prop-test sxhash 'sxhash '(t) 1)
**** random-class.lsp [0%]
**** random-int-form.lsp [0%]
**** make-random-element-of.lsp [0%]
**** random-types.lsp [0%]
**** random-type-prop-tests-structs.lsp [0%]
  - [ ] (def-type-prop-test structure-ref.1 'rtpt-1-a '(rtpt-1) 1)
  - [ ] (def-type-prop-test copy-structure.1 'copy-structure '(rtpt-1) 1
  - [ ] (def-type-prop-test structure-ref.2 'rtpt-2-a '(rtpt-2) 1)
**** random-type-prop-tests-01.lsp [0%]
  - [ ] (def-type-prop-test special-operator-p 'special-operator-p '(symbol) 1)
  - [ ] (def-type-prop-test type-of 'type-of '(t) 1)
  - [ ] (def-type-prop-test typep.1 '(lambda (x y) (typep x (type-of y))) '(t t) 2)
  - [ ] (def-type-prop-test typep.2 'typep
  - [ ] (def-type-prop-test subtypep
  - [ ] (def-type-prop-test fboundp.1 'fboundp '(symbol) 1)
  - [ ] (def-type-prop-test fboundp.2 'fboundp '((cons (eql setf) (cons symbol null))) 1)
  - [ ] (def-type-prop-test functionp 'functionp '(t) 1)
  - [ ] (def-type-prop-test compiled-function-p 'compiled-function-p '(t) 1)
  - [ ] (def-type-prop-test not 'not '(t) 1)
  - [ ] (def-type-prop-test eq 'eq (list
  - [ ] (def-type-prop-test eql.1 'eql '(t t) 2)
  - [ ] (def-type-prop-test eql.2 'eql (list t #'(lambda (x) `(eql ,x))) 2)
  - [ ] (def-type-prop-test equal.1 'equal '(t t) 2)
  - [ ] (def-type-prop-test equal.2 'equal (list t #'(lambda (x) `(eql ,x))) 2)
  - [ ] (def-type-prop-test equalp.1 'equalp '(t t) 2)
  - [ ] (def-type-prop-test equalp.2 'equalp (list t #'(lambda (x) `(eql ,x))) 2)
  - [ ] (def-type-prop-test identity 'identity '(t) 1)
  - [ ] (def-type-prop-test complement
  - [ ] (def-type-prop-test constantly
  - [ ] (def-type-prop-test and.1 'and '(t) 1)
  - [ ] (def-type-prop-test and.2 'and '((or null t) t) 2)
  - [ ] (def-type-prop-test and.3 'and '((or null t) (or null t) t) 3)
  - [ ] (def-type-prop-test if.1 'if '(boolean t) 2)
  - [ ] (def-type-prop-test if.2 'if '(boolean t t) 3)
  - [ ] (def-type-prop-test if.3 '(lambda (p q x y z) (if p (if q x y) z))
  - [ ] (def-type-prop-test if.4 '(lambda (p q x y z) (if p x (if q y z)))
  - [ ] (def-type-prop-test if.5 '(lambda (p q x y) (if (or p q) x y))
  - [ ] (def-type-prop-test if.6 '(lambda (p q x y) (if (and p q) x y))
  - [ ] (def-type-prop-test cond.1 '(lambda (p x y) (cond (p x) (t y))) '(boolean t t) 3)
  - [ ] (def-type-prop-test cond.2 '(lambda (p x y) (cond (p x) (t y))) '((or null t) t t) 3)
  - [ ] (def-type-prop-test or.1 'or '(t) 1)
  - [ ] (def-type-prop-test or.2 'or '((or null t) t) 2)
  - [ ] (def-type-prop-test or.3 'or '((or null null t) (or null t) t) 3)
  - [ ] (def-type-prop-test when 'when '((or null t) t) 2)
  - [ ] (def-type-prop-test unless 'unless '((or null t) t) 2)
  - [ ] (def-type-prop-test slot-exists-p 'slot-exists-p '(t symbol) 2)
  - [ ] (def-type-prop-test find-class 'find-class '(symbol null) 2)
  - [ ] (def-type-prop-test class-of 'class-of '(t) 1)
  - [ ] (def-type-prop-test find-restart 'find-restart '((and symbol (not null))) 1)
  - [ ] (def-type-prop-test symbolp 'symbolp '(t) 1)
  - [ ] (def-type-prop-test keywordp 'keywordp '(t) 1)
  - [ ] (def-type-prop-test make-symbol 'make-symbol '(string) 1
  - [ ] (def-type-prop-test symbol-name 'symbol-name '(symbol) 1)
  - [ ] (def-type-prop-test symbol-package 'symbol-package '(symbol) 1)
  - [ ] (def-type-prop-test boundp 'boundp '(symbol) 1)
  - [ ] (def-type-prop-test find-symbol 'find-symbol '(string) 1)
  - [ ] (def-type-prop-test find-package 'find-package '((or string symbol character)) 1)
**** random-type-prop-tests-05.lsp [0%]
  - [ ] (def-type-prop-test list.1 'list nil 1 :rest-type 't :maxargs 10)
  - [ ] (def-type-prop-test list.2 '(lambda (x) (car (list x))) '(t) 1)
  - [ ] (def-type-prop-test list.3 '(lambda (x y) (cdr (list x y))) '(t t) 2)
  - [ ] (def-type-prop-test list.4 '(lambda (x y z) (cadr (list x y z))) '(t t t) 3)
  - [ ] (def-type-prop-test list.5 '(lambda (x) (let ((z (list x))) (declare (dynamic-extent z)) (car z)))  '(t) 1)
  - [ ] (def-type-prop-test list* 'list* () 1 :rest-type t :maxargs 10)
  - [ ] (def-type-prop-test null 'null '(t) 1)
  - [ ] (def-type-prop-test cons.1 'cons '(t t) 2)
  - [ ] (def-type-prop-test cons.2 '(lambda (x y) (car (cons y x))) '(t t) 2)
  - [ ] (def-type-prop-test cons.3 '(lambda (x y) (cdr (cons x y))) '(t t) 2)
  - [ ] (def-type-prop-test consp 'consp '(t) 1)
  - [ ] (def-type-prop-test atom 'atom '(t) 1)
  - [ ] (def-type-prop-test rplaca 'rplaca '(cons t) 2 :replicate '(t nil))
  - [ ] (def-type-prop-test rplacd 'rplacd '(cons t) 2 :replicate '(t nil))
  - [ ] (def-type-prop-test car 'car '((cons t t)) 1)
  - [ ] (def-type-prop-test first 'first '((cons t t)) 1)
  - [ ] (def-type-prop-test cdr 'cdr '((cons t t)) 1)
  - [ ] (def-type-prop-test rest 'rest '((cons t t)) 1)
  - [ ] (def-type-prop-test caar 'caar '((cons (cons t t) t)) 1)
  - [ ] (def-type-prop-test cdar 'cdar '((cons (cons t t) t)) 1)
  - [ ] (def-type-prop-test cadr 'cadr '((cons t (cons t t))) 1)
  - [ ] (def-type-prop-test second 'second '((cons t (cons t t))) 1)
  - [ ] (def-type-prop-test cddr 'cddr '((cons t (cons t t))) 1)
  - [ ] (def-type-prop-test caaar 'caaar '((cons (cons (cons t t) t) t)) 1)
  - [ ] (def-type-prop-test cdaar 'cdaar '((cons (cons (cons t t) t) t)) 1)
  - [ ] (def-type-prop-test cadar 'cadar '((cons (cons t (cons t t)) t)) 1)
  - [ ] (def-type-prop-test cddar 'cddar '((cons (cons t (cons t t)) t)) 1)
  - [ ] (def-type-prop-test caadr 'caadr '((cons t (cons (cons t t) t))) 1)
  - [ ] (def-type-prop-test cdadr 'cdadr '((cons t (cons (cons t t) t))) 1)
  - [ ] (def-type-prop-test caddr 'caddr '((cons t (cons t (cons t t)))) 1)
  - [ ] (def-type-prop-test third 'third '((cons t (cons t (cons t t)))) 1)
  - [ ] (def-type-prop-test cdddr 'cdddr '((cons t (cons t (cons t t)))) 1)
  - [ ] (def-type-prop-test caaaar'caaaar '((cons (cons (cons (cons t t) t) t) t)) 1)
  - [ ] (def-type-prop-test cdaaar 'cdaaar '((cons (cons (cons (cons t t) t) t) t)) 1)
  - [ ] (def-type-prop-test cadaar 'cadaar '((cons (cons (cons t (cons t t)) t) t)) 1)
  - [ ] (def-type-prop-test cddaar 'cddaar '((cons (cons (cons t (cons t t)) t) t)) 1)
  - [ ] (def-type-prop-test caadar 'caadar '((cons (cons t (cons (cons t t) t)) t)) 1)
  - [ ] (def-type-prop-test cdadar 'cdadar '((cons (cons t (cons (cons t t) t)) t)) 1)
  - [ ] (def-type-prop-test caddar 'caddar '((cons (cons t (cons t (cons t t))) t)) 1)
  - [ ] (def-type-prop-test cdddar 'cdddar '((cons (cons t (cons t (cons t t))) t)) 1)
  - [ ] (def-type-prop-test caaadr 'caaadr '((cons t (cons (cons (cons t t) t) t))) 1)
  - [ ] (def-type-prop-test cdaadr 'cdaadr '((cons t (cons (cons (cons t t) t) t))) 1)
  - [ ] (def-type-prop-test cadadr 'cadadr '((cons t (cons (cons t (cons t t)) t))) 1)
  - [ ] (def-type-prop-test cddadr 'cddadr '((cons t (cons (cons t (cons t t)) t))) 1)
  - [ ] (def-type-prop-test caaddr 'caaddr '((cons t (cons t (cons (cons t t) t)))) 1)
  - [ ] (def-type-prop-test cdaddr 'cdaddr '((cons t (cons t (cons (cons t t) t)))) 1)
  - [ ] (def-type-prop-test cadddr 'cadddr '((cons t (cons t (cons t (cons t t))))) 1)
  - [ ] (def-type-prop-test fourth 'fourth '((cons t (cons t (cons t (cons t t))))) 1)
  - [ ] (def-type-prop-test cddddr 'cddddr '((cons t (cons t (cons t (cons t t))))) 1)
  - [ ] (def-type-prop-test fifth 'fifth '((cons t (cons t (cons t (cons t (cons t t)))))) 1)
  - [ ] (def-type-prop-test sixth 'sixth '((cons t (cons t (cons t (cons t (cons t (cons t t))))))) 1)
  - [ ] (def-type-prop-test seventh 'seventh '((cons t (cons t (cons t (cons t (cons t (cons t (cons t t)))))))) 1)
  - [ ] (def-type-prop-test eighth 'eighth
  - [ ] (def-type-prop-test ninth 'ninth
  - [ ] (def-type-prop-test tenth 'tenth
  - [ ] (def-type-prop-test pop '(lambda (x) (list (pop x) x)) '((cons t t)) 1)
  - [ ] (def-type-prop-test push '(lambda (x y) (list (push x y) x y)) '(t t) 2)
  - [ ] (def-type-prop-test copy-tree.1 'copy-tree '((cons t t)) 1)
  - [ ] (def-type-prop-test copy-tree.2 'copy-tree '((cons (cons t t) (cons t t))) 1)
  - [ ] (def-type-prop-test copy-tree.3 'copy-tree '((cons t (cons (cons t (cons t t)) t))) 1)
  - [ ] (def-type-prop-test copy-tree.4 'copy-tree '(list) 1)
  - [ ] (def-type-prop-test sublis.1 'sublis '((cons (cons symbol t) null) list) 2)
  - [ ] (def-type-prop-test sublis.2 'sublis '((cons (cons (integer 0 7) t) null) list) 2)
  - [ ] (def-type-prop-test sublis.3 'sublis '(null list) 2)
  - [ ] (def-type-prop-test sublis.4 'sublis `((cons (cons boolean t) null) list
  - [ ] (def-type-prop-test sublis.5 'sublis `((cons (cons t t) null) list (eql :test) (or (eql equal) (eql ,#'equal))) 4)
  - [ ] (def-type-prop-test sublis.6 'sublis `((cons (cons t t) null) list (eql :test-not) (or (eql eql) (eql ,#'eql))) 4)
  - [ ] (def-type-prop-test subst.1 'subst '(t t t) 3)
  - [ ] (def-type-prop-test subst.2 'subst '(t t (cons t t)) 3)
  - [ ] (def-type-prop-test subst.3 'subst '(t t list) 3)
  - [ ] (def-type-prop-test subst.4 'subst '(t t (cons (cons t t) (cons t t))) 3)
  - [ ] (def-type-prop-test subst.5 'subst `(boolean t (cons (cons t t) (cons t t))
  - [ ] (def-type-prop-test subst.6 'subst `(t t (cons (cons t t) (cons t t)) (eql :test) (or (eql equal) (eql ,#'equal))) 5)
  - [ ] (def-type-prop-test subst.7 'subst `(t t (cons (cons t t) (cons t t)) (eql :test-not) (or (eql equal) (eql ,#'equal))) 5)
  - [ ] (def-type-prop-test subst.8 'subst `(t t (cons (cons t t) (cons t t))
  - [ ] (def-type-prop-test nsubst.1 'nsubst '(t t t) 3 :replicate '(nil nil t))
  - [ ] (def-type-prop-test nsubst.2 'nsubst '(t t (cons t t)) 3 :replicate '(nil nil t))
  - [ ] (def-type-prop-test nsubst.3 'nsubst '(t t list) 3 :replicate '(nil nil t))
  - [ ] (def-type-prop-test nsubst.4 'nsubst '(t t (cons (cons t t) (cons t t))) 3 :replicate '(nil nil t))
  - [ ] (def-type-prop-test nsubst.5 'nsubst `(boolean t (cons (cons t t) (cons t t))
  - [ ] (def-type-prop-test nsubst.6 'nsubst `(t t (cons (cons t t) (cons t t)) (eql :test) (or (eql equal) (eql ,#'equal))) 5 :replicate '(nil nil t nil nil))
  - [ ] (def-type-prop-test nsubst.7 'nsubst `(t t (cons (cons t t) (cons t t)) (eql :test-not) (or (eql equal) (eql ,#'equal))) 5 :replicate '(nil nil t nil nil))
  - [ ] (def-type-prop-test nsubst.8 'nsubst `(t t (cons (cons t t) (cons t t))
  - [ ] (def-type-prop-test subst-if.1 'subst-if `(t (or (eql not) (eql ,#'not)) list) 3)
  - [ ] (def-type-prop-test subst-if.2 'subst-if `(t (or (eql not) (eql ,#'not)) (cons (or null t) (or null t))) 3)
  - [ ] (def-type-prop-test subst-if.3 'subst-if `(t (eql identity)
  - [ ] (def-type-prop-test nsubst-if.1 'nsubst-if `(t (or (eql not) (eql ,#'not)) list) 3 :replicate '(nil nil t))
  - [ ] (def-type-prop-test nsubst-if.2 'nsubst-if `(t (or (eql not) (eql ,#'not)) (cons (or null t) (or null t))) 3 :replicate '(nil nil t))
  - [ ] (def-type-prop-test nsubst-if.3 'nsubst-if `(t (eql identity)
  - [ ] (def-type-prop-test subst-if-not.1 'subst-if-not `(t (or (eql not) (eql ,#'not)) list) 3)
  - [ ] (def-type-prop-test subst-if-not.2 'subst-if-not `(t (or (eql not) (eql ,#'not)) (cons (or null t) (or null t))) 3)
  - [ ] (def-type-prop-test subst-if-not.3 'subst-if-not `(t (eql identity)
  - [ ] (def-type-prop-test nsubst-if-not.1 'nsubst-if-not `(t (or (eql not) (eql ,#'not)) list) 3 :replicate '(nil nil t))
  - [ ] (def-type-prop-test nsubst-if-not.2 'nsubst-if-not `(t (or (eql not) (eql ,#'not)) (cons (or null t) (or null t))) 3 :replicate '(nil nil t))
  - [ ] (def-type-prop-test nsubst-if-not.3 'nsubst-if-not `(t (eql identity)
  - [ ] (def-type-prop-test tree-equal.1 'tree-equal (list t #'(lambda (x) `(or t (eql ,(copy-tree x))))) 2)
  - [ ] (def-type-prop-test tree-equal.2 'tree-equal (list 'list #'(lambda (x) `(or list (eql ,(copy-tree t))))) 2)
  - [ ] (def-type-prop-test tree-equal.3 'tree-equal (list '(cons t t)
  - [ ] (def-type-prop-test tree-equal.4 'tree-equal (list t #'(lambda (x) `(or t (eql ,(copy-tree x))))
  - [ ] (def-type-prop-test copy-list.1 'copy-list '(list) 1)
  - [ ] (def-type-prop-test copy-list.2 'copy-list '((cons t t)) 1)
  - [ ] (def-type-prop-test copy-list.3 'copy-list '((cons t (cons t (or t (cons t (or t (cons t t))))))) 1)
  - [ ] (def-type-prop-test list-length.1 'list-length '(list) 1)
  - [ ] (def-type-prop-test list-length.2 'list-length '((cons t list)) 1)
  - [ ] (def-type-prop-test listp 'listp '(t) 1)
  - [ ] (def-type-prop-test make-list.1 'make-list '((integer 0 100)) 1)
  - [ ] (def-type-prop-test make-list.2 '(lambda (x) (length (make-list x))) '((integer 0 100)) 1)
  - [ ] (def-type-prop-test make-list.3 'make-list '((integer 0 100) (eql :initial-element) t) 3)
  - [ ] (def-type-prop-test nth.1 'nth '((integer 0 12) list) 2)
  - [ ] (def-type-prop-test endp.1 'endp '((or null (cons t t))) 1)
  - [ ] (def-type-prop-test append.1 'append nil 1 :maxargs 10 :rest-type 'list)
  - [ ] (def-type-prop-test append.2 'append '(list t) 2)
  - [ ] (def-type-prop-test append.3 'append '(list list t) 3)
  - [ ] (def-type-prop-test append.4 'append '(list list list t) 4)
  - [ ] (def-type-prop-test nconc.1 'nconc '(list) 1)
  - [ ] (def-type-prop-test nconc.2 'nconc '(list list) 2 :replicate '(t nil))
  - [ ] (def-type-prop-test nconc.3 'nconc '(list list list) 3 :replicate '(t t nil))
  - [ ] (def-type-prop-test nconc.4 'nconc '(list list list list) 4 :replicate '(t t t nil))
  - [ ] (def-type-prop-test revappend 'revappend '(list t) 2)
  - [ ] (def-type-prop-test nreconc 'nreconc '(list t) 2 :replicate '(t nil))
  - [ ] (def-type-prop-test butlast.1 'butlast '(list) 1)
  - [ ] (def-type-prop-test butlast.2 'butlast '(list (integer 0 20)) 2)
  - [ ] (def-type-prop-test nbutlast.1 'nbutlast '(list) 1 :replicate '(t))
  - [ ] (def-type-prop-test nbutlast.2 'nbutlast '(list (integer 0 20)) 2 :replicate '(t nil))
  - [ ] (def-type-prop-test last.1 'last '(list) 1)
  - [ ] (def-type-prop-test last.2 'last '(list (integer 0 15)) 2)
  - [ ] (def-type-prop-test last.3 'last '((cons t (or t (cons t (or t (cons t t)))))) 1)
  - [ ] (def-type-prop-test last.4 'last '((cons t (or t (cons t (or t (cons t t))))) (integer 0 5)) 2)
  - [ ] (def-type-prop-test ldiff.1 'ldiff '(list t) 2)
  - [ ] (def-type-prop-test ldiff.2 'ldiff (list 'list
  - [ ] (def-type-prop-test tailp.1 'tailp '(t list) 2)
  - [ ] (def-type-prop-test tailp.2 'tailp (list t #'(lambda (x) (make-list-type (1+ (random 10)) `(eql ,x)))) 2)
  - [ ] (def-type-prop-test nthcdr 'nthcdr '((integer 0 20) list) 2)
  - [ ] (def-type-prop-test member.1 'member '(t list) 2)
  - [ ] (def-type-prop-test member.2 'member
  - [ ] (def-type-prop-test member.3 'member `(t list (eql :key) (or (eql not) (eql ,#'not))) 4)
  - [ ] (def-type-prop-test member.4 'member `(t list (eql :test) (or (eql equalp) (eql ,#'equalp))) 4)
  - [ ] (def-type-prop-test member.5 'member `(t list (eql :test-not) (or (eql eql) (eql ,#'eql))) 4)
  - [ ] (def-type-prop-test member.6 'member `(t list (eql :allow-other-keys) (and t (not null)) (eql :foo) t) 6)
  - [ ] (def-type-prop-test member-if.1 'member-if `((or (eql symbolp) (eql ,#'symbolp)) list) 2)
  - [ ] (def-type-prop-test member-if.2 'member-if
  - [ ] (def-type-prop-test member-if.3 'member-if
  - [ ] (def-type-prop-test member-if-not.1 'member-if-not `((or (eql symbolp) (eql ,#'symbolp)) list) 2)
  - [ ] (def-type-prop-test member-if-not.2 'member-if-not
  - [ ] (def-type-prop-test member-if-not.3 'member-if-not
  - [ ] (def-type-prop-test member-if-not.4 'member-if-not
  - [ ] (def-type-prop-test mapc.1 'mapc '((eql list)) 2 :rest-type 'list :maxargs 10)
  - [ ] (def-type-prop-test mapc.2 'mapc `((eql ,#'values)) 2 :rest-type 'list :maxargs 10)
  - [ ] (def-type-prop-test mapcar.1 'mapcar '((eql list)) 2 :rest-type 'list :maxargs 10)
  - [ ] (def-type-prop-test mapcar.2 'mapcar `((eql ,#'vector)) 2 :rest-type 'list :maxargs 10)
  - [ ] (def-type-prop-test maplist.1 'maplist '((eql list)) 2 :rest-type 'list :maxargs 10)
  - [ ] (def-type-prop-test maplist.2 'maplist `((eql ,#'vector)) 2 :rest-type 'list :maxargs 10)
  - [ ] (def-type-prop-test mapl.1 'mapl '((eql list)) 2 :rest-type 'list :maxargs 10)
  - [ ] (def-type-prop-test mapl.2 'mapl `((eql ,#'vector)) 2 :rest-type 'list :maxargs 10)
  - [ ] (def-type-prop-test mapcan.1 'mapcan '((eql list)) 2 :rest-type 'list :maxargs 10)
  - [ ] (def-type-prop-test mapcon.1 'mapcon '((eql copy-list) list) 2)
  - [ ] (def-type-prop-test acons 'acons
  - [ ] (def-type-prop-test assoc.1 'assoc (list t #'(lambda (x) (make-list-type (random 6) 'null '(or null (cons t t))))) 2)
  - [ ] (def-type-prop-test assoc.2 'assoc
  - [ ] (def-type-prop-test assoc.3 'assoc
  - [ ] (def-type-prop-test assoc.4 'assoc
  - [ ] (def-type-prop-test assoc-if.1 'assoc-if
  - [ ] (def-type-prop-test assoc-if.2 'assoc-if
  - [ ] (def-type-prop-test assoc-if-not.1 'assoc-if-not
  - [ ] (def-type-prop-test assoc-if-not.2 'assoc-if-not
  - [ ] (def-type-prop-test copy-alist 'copy-alist
  - [ ] (def-type-prop-test pairlis.1 'pairlis
  - [ ] (def-type-prop-test pairlis.2 'pairlis
  - [ ] (def-type-prop-test rassoc.1 'rassoc (list t #'(lambda (x) (make-list-type (random 6) 'null '(or null (cons t t))))) 2)
  - [ ] (def-type-prop-test rassoc.2 'rassoc
  - [ ] (def-type-prop-test rassoc.3 'rassoc
  - [ ] (def-type-prop-test rassoc.4 'rassoc
  - [ ] (def-type-prop-test rassoc-if.1 'rassoc-if
  - [ ] (def-type-prop-test rassoc-if.2 'rassoc-if
  - [ ] (def-type-prop-test rassoc-if-not.1 'rassoc-if-not
  - [ ] (def-type-prop-test rassoc-if-not.2 'rassoc-if-not
  - [ ] (def-type-prop-test get-properties.1 'get-properties
  - [ ] (def-type-prop-test get-properties.2 'get-properties
  - [ ] (def-type-prop-test getf.1 'getf
  - [ ] (def-type-prop-test getf.2 'getf
  - [ ] (def-type-prop-test getf.3 'getf
  - [ ] (def-type-prop-test intersection.1 'intersection '(list list) 2 :test #'same-set-p)
  - [ ] (def-type-prop-test intersection.2 'intersection '(list list (eql :key) (eql identity))  4 :test #'same-set-p)
  - [ ] (def-type-prop-test intersection.3 'intersection
  - [ ] (def-type-prop-test intersection.4 'intersection
  - [ ] (def-type-prop-test intersection.5 'intersection
  - [ ] (def-type-prop-test nintersection.1 'nintersection '(list list) 2 :test #'same-set-p :replicate '(t t))
  - [ ] (def-type-prop-test nintersection.2 'nintersection '(list list (eql :key) (eql identity))  4 :test #'same-set-p :replicate '(t t nil nil))
  - [ ] (def-type-prop-test nintersection.3 'nintersection
  - [ ] (def-type-prop-test nintersection.4 'nintersection
  - [ ] (def-type-prop-test nintersection.5 'nintersection
  - [ ] (def-type-prop-test adjoin.1 'adjoin '(t list) 2)
  - [ ] (def-type-prop-test adjoin.2 'adjoin '((integer 0 1) list) 2)
  - [ ] (def-type-prop-test adjoin.3 'adjoin `((integer 0 10) (cons number (cons number (cons number null)))
  - [ ] (def-type-prop-test adjoin.4 'adjoin `(number
  - [ ] (def-type-prop-test adjoin.5 'adjoin `(number
  - [ ] (def-type-prop-test pushnew.1 '(lambda (x y) (list (pushnew x y) y)) '(t list) 2)
  - [ ] (def-type-prop-test pushnew.2 '(lambda (x y) (list (pushnew x y) y)) '((integer 0 1) list) 2)
  - [ ] (def-type-prop-test pushnew.3 '(lambda (x y) (list (pushnew x y :test #'=) y))
  - [ ] (def-type-prop-test pushnew.4 '(lambda (x y) (list (pushnew x y :test-not #'/=) y))
  - [ ] (def-type-prop-test pushnew.5 '(lambda (x y) (list (pushnew x y :key #'1+) y))
  - [ ] (def-type-prop-test set-difference.1 'set-difference '(list list) 2)
  - [ ] (def-type-prop-test set-difference.2 'set-difference '((cons (unsigned-byte 3) (cons (unsigned-byte 3) (cons (unsigned-byte 3) null)))
  - [ ] (def-type-prop-test set-difference.3 'set-difference `((cons (unsigned-byte 3) (cons (unsigned-byte 3) (cons (unsigned-byte 3) null)))
  - [ ] (def-type-prop-test set-difference.4 'set-difference `((cons (unsigned-byte 3) (cons (unsigned-byte 3) (cons (unsigned-byte 3) null)))
  - [ ] (def-type-prop-test set-difference.5 'set-difference `((cons (unsigned-byte 3) (cons (unsigned-byte 3) null))
  - [ ] (def-type-prop-test nset-difference.1 'nset-difference '(list list) 2 :replicate '(t t))
  - [ ] (def-type-prop-test nset-difference.2 'nset-difference '((cons (unsigned-byte 3) (cons (unsigned-byte 3) (cons (unsigned-byte 3) null)))
  - [ ] (def-type-prop-test nset-difference.3 'nset-difference `((cons (unsigned-byte 3) (cons (unsigned-byte 3) (cons (unsigned-byte 3) null)))
  - [ ] (def-type-prop-test nset-difference.4 'nset-difference `((cons (unsigned-byte 3) (cons (unsigned-byte 3) (cons (unsigned-byte 3) null)))
  - [ ] (def-type-prop-test nset-difference.5 'nset-difference `((cons (unsigned-byte 3) (cons (unsigned-byte 3) null))
  - [ ] (def-type-prop-test set-exclusive-or.1 'set-exclusive-or '(list list) 2)
  - [ ] (def-type-prop-test set-exclusive-or.2 'set-exclusive-or '((cons (unsigned-byte 3) (cons (unsigned-byte 3) (cons (unsigned-byte 3) null)))
  - [ ] (def-type-prop-test set-exclusive-or.3 'set-exclusive-or `((cons (unsigned-byte 3) (cons (unsigned-byte 3) (cons (unsigned-byte 3) null)))
  - [ ] (def-type-prop-test set-exclusive-or.4 'set-exclusive-or `((cons (unsigned-byte 3) (cons (unsigned-byte 3) (cons (unsigned-byte 3) null)))
  - [ ] (def-type-prop-test set-exclusive-or.5 'set-exclusive-or `((cons (unsigned-byte 3) (cons (unsigned-byte 3) null))
  - [ ] (def-type-prop-test nset-exclusive-or.1 'nset-exclusive-or '(list list) 2 :replicate '(t t))
  - [ ] (def-type-prop-test nset-exclusive-or.2 'nset-exclusive-or '((cons (unsigned-byte 3) (cons (unsigned-byte 3) (cons (unsigned-byte 3) null)))
  - [ ] (def-type-prop-test nset-exclusive-or.3 'nset-exclusive-or `((cons (unsigned-byte 3) (cons (unsigned-byte 3) (cons (unsigned-byte 3) null)))
  - [ ] (def-type-prop-test nset-exclusive-or.4 'nset-exclusive-or `((cons (unsigned-byte 3) (cons (unsigned-byte 3) (cons (unsigned-byte 3) null)))
  - [ ] (def-type-prop-test nset-exclusive-or.5 'nset-exclusive-or `((cons (unsigned-byte 3) (cons (unsigned-byte 3) null))
  - [ ] (def-type-prop-test subsetp.1 'subsetp '(list list) 2)
  - [ ] (def-type-prop-test subsetp.2 'subsetp '((cons integer null)
**** random-type-prop-tests-06.lsp [0%]
  - [ ] (def-type-prop-test adjustable-array-p 'adjustable-array-p '(array) 1)
  - [ ] (def-type-prop-test aref.0 'aref '((array * nil)) 1)
  - [ ] (def-type-prop-test aref.1 'aref (list '(array * (*)) (index-type-for-dim 0)) 2)
  - [ ] (def-type-prop-test aref.2 'aref (list '(array * (* *)) (index-type-for-dim 0) (index-type-for-dim 1)) 3)
  - [ ] (def-type-prop-test aref.3 'aref (list '(array * (* * *))
  - [ ] (def-type-prop-test array-dimension 'array-dimension
  - [ ] (def-type-prop-test array-dimensions 'array-dimensions '(array) 1)
  - [ ] (def-type-prop-test array-element-type 'array-element-type '(array) 1)
  - [ ] (def-type-prop-test array-has-fill-pointer-p.1 'array-has-fill-pointer-p '(array) 1)
  - [ ] (def-type-prop-test array-has-fill-pointer-p.2 'array-has-fill-pointer-p '(vector) 1)
  - [ ] (def-type-prop-test array-displacement.1 'array-displacement '(array) 1)
  - [ ] (def-type-prop-test array-displacement.2 'array-displacement '(vector) 1)
  - [ ] (def-type-prop-test array-in-bounds-p.0 'array-in-bounds-p '((array * nil)) 1)
  - [ ] (def-type-prop-test array-in-bounds-p.1 'array-in-bounds-p (list '(array * (*)) (index-type-for-dim 0)) 2)
  - [ ] (def-type-prop-test array-in-bounds-p.2 'array-in-bounds-p
  - [ ] (def-type-prop-test array-in-bounds-p.3 'array-in-bounds-p
  - [ ] (def-type-prop-test array-in-bounds-p.4 'array-in-bounds-p '((array * (*)) integer) 2)
  - [ ] (def-type-prop-test array-in-bounds-p.5 'array-in-bounds-p '((array * (* *)) integer integer) 3)
  - [ ] (def-type-prop-test array-in-bounds-p.6 'array-in-bounds-p '((array * (* * *)) integer integer integer) 4)
  - [ ] (def-type-prop-test array-rank 'array-rank '(array) 1)
  - [ ] (def-type-prop-test array-row-major-index.0 'array-row-major-index '((array * nil)) 1)
  - [ ] (def-type-prop-test array-row-major-index.1 'array-row-major-index (list '(array * (*)) (index-type-for-dim 0)) 2)
  - [ ] (def-type-prop-test array-row-major-index.2 'array-row-major-index
  - [ ] (def-type-prop-test array-row-major-index.3 'array-row-major-index
  - [ ] (def-type-prop-test array-total-size 'array-total-size '(array) 1)
  - [ ] (def-type-prop-test arrayp 'arrayp '(t) 1)
  - [ ] (def-type-prop-test fill-pointer '(lambda (x) (and (array-has-fill-pointer-p x) (fill-pointer x))) '(vector) 1)
  - [ ] (def-type-prop-test row-major-aref 'row-major-aref
  - [ ] (def-type-prop-test upgraded-array-element-type 'upgraded-array-element-type
  - [ ] (def-type-prop-test simple-vector-p.1 'simple-vector-p '(t) 1)
  - [ ] (def-type-prop-test simple-vector-p.2 'simple-vector-p '(vector) 1)
  - [ ] (def-type-prop-test svref 'svref (list 'simple-vector (index-type-for-dim 0)) 2)
  - [ ] (def-type-prop-test vector 'vector nil 1 :rest-type t :maxargs 10)
  - [ ] (def-type-prop-test vectorp.1 'vectorp '(t) 1)
  - [ ] (def-type-prop-test vectorp.2 'vectorp '(array) 1)
  - [ ] (def-type-prop-test bit.1 'bit (list '(array bit (*)) (index-type-for-dim 0)) 2)
  - [ ] (def-type-prop-test bit.2 'bit (list '(array bit (* *)) (index-type-for-dim 0) (index-type-for-dim 1)) 3)
  - [ ] (def-type-prop-test bit.3 'bit
  - [ ] (def-type-prop-test sbit.1 'sbit (list '(simple-array bit (*)) (index-type-for-dim 0)) 2)
  - [ ] (def-type-prop-test sbit.2 'sbit (list '(simple-array bit (* *)) (index-type-for-dim 0) (index-type-for-dim 1)) 3)
  - [ ] (def-type-prop-test sbit.3 'sbit
  - [ ] (def-type-prop-test bit-and.1 'bit-and (list '(array bit) #'(lambda (a) (let ((dims (array-dimensions a)))
  - [ ] (def-type-prop-test bit-and.2 'bit-and
  - [ ] (def-type-prop-test bit-andc1.1 'bit-andc1 (list '(array bit) #'(lambda (a) (let ((dims (array-dimensions a)))
  - [ ] (def-type-prop-test bit-andc1.2 'bit-andc1
  - [ ] (def-type-prop-test bit-andc2.1 'bit-andc2 (list '(array bit) #'(lambda (a) (let ((dims (array-dimensions a)))
  - [ ] (def-type-prop-test bit-andc2.2 'bit-andc2
  - [ ] (def-type-prop-test bit-ior.1 'bit-ior (list '(array bit) #'(lambda (a) (let ((dims (array-dimensions a)))
  - [ ] (def-type-prop-test bit-ior.2 'bit-ior
  - [ ] (def-type-prop-test bit-orc1.1 'bit-orc1 (list '(array bit) #'(lambda (a) (let ((dims (array-dimensions a)))
  - [ ] (def-type-prop-test bit-orc1.2 'bit-orc1
  - [ ] (def-type-prop-test bit-orc2.1 'bit-orc2 (list '(array bit) #'(lambda (a) (let ((dims (array-dimensions a)))
  - [ ] (def-type-prop-test bit-orc2.2 'bit-orc2
  - [ ] (def-type-prop-test bit-eqv.1 'bit-eqv (list '(array bit) #'(lambda (a) (let ((dims (array-dimensions a)))
  - [ ] (def-type-prop-test bit-eqv.2 'bit-eqv
  - [ ] (def-type-prop-test bit-xor.1 'bit-xor (list '(array bit) #'(lambda (a) (let ((dims (array-dimensions a)))
  - [ ] (def-type-prop-test bit-xor.2 'bit-xor
  - [ ] (def-type-prop-test bit-nand.1 'bit-nand (list '(array bit) #'(lambda (a) (let ((dims (array-dimensions a)))
  - [ ] (def-type-prop-test bit-nand.2 'bit-nand
  - [ ] (def-type-prop-test bit-nor.1 'bit-nor (list '(array bit) #'(lambda (a) (let ((dims (array-dimensions a)))
  - [ ] (def-type-prop-test bit-nor.2 'bit-nor
  - [ ] (def-type-prop-test bit-not.1 'bit-not '((array bit)) 1)
  - [ ] (def-type-prop-test bit-not.2 'bit-not '((array bit) null) 2)
  - [ ] (def-type-prop-test bit-vector-p 'bit-vector-p '(t) 1)
  - [ ] (def-type-prop-test simple-bit-vector-p 'simple-bit-vector-p '(t) 1)
**** random-type-prop.lsp [0%]
**** random-type-prop-tests.lsp [0%]
**** random-type-prop-tests-08.lsp [0%]
  - [ ] (def-type-prop-test copy-seq 'copy-seq '((or vector list)) 1)
  - [ ] (def-type-prop-test elt 'elt (list '(or vector list)
  - [ ] (def-type-prop-test fill.1 'rfill
  - [ ] (def-type-prop-test fill.2 'rfill
  - [ ] (def-type-prop-test fill.3 'rfill
  - [ ] (def-type-prop-test fill.4 'rfill
  - [ ] (def-type-prop-test fill.5 'rfill
  - [ ] (def-type-prop-test fill.6 'rfill
  - [ ] (def-type-prop-test subseq.1 'subseq
  - [ ] (def-type-prop-test subseq.2 'subseq
  - [ ] (def-type-prop-test map.1 'map
  - [ ] (def-type-prop-test map.2 'map
  - [ ] (def-type-prop-test map.3 'map
  - [ ] (def-type-prop-test map.4 'map
  - [ ] (def-type-prop-test map.5 'map
  - [ ] (def-type-prop-test map-into.1 'map-into
  - [ ] (def-type-prop-test map-into.2 'map-into
  - [ ] (def-type-prop-test count.1 'count '(t sequence) 2)
  - [ ] (def-type-prop-test count.2 'count
  - [ ] (def-type-prop-test count.3 'count
  - [ ] (def-type-prop-test count.4 'count
  - [ ] (def-type-prop-test count.5 'count
  - [ ] (def-type-prop-test count.6 'count
  - [ ] (def-type-prop-test count.7 'count '(bit (vector bit)) 2)
  - [ ] (def-type-prop-test count.8 'count '((unsigned-byte 2) (vector (unsigned-byte 2))) 2)
  - [ ] (def-type-prop-test count.9 'count '((unsigned-byte 4) (vector (unsigned-byte 4))) 2)
  - [ ] (def-type-prop-test count.10 'count '((unsigned-byte 8) (vector (unsigned-byte 8))) 2)
  - [ ] (def-type-prop-test count-if.1 'count-if
  - [ ] (def-type-prop-test count-if.2 'count-if
  - [ ] (def-type-prop-test length.1 'length '(sequence) 1)
  - [ ] (def-type-prop-test reverse.1 'reverse '(sequence) 1)
  - [ ] (def-type-prop-test nreverse.1 'nreverse '(sequence) 1 :replicate '(t))
  - [ ] (def-type-prop-test sort.1 'sort
  - [ ] (def-type-prop-test sort.2 'sort
  - [ ] (def-type-prop-test sort.3 'sort
  - [ ] (def-type-prop-test sort.4 'sort
  - [ ] (def-type-prop-test sort.5 'sort
  - [ ] (def-type-prop-test sort.6 'sort
  - [ ] (def-type-prop-test sort.7 'sort
  - [ ] (def-type-prop-test sort.8 'sort
  - [ ] (def-type-prop-test stable-sort.1 'stable-sort
  - [ ] (def-type-prop-test stable-sort.2 'stable-sort
  - [ ] (def-type-prop-test stable-sort.3 'stable-sort
  - [ ] (def-type-prop-test stable-sort.4 'stable-sort
  - [ ] (def-type-prop-test stable-sort.5 'stable-sort
  - [ ] (def-type-prop-test stable-sort.6 'stable-sort
  - [ ] (def-type-prop-test stable-sort.7 'stable-sort
  - [ ] (def-type-prop-test stable-sort.8 'stable-sort
  - [ ] (def-type-prop-test stable-sort.9 'stable-sort
**** random-type-prop-tests-02.lsp [0%]
  - [ ] (def-type-prop-test =.1 '= '(number number) 2)
  - [ ] (def-type-prop-test =.2 '= '(number number number) 3)
  - [ ] (def-type-prop-test =.3 '= nil 4 :maxargs 10 :rest-type 'number)
  - [ ] (def-type-prop-test =.4 '= '(integer integer) 2)
  - [ ] (def-type-prop-test =.5 '= (list 'number #'(lambda (x) (if (coin) 'number
  - [ ] (def-type-prop-test =.6 '= (list 'number 'number
  - [ ] (def-type-prop-test /=.1 '/= '(number number) 2)
  - [ ] (def-type-prop-test /=.2 '/= '(number number number) 3)
  - [ ] (def-type-prop-test /=.3 '/= nil 4 :maxargs 10 :rest-type 'number)
  - [ ] (def-type-prop-test /=.4 '/= '(integer integer) 2)
  - [ ] (def-type-prop-test /=.5 '/= (list 'number #'(lambda (x) (if (coin) 'number
  - [ ] (def-type-prop-test /=.6 '/= (list 'number 'number
  - [ ] (def-type-prop-test <.1 '< '(real real) 2)
  - [ ] (def-type-prop-test <.2 '< '(real real real) 3)
  - [ ] (def-type-prop-test <.3 '< nil 4 :maxargs 10 :rest-type 'real)
  - [ ] (def-type-prop-test <.4 '< '(integer integer) 2)
  - [ ] (def-type-prop-test <.5 '< (list 'real #'(lambda (x) (if (coin) 'real
  - [ ] (def-type-prop-test <.6 '< (list 'real 'real
  - [ ] (def-type-prop-test >.1 '> '(real real) 2)
  - [ ] (def-type-prop-test >.2 '> '(real real real) 3)
  - [ ] (def-type-prop-test >.3 '> nil 4 :maxargs 10 :rest-type 'real)
  - [ ] (def-type-prop-test >.4 '> '(integer integer) 2)
  - [ ] (def-type-prop-test >.5 '> (list 'real #'(lambda (x) (if (coin) 'real
  - [ ] (def-type-prop-test >.6 '> (list 'real 'real
  - [ ] (def-type-prop-test <=.1 '<= '(real real) 2)
  - [ ] (def-type-prop-test <=.2 '<= '(real real real) 3)
  - [ ] (def-type-prop-test <=.3 '<= nil 4 :maxargs 10 :rest-type 'real)
  - [ ] (def-type-prop-test <=.4 '<= '(integer integer) 2)
  - [ ] (def-type-prop-test <=.5 '<= (list 'real #'(lambda (x) (if (coin) 'real
  - [ ] (def-type-prop-test <=.6 '<= (list 'real 'real
  - [ ] (def-type-prop-test >=.1 '>= '(real real) 2)
  - [ ] (def-type-prop-test >=.2 '>= '(real real real) 3)
  - [ ] (def-type-prop-test >=.3 '>= nil 4 :maxargs 10 :rest-type 'real)
  - [ ] (def-type-prop-test >=.4 '>= '(integer integer) 2)
  - [ ] (def-type-prop-test >=.5 '>= (list 'real #'(lambda (x) (if (coin) 'real
  - [ ] (def-type-prop-test >=.6 '>= (list 'real 'real
  - [ ] (def-type-prop-test min.1 'min nil 2 :maxargs 6 :rest-type 'integer)
  - [ ] (def-type-prop-test min.2 'min nil 2 :maxargs 6 :rest-type 'rational)
  - [ ] (def-type-prop-test min.3 'min nil 2 :maxargs 6 :rest-type 'real)
  - [ ] (def-type-prop-test max.1 'max nil 2 :maxargs 6 :rest-type 'integer)
  - [ ] (def-type-prop-test max.2 'max nil 2 :maxargs 6 :rest-type 'rational)
  - [ ] (def-type-prop-test max.3 'max nil 2 :maxargs 6 :rest-type 'real)
  - [ ] (def-type-prop-test minusp 'minusp '(real) 1)
  - [ ] (def-type-prop-test plusp 'plusp '(real) 1)
  - [ ] (def-type-prop-test zerop 'zerop '(number) 1)
  - [ ] (def-type-prop-test floor.1 'floor '(real) 1)
  - [ ] (def-type-prop-test floor.2 'floor '(real (and integer (not (satisfies zerop)))) 2)
  - [ ] (def-type-prop-test floor.3 'floor '(real (and real (not (satisfies zerop)))) 2)
  - [ ] (def-type-prop-test ffloor.1 'ffloor '(real) 1)
  - [ ] (def-type-prop-test ffloor.2 'ffloor '(real (and integer (not (satisfies zerop)))) 2)
  - [ ] (def-type-prop-test ffloor.3 'ffloor '(real (and real (not (satisfies zerop)))) 2)
  - [ ] (def-type-prop-test ceiling.1 'ceiling '(real) 1)
  - [ ] (def-type-prop-test ceiling.2 'ceiling '(real (and integer (not (satisfies zerop)))) 2)
  - [ ] (def-type-prop-test ceiling.3 'ceiling '(real (and real (not (satisfies zerop)))) 2)
  - [ ] (def-type-prop-test fceiling.1 'fceiling '(real) 1)
  - [ ] (def-type-prop-test fceiling.2 'fceiling '(real (and integer (not (satisfies zerop)))) 2)
  - [ ] (def-type-prop-test fceiling.3 'fceiling '(real (and real (not (satisfies zerop)))) 2)
  - [ ] (def-type-prop-test truncate.1 'truncate '(real) 1)
  - [ ] (def-type-prop-test truncate.2 'truncate '(real (and integer (not (satisfies zerop)))) 2)
  - [ ] (def-type-prop-test truncate.3 'truncate '(real (and real (not (satisfies zerop)))) 2)
  - [ ] (def-type-prop-test ftruncate.1 'ftruncate '(real) 1)
  - [ ] (def-type-prop-test ftruncate.2 'ftruncate '(real (and integer (not (satisfies zerop)))) 2)
  - [ ] (def-type-prop-test ftruncate.3 'ftruncate '(real (and real (not (satisfies zerop)))) 2)
  - [ ] (def-type-prop-test round.1 'round '(real) 1)
  - [ ] (def-type-prop-test round.2 'round '(real (and integer (not (satisfies zerop)))) 2)
  - [ ] (def-type-prop-test round.3 'round '(real (and real (not (satisfies zerop)))) 2)
  - [ ] (def-type-prop-test fround.1 'fround '(real) 1)
  - [ ] (def-type-prop-test fround.2 'fround '(real (and integer (not (satisfies zerop)))) 2)
  - [ ] (def-type-prop-test fround.3 'fround '(real (and real (not (satisfies zerop)))) 2)
**** random-intern.lsp [0%]
*** beyond-ansi [0%]
**** errors-eval-compile.lsp [5%]
  - [ ] (deftest compile.1
  - [ ] (deftest compile.2
  - [ ] (deftest compile.3
  - [ ] (deftest compile.4
  - [ ] (deftest compile.5
  - [ ] (def-all-error-test eval-when.1 'listp '(eval-when x nil))
  - [ ] (def-error-test load-time-value.1 (load-time-value))
  - [ ] (def-error-test load-time-value.2 (load-time-value nil nil nil))
  - [ ] (def-error-test quote.1 (quote))
  - [ ] (def-error-test quote.2 (quote . x))
  - [ ] (def-error-test quote.3 (quote t . x))
  - [ ] (def-error-test quote.4 (quote t x))
  - [ ] (def-all-error-test compiler-macro-function.1
  - [ ] (def-all-error-test compiler-macro-function.2
  - [ ] (def-error-test define-compiler-macro.1 (define-compiler-macro))
  - [ ] (deftest define-compiler-macro.2
  - [ ] (def-error-test define-compiler-macro.3 (define-compiler-macro . foo))
  - [ ] (deftest define-compiler-macro.4
  - [ ] (def-error-test defmacro.1 (defmacro))
  - [X] (deftest defmacro.2
  - [ ] (def-error-test defmacro.3 (defmacro . foo))
  - [ ] (deftest defmacro.4
  - [ ] (def-all-error-test macro-funtion.1 'symbolp '(macro-function x))
  - [ ] (def-all-error-test macro-funtion.2
  - [ ] (deftest define-symbol-macro.1
  - [ ] (deftest define-symbol-macro.2
  - [ ] (def-all-error-test define-symbol-macro.3 'symbolp '(define-symbol-macro x))
  - [ ] (def-all-error-test ignore.1
  - [ ] (def-error-test ignore.2 (locally (declare (ignore . foo)) nil))
  - [ ] (def-all-error-test ignorable.1
  - [ ] (def-error-test ignorable.2 (locally (declare (ignorable . foo)) nil))
  - [ ] (def-all-error-test dynamic-extent.1
  - [ ] (def-error-test dynamic-extent.2
  - [X] (deftest type.1
  - [X] (deftest type.2
  - [ ] (deftest type.2c
  - [ ] (deftest type.3
  - [ ] (deftest type.3c
  - [ ] (deftest type.4
  - [ ] (deftest type.5
  - [X] (deftest type.6
  - [ ] (deftest type.7
  - [ ] (deftest type.8
  - [ ] (def-all-error-test inline.1
  - [ ] (def-error-test inline.2 (locally (declare (inline . x)) nil))
  - [ ] (def-all-error-test notinline.1
  - [ ] (def-error-test notinline.2 (locally (declare (notinline . x)) nil))
  - [ ] (def-error-test ftype.1
  - [ ] (def-error-test ftype.2
  - [ ] (def-error-test ftype.3 (locally (declare (ftype)) nil))
  - [ ] (def-error-test ftype.4 (locally (declare (ftype symbol)) nil))
  - [ ] (def-error-test ftype.5 (locally (declare (ftype (function () t) . foo)) nil))
  - [ ] (def-all-error-test ftype.6
  - [ ] (def-error-test declaration.1 (proclaim '(declaration . foo)))
  - [ ] (def-all-error-test declaration.2 'symbolp '(proclaim (declaration x)))
  - [ ] (def-error-test optimize.1 (locally (declare (optimize .foo)) nil))
  - [ ] (def-all-error-test optimize.2
  - [ ] (def-all-error-test optimize.3
  - [ ] (def-error-test special.1 (locally (declare (special . x)) nil))
  - [ ] (def-all-error-test special.2 'symbolp '(locally (declare (special x)) nil))
  - [ ] (def-error-test locally.1 (locally . x))
  - [ ] (def-error-test the.1 (the))
  - [ ] (def-error-test the.2 (the t))
  - [ ] (def-error-test the.3 (the t :a :b))
  - [ ] (def-error-test the.4 (setf (the) nil))
  - [ ] (def-error-test the.5 (setf (the t) nil))
  - [ ] (def-error-test the.6 (let (x y) (setf (the t x y) nil)))
**** load-ba.lsp [0%]
**** errors-types-and-class.lsp [0%]
  - [ ] (def-all-error-test coerce.1 'listp '(coerce t x))
  - [ ] (def-error-test deftype.1 (deftype))
  - [ ] (def-error-test deftype.2 (deftype #.(gensym)))
  - [ ] (def-error-test deftype.3 (deftype . foo))
  - [ ] (def-all-error-test deftype.4 'symbolp '(deftype x () t))
  - [ ] (def-all-error-test subtypep.1 'type-specifier-p '(subtypep x t))
  - [ ] (def-all-error-test subtypep.2 'type-specifier-p '(subtypep nil x))
  - [ ] (def-all-error-test typep.1 'type-specifier-p '(typep nil x))
  - [ ] (def-error-test satisfies.1 (typep nil '(satifies)))
  - [ ] (def-error-test satisfies.2 (typep nil '(satifies null nil)))
  - [ ] (def-all-error-test satisfies.3 'symbolp '(typep nil (satisfies x)))
  - [ ] (def-error-test member.type.1 (typep nil 'member))
  - [ ] (def-error-test member.type.2 (typep nil '(member . foo)))
  - [ ] (def-error-test member.type.3 (typep nil '(member bar . foo)))
  - [ ] (def-error-test not.type.1 (typep nil 'not))
  - [ ] (def-error-test not.type.2 (typep nil '(not)))
  - [ ] (def-error-test not.type.3 (typep nil '(not *)))
  - [ ] (def-error-test not.type.4 (typep nil '(not nil nil)))
  - [ ] (def-all-error-test not.type.5 'type-specifier-p '(typep nil '(not x)))
  - [ ] (def-error-test not.type.6 (typep nil '(not . foo)))
  - [ ] (def-error-test and.type.1 (typep nil 'and))
  - [ ] (def-error-test and.type.2 (typep nil '(and *)))
  - [ ] (def-error-test and.type.3 (typep nil '(and t * t)))
  - [ ] (def-error-test and.type.4 (typep nil '(and . foo)))
  - [ ] (def-all-error-test and.type.5 'type-specifier-p '(typep t '(and t t x t)))
  - [ ] (def-error-test or.type.1 (typep nil 'or))
  - [ ] (def-error-test or.type.2 (typep nil '(or *)))
  - [ ] (def-error-test or.type.3 (typep nil '(or nil * nil)))
  - [ ] (def-error-test or.type.4 (typep nil '(or . foo)))
  - [ ] (def-all-error-test or.type.5 'type-specifier-p '(typep t '(or nil x nil)))
  - [ ] (def-error-test values.type.1 (typep nil 'values))
  - [ ] (def-error-test values.type.2 (the values (values)))
  - [ ] (def-error-test values.type.3 (the (values . foo) (values)))
  - [ ] (def-error-test values.type.4 (the (values *) t))
  - [ ] (def-all-error-test values.type.5 'type-specifier-p '(the (values x) t))
  - [ ] (def-error-test eql.type.1 (typep nil 'eql))
  - [ ] (def-error-test eql.type.2 (typep nil '(eql)))
  - [ ] (def-error-test eql.type.3 (typep nil '(eql nil nil)))
  - [ ] (def-error-test eql.type.4 (typep nil '(eql . foo)))
  - [ ] (def-all-error-test type-error-datum.1
  - [ ] (def-all-error-test type-error-expected-type.1
  - [ ] (def-error-test function.type.1
  - [ ] (def-error-test function.type.2
  - [ ] (def-error-test function.type.3
  - [ ] (def-error-test function.type.4
  - [ ] (def-error-test function.type.5
  - [ ] (def-error-test function.type.6
  - [ ] (def-error-test function.type.7
  - [ ] (def-error-test function.type.8
  - [ ] (def-error-test function.type.9
  - [ ] (def-error-test function.type.10
**** errors-data-and-control-flow-3.lsp [0%]
  - [ ] (def-error-test case.1 (case . 1))
  - [ ] (def-error-test case.2 (case nil . 1))
  - [ ] (def-error-test case.3 (case nil (nil . 1)))
  - [ ] (def-error-test case.4 (case 'x nil))
  - [ ] (def-error-test case.5 (case 'x ((nil . x) 1)))
  - [ ] (def-error-test case.6 (case))
  - [ ] (def-error-test ccase.1 (ccase . 1))
  - [ ] (def-error-test ccase.2 (let ((x nil)) (ccase x . 1)))
  - [ ] (def-error-test ccase.3 (let ((x nil)) (ccase x (nil . 1))))
  - [ ] (def-error-test ccase.4 (let ((x 'x)) (ccase x nil)))
  - [ ] (def-error-test ccase.5 (let ((x 'x)) (ccase x ((nil . x) 1))))
  - [ ] (def-error-test ccase.6 (ccase 1 (1 nil))) ;; 1 is not a place!
  - [ ] (def-error-test ccase.7 (ccase))
  - [ ] (def-error-test ecase.1 (ecase . 1))
  - [ ] (def-error-test ecase.2 (ecase nil . 1))
  - [ ] (def-error-test ecase.3 (ecase nil (nil . 1)))
  - [ ] (def-error-test ecase.4 (ecase 'x nil))
  - [ ] (def-error-test ecase.5 (ecase 'x ((nil . x) 1)))
  - [ ] (def-error-test ecase.6 (ecase))
  - [ ] (def-error-test typecase.1 (typecase))
  - [ ] (def-error-test typecase.2 (typecase . :foo))
  - [ ] (def-error-test typecase.3 (typecase 'x . #\X))
  - [ ] (def-error-test typecase.4 (typecase 'x (#.(gensym) t)))
  - [ ] (def-error-test typecase.5 (typecase 'x (symbol . :foo)))
  - [ ] (def-error-test typecase.6 (typecase 'x . :foo))
  - [ ] (def-error-test typecase.7 (typepcase 'x (t . :foo)))
  - [ ] (def-error-test typecase.8 (typepcase 'x (otherwise . :foo)))
  - [ ] (def-error-test ctypecase.1 (ctypecase))
  - [ ] (def-error-test ctypecase.2 (ctypecase . :foo))
  - [ ] (def-error-test ctypecase.3 (let ((x 'x)) (ctypecase x . #\X)))
  - [ ] (def-error-test ctypecase.4 (let ((x 'x)) (ctypecase x (#.(gensym) t))))
  - [ ] (def-error-test ctypecase.5 (let ((x 'x)) (ctypecase x (symbol . :foo))))
  - [ ] (def-error-test ctypecase.6 (let ((x 'x)) (ctypecase x . :foo)))
  - [ ] (def-error-test ctypecase.7 (let ((x 'x)) (ctypecase x (t . :foo))))
  - [ ] (def-error-test ctypecase.8 (let ((x 'x)) (ctypecase x (otherwise . :foo))))
  - [ ] (def-error-test ctypecase.9 (ctypecase 1 (integer :bad)))
  - [ ] (def-error-test etypecase.1 (etypecase))
  - [ ] (def-error-test etypecase.2 (etypecase . :foo))
  - [ ] (def-error-test etypecase.3 (etypecase 'x . #\X))
  - [ ] (def-error-test etypecase.4 (etypecase 'x (#.(gensym) t)))
  - [ ] (def-error-test etypecase.5 (etypecase 'x (symbol . :foo)))
  - [ ] (def-error-test etypecase.6 (etypecase 'x . :foo))
  - [ ] (def-error-test multiple-value-bind.1 (multiple-value-bind))
  - [ ] (def-error-test multiple-value-bind.2 (multiple-value-bind .
  - [ ] (def-error-test multiple-value-bind.3 (multiple-value-bind (x)))
  - [ ] (def-error-test multiple-value-bind.4 (multiple-value-bind (x . y) 1 x))
  - [ ] (def-error-test multiple-value-bind.5 (multiple-value-bind (x) . :foo))
  - [ ] (def-error-test multiple-value-bind.6 (multiple-value-bind (x) nil . :bar))
  - [ ] (def-error-test multiple-value-bind.7
  - [ ] (def-error-test multiple-value-bind.8
  - [ ] (def-error-test multiple-value-bind.9
  - [ ] (def-error-test multiple-value-bind.10
  - [ ] (def-error-test multiple-value-bind.11
  - [ ] (def-error-test multiple-value-call.1 (multiple-value-call))
  - [ ] (def-error-test multiple-value-call.2 (multiple-value-call . :x))
  - [ ] (def-error-test multiple-value-call.3 (multiple-value-call 'list . :x))
  - [ ] (def-error-test multiple-value-call.4 (multiple-value-call 'list 1 . :x))
  - [ ] (def-all-error-test multiple-value-call.5 'function-designator-p
  - [ ] (def-error-test multiple-value-call.6 (multiple-value-call (gensym)))
  - [ ] (def-error-test multiple-value-list.1 (multiple-value-list))
  - [ ] (def-error-test multiple-value-list.2 (multiple-value-list . 1))
  - [ ] (def-error-test multiple-value-list.3 (multiple-value-list 1 . 2))
  - [ ] (def-error-test multiple-value-list.4 (multiple-value-list 1 2))
  - [ ] (def-error-test multiple-value-prog1.1 (multiple-value-prog1))
  - [ ] (def-error-test multiple-value-prog1.2 (multiple-value-prog1 . 1))
  - [ ] (def-error-test multiple-value-prog1.3 (multiple-value-prog1 :x . :y))
  - [ ] (def-error-test multiple-value-setq.1 (multiple-value-setq))
  - [ ] (def-error-test multiple-value-setq.2 (let (x) (multiple-value-setq (x)) x))
  - [ ] (def-error-test multiple-value-setq.3
  - [ ] (def-all-error-test multiple-value-setq.4 'symbolp
  - [ ] (def-all-error-test multiple-value-setq.5 (constantly nil)
  - [ ] (def-all-error-test values.1 'listp #'(lambda (x) (cons 'values x)))
  - [ ] (def-all-error-test values.2 'listp #'(lambda (x) (list* 'values 1 x)))
  - [ ] (def-error-test nth-value.1 (nth-value))
  - [ ] (def-error-test nth-value.2 (nth-value 0))
  - [ ] (def-error-test nth-value.3 (nth-value 1 '(a b c) 2))
  - [ ] (def-all-error-test nth-value.4 (constantly nil) #'(lambda (x) `(nth-value ',x)))
  - [ ] (def-all-error-test nth-value.5 (constantly nil) #'(lambda (x) `(nth-value . ,x)))
  - [ ] (def-all-error-test nth-value.6 (constantly nil) #'(lambda (x) `(nth-value 0 . ,x)))
  - [ ] (def-all-error-test nth-value.7 'integerp #'(lambda (x) `(nth-value ',x nil)))
  - [ ] (def-error-test nth-value.8 (nth-value -1 'x))
  - [ ] (def-all-error-test nth-value.9 'null #'(lambda (x) `(nth-value 0 'a . ,x)))
  - [ ] (def-error-test prog.1 (prog))
  - [ ] (def-all-error-test prog.2 'listp #'(lambda (x) `(prog . ,x)))
  - [ ] (def-all-error-test prog.3 'listp #'(lambda (x) `(prog ,x)))
  - [ ] (def-all-error-test prog.4 'listp #'(lambda (x) `(prog () . ,x)))
  - [ ] (def-all-error-test prog.5 (typef '(or symbol cons))  #'(lambda (x) `(prog (,x))))
  - [ ] (def-all-error-test prog.6 'listp #'(lambda (x) `(prog (v . ,x))))
  - [ ] (def-all-error-test prog.7 'listp #'(lambda (x) `(prog ((v . ,x)))))
  - [ ] (def-error-test prog.8 (prog ((x nil nil))))
  - [ ] (def-all-error-test prog.9 'null #'(lambda (x) `(prog ((v nil . ,x)))))
  - [ ] (def-error-test prog*.1 (prog*))
  - [ ] (def-all-error-test prog*.2 'listp #'(lambda (x) `(prog* . ,x)))
  - [ ] (def-all-error-test prog*.3 'listp #'(lambda (x) `(prog* ,x)))
  - [ ] (def-all-error-test prog*.4 'listp #'(lambda (x) `(prog* () . ,x)))
  - [ ] (def-all-error-test prog*.5 (typef '(or symbol cons))  #'(lambda (x) `(prog* (,x))))
  - [ ] (def-all-error-test prog*.6 'listp #'(lambda (x) `(prog* (v . ,x))))
  - [ ] (def-all-error-test prog*.7 'listp #'(lambda (x) `(prog* ((v . ,x)))))
  - [ ] (def-error-test prog*.8 (prog* ((x nil nil))))
  - [ ] (def-all-error-test prog*.9 'null #'(lambda (x) `(prog* ((v nil . ,x)))))
  - [ ] (def-error-test prog1.1 (prog1))
  - [ ] (def-all-error-test prog1.2 #'listp #'(lambda (x) `(prog1 . ,x)))
  - [ ] (def-all-error-test prog1.3 #'listp #'(lambda (x) `(prog1 nil . ,x)))
  - [ ] (def-error-test prog2.1 (prog2))
  - [ ] (def-all-error-test prog2.2 #'listp #'(lambda (x) `(prog2 . ,x)))
  - [ ] (def-error-test prog2.3 (prog2 t))
  - [ ] (def-all-error-test prog2.4 #'listp #'(lambda (x) `(prog2 nil . ,x)))
  - [ ] (def-all-error-test prog2.5 #'listp #'(lambda (x) `(prog2 'a 'b . ,x)))
  - [ ] (def-all-error-test prog2.6 #'listp #'(lambda (x) `(prog2 'a 'b nil . ,x)))
  - [ ] (def-all-error-test progn.1 'listp #'(lambda (x) `(progn . ,x)))
  - [ ] (def-all-error-test progn.2 'listp #'(lambda (x) `(progn nil . ,x)))
  - [ ] (def-all-error-test progn.3 'listp #'(lambda (x) `(progn 'a 'b . ,x)))
  - [ ] (def-error-test define-modify-macro.1 (define-modify-macro))
  - [ ] (def-error-test define-modify-macro.2 (define-modify-macro #.(gensym)))
  - [ ] (def-all-error-test define-modify-macro.3 'symbolp #'(lambda (x) `(define-modify-macro ,x ())))
  - [ ] (def-all-error-test define-modify-macro.4 'listp #'(lambda (x) `(define-modify-macro #.(gensym) ,x)))
  - [ ] (def-all-error-test define-modify-macro.5 'listp #'(lambda (x) `(define-modify-macro #.(gensym) () . ,x)))
  - [ ] (def-all-error-test define-modify-macro.6 'symbolp #'(lambda (x) `(define-modify-macro #.(gensym) () ,x)))
  - [ ] (def-all-error-test define-modify-macro.7 'stringp #'(lambda (x) `(define-modify-macro #.(gensym) () #.(gensym) ,x)))
  - [ ] (def-all-error-test define-modify-macro.8 'listp #'(lambda (x) `(define-modify-macro #.(gensym) () #.(gensym) . ,x)))
  - [ ] (def-all-error-test define-modify-macro.9 'listp #'(lambda (x) `(define-modify-macro #.(gensym) () #.(gensym) "foo" . ,x)))
  - [ ] (def-all-error-test define-modify-macro.10 (constantly nil)
  - [ ] (def-error-test defsetf.1 (defsetf))
  - [ ] (def-error-test defsetf.2 (defsetf #.(gensym)))
  - [ ] (def-all-error-test defsetf.3 'listp #'(lambda (x) `(defsetf ,x)))
  - [ ] (def-all-error-test defsetf.4 'listp #'(lambda (x) `(defsetf #.(gensym) . ,x)))
  - [ ] (def-all-error-test defsetf.5 'listp #'(lambda (x) `(defsetf #.(gensym) #.(gensym) . ,x)))
  - [ ] (def-all-error-test defsetf.6 'stringp #'(lambda (x) `(defsetf #.(gensym) #.(gensym) ,x)))
  - [ ] (def-all-error-test defsetf.7 'null #'(lambda (x) `(defsetf #.(gensym) #.(gensym) "foo" . ,x)))
  - [ ] (def-all-error-test defsetf.8 (constantly nil) #'(lambda (x) `(defsetf #.(gensym) #.(gensym) "foo" ,x)))
  - [ ] (def-all-error-test defsetf.9 (typef '(or list symbol)) #'(lambda (x) `(defsetf #.(gensym) ,x)))
  - [ ] (def-all-error-test defsetf.10 'symbolp #'(lambda (x)  `(defsetf #.(gensym) (#1=#.(gensym)) (,x) #1#)))
  - [ ] (def-all-error-test defsetf.11 'listp #'(lambda (x) `(defsetf #.(gensym) (#.(gensym)) ., x)))
  - [ ] (def-all-error-test defsetf.12 'listp #'(lambda (x) `(defsetf #.(gensym) (#.(gensym)) , x)))
  - [ ] (def-all-error-test defsetf.13 'listp #'(lambda (x) `(defsetf #.(gensym) (#.(gensym)) (a . ,x))))
  - [ ] (def-error-test defsetf.14 (defsetf #.(gensym) () () nil (declare (optimize)) nil))
  - [ ] (def-error-test defsetf.15 (defsetf #.(gensym) () () "foo" "bar" (declare (optimize)) nil))
  - [ ] (def-error-test get-setf-expansion.1 (get-setf-expansion))
  - [ ] (def-all-error-test get-setf-expansion.2 'listp #'(lambda (x) `(get-setf-expansion . ,x)))
  - [ ] (def-all-error-test get-setf-expansion.3 (typef '(or list symbol))
  - [ ] (def-all-error-test setf.1 (constantly nil) #'(lambda (x) `(setf ,x)))
  - [ ] (def-all-error-test setf.2 'listp #'(lambda (x) `(setf . ,x)))
  - [ ] (def-all-error-test setf.3 'listp #'(lambda (x) `(setf ,x nil)))
  - [ ] (def-all-error-test setf.4 'listp #'(lambda (x) `(let (a) (setf a . ,x))))
  - [ ] (def-all-error-test psetf.1 (constantly nil) #'(lambda (x) `(psetf ,x)))
  - [ ] (def-all-error-test psetf.2 'listp #'(lambda (x) `(psetf . ,x)))
  - [ ] (def-all-error-test psetf.3 'listp #'(lambda (x) `(psetf ,x nil)))
  - [ ] (def-all-error-test psetf.4 'listp #'(lambda (x) `(let (a) (psetf a . ,x))))
  - [ ] (def-error-test shiftf.1 (shiftf))
  - [ ] (def-all-error-test shiftf.2 'listp #'(lambda (x) `(shiftf . ,x)))
  - [ ] (def-all-error-test shiftf.3 (constantly nil) #'(lambda (x) `(shiftf ,x)))
  - [ ] (def-all-error-test shiftf.4 'listp #'(lambda (x) `(let (a) (shiftf a . ,x))))
  - [ ] (def-all-error-test shiftf.5 'listp #'(lambda (x) `(shiftf ,x nil)))
  - [ ] (def-all-error-test shiftf.6 'listp #'(lambda (x) `(let (a b) (shiftf a b . ,x))))
  - [ ] (def-all-error-test shiftf.7 'listp #'(lambda (x) `(let (a) (shiftf ,x a nil))))
  - [ ] (def-all-error-test shiftf.8 'listp #'(lambda (x) `(let (a) (shiftf a ,x nil))))
  - [ ] (def-all-error-test rotatef.1 'listp #'(lambda (x) `(rotatef . ,x)))
  - [ ] (def-all-error-test rotatef.2 'listp #'(lambda (x) `(rotatef ,x)))
  - [ ] (def-all-error-test rotatef.3 'listp #'(lambda (x) `(let (a) (rotatef a ,x))))
  - [ ] (def-all-error-test rotatef.4 'listp #'(lambda (x) `(let (a) (rotatef a . ,x))))
  - [ ] (def-all-error-test rotatef.5 'listp #'(lambda (x) `(let (a) (rotatef ,x a))))
**** errors-data-and-control-flow-2.lsp [0%]
  - [ ] (def-all-error-test funcall.1 'function-designator-p '(funcall x))
  - [ ] (def-error-test funcall.2 (funcall cons 1 . 2))
  - [ ] (def-error-test function.1 (function))
  - [ ] (def-error-test function.2 (function . cons))
  - [ ] (def-error-test function.3 (function cons . foo))
  - [ ] (def-error-test function.4 (function cons nil))
  - [ ] (def-all-error-test function.5 'function-name-p '(function x))
  - [ ] (def-all-error-test function.6
  - [ ] (def-all-error-test function.7
  - [ ] (def-error-test function.8 (macrolet ((%m () nil)) #'%m))
  - [ ] (def-all-error-test function-lambda-expression.1
  - [ ] (def-error-test defconstant.1 (defconstant))
  - [ ] (def-error-test defconstant.2 (defconstant . foo))
  - [ ] (def-error-test defconstant.3 (defconstant #.(gensym)))
  - [ ] (def-error-test defconstant.4 (defconstant #.(gensym) . foo))
  - [ ] (def-error-test defconstant.5 (defconstant #.(gensym) nil . foo))
  - [ ] (def-error-test defconstant.6 (defconstant #.(gensym) nil "foo" . bar))
  - [ ] (def-all-error-test defconstant.7 'symbolp
  - [ ] (def-all-error-test defconstant.8 'stringp
  - [ ] (def-error-test defparameter.1 (defparameter))
  - [ ] (def-error-test defparameter.2 (defparameter . foo))
  - [ ] (def-error-test defparameter.3 (defparameter #.(gensym)))
  - [ ] (def-error-test defparameter.4 (defparameter #.(gensym) . foo))
  - [ ] (def-error-test defparameter.5 (defparameter #.(gensym) nil . foo))
  - [ ] (def-error-test defparameter.6 (defparameter #.(gensym) nil "foo" . bar))
  - [ ] (def-all-error-test defparameter.7 'symbolp
  - [ ] (def-all-error-test defparameter.8 'stringp
  - [ ] (def-error-test defvar.1 (defvar))
  - [ ] (def-error-test defvar.2 (defvar . foo))
  - [ ] (def-error-test defvar.4 (defvar #.(gensym) . foo))
  - [ ] (def-error-test defvar.5 (defvar #.(gensym) nil . foo))
  - [ ] (def-error-test defvar.6 (defvar #.(gensym) nil "foo" . bar))
  - [ ] (def-all-error-test defvar.7 'symbolp
  - [ ] (def-all-error-test defvar.8 'stringp
  - [ ] (def-error-test destructuring-bind.1 (destructuring-bind))
  - [ ] (def-error-test destructuring-bind.2 (destructuring-bind x))
  - [ ] (def-all-error-test destructuring-bind.3
  - [ ] (def-error-test destructuring-bind.4 (destructuring-bind (x) '(a) nil (declare) x))
  - [ ] (def-error-test let.1 (let))
  - [ ] (def-error-test let.2 (let . x))
  - [ ] (def-all-error-test let.3 'listp #'(lambda (x) `(let ,x nil)))
  - [ ] (def-error-test let.4 (let () . x))
  - [ ] (def-error-test let.5 (let (x . 1) nil))
  - [ ] (def-error-test let.6 (let ((x) . y) nil))
  - [ ] (def-error-test let.7 (let ((x 1 . 2)) nil))
  - [ ] (def-error-test let.8 (let ((x 1 2)) nil))
  - [ ] (def-error-test let.9 (let ((x 1) (x 2)) x))
  - [ ] (def-error-test let.10 (let ((t 1)) t))
  - [ ] (def-all-error-test let.11 (typef '(or cons symbol))
  - [ ] (def-all-error-test let.12 'symbolp
  - [ ] (def-error-test let.13 (let ((x 0) (x 1)) x))
  - [ ] (def-error-test let*.1 (let*))
  - [ ] (def-error-test let*.2 (let* . x))
  - [ ] (def-all-error-test let*.3 'listp #'(lambda (x) `(let* ,x nil)))
  - [ ] (def-error-test let*.4 (let* () . x))
  - [ ] (def-error-test let*.5 (let* (x . 1) nil))
  - [ ] (def-error-test let*.6 (let* ((x) . y) nil))
  - [ ] (def-error-test let*.7 (let* ((x 1 . 2)) nil))
  - [ ] (def-error-test let*.8 (let* ((x 1 2)) nil))
  - [ ] (def-error-test let*.10 (let* ((t 1)) t))
  - [ ] (def-all-error-test let*.11 (typef '(or cons symbol))
  - [ ] (def-all-error-test let*.12 'symbolp
  - [ ] (def-error-test progv.1 (progv))
  - [ ] (def-error-test progv.2 (progv '(a)))
  - [ ] (def-all-error-test progv.3 'listp '(progv x nil nil))
  - [ ] (def-all-error-test progv.4 'listp '(progv '(a) x nil))
  - [ ] (def-error-test setq.1 (setq . x))
  - [ ] (def-error-test setq.2 (let ((x t)) (setq x)))
  - [ ] (def-error-test setq.3 (let ((x t)) (setq x . foo)))
  - [ ] (def-error-test setq.4 (let ((x 1)) (setq x nil . foo)))
  - [ ] (def-error-test setq.5 (let ((x 1) (y 2)) (setq x nil y)))
  - [ ] (def-all-error-test setq.6 'symbolp #'(lambda (x) `(setq ,x nil)))
  - [ ] (def-error-test setq.7
  - [ ] (def-error-test psetq.1 (psetq . x))
  - [ ] (def-error-test psetq.2 (let ((x t)) (psetq x)))
  - [ ] (def-error-test psetq.3 (let ((x t)) (psetq x . foo)))
  - [ ] (def-error-test psetq.4 (let ((x 1)) (psetq x nil . foo)))
  - [ ] (def-error-test psetq.5 (let ((x 1) (y 2)) (psetq x nil y)))
  - [ ] (def-all-error-test psetq.6 'symbolp #'(lambda (x) `(psetq ,x nil)))
  - [ ] (def-error-test psetq.7
  - [ ] (def-error-test psetq.8 (let ((x 0)) (psetq x 1 x 2) x))
  - [ ] (def-error-test block.1 (block))
  - [ ] (def-error-test block.2 (block . foo))
  - [ ] (def-all-error-test block.3 'symbolp #'(lambda (x) `(block ,x)))
  - [ ] (def-error-test block.4 (block nil . foo))
  - [ ] (def-error-test catch.1 (catch))
  - [ ] (def-error-test catch.2 (catch . foo))
  - [ ] (def-error-test catch.3 (catch 'tag . foo))
  - [ ] (def-all-error-test catch.4 (constantly nil) '(catch x (throw x nil))
  - [ ] (def-error-test go.1 (go))
  - [ ] (def-error-test go.2 (go . foo))
  - [ ] (def-all-error-test go.3 (typef '(or symbol integer))
  - [ ] (def-error-test go.4 (tagbody (go done . foo) done))
  - [ ] (def-error-test go.5 (tagbody (go done foo) done))
  - [ ] (def-error-test go.6
  - [ ] (def-error-test go.7
  - [ ] (def-error-test return-from.1 (return-from))
  - [ ] (def-error-test return-from.2 (return-from . foo))
  - [ ] (def-error-test return-from.3 (return-from foo))
  - [ ] (def-error-test return-from.4 (block foo (return-from foo . t)))
  - [ ] (def-error-test return-from.5 (block foo (return-from foo nil . 2)))
  - [ ] (def-error-test return-from.6 (block foo (return-from foo nil 3)))
  - [ ] (def-error-test return.1 (return . x))
  - [ ] (def-error-test return.2 (return nil . x))
  - [ ] (def-error-test tagbody.1 (tagbody . x))
  - [ ] (def-all-error-test tagbody.2 (typef '(or symbol integer cons))
  - [ ] (def-error-test throw.1 (throw))
  - [ ] (def-error-test throw.2 (throw . x))
  - [ ] (def-error-test throw.3 (catch 'a (throw 'a)))
  - [ ] (def-error-test throw.4 (catch 'a (throw 'a . x)))
  - [ ] (def-error-test throw.5 (catch 'a (throw 'a 1 . x)))
  - [ ] (def-error-test throw.6 (catch 'a (throw 'a 1 'x)))
  - [ ] (def-error-test unwind-protect.1 (unwind-protect))
  - [ ] (def-error-test unwind-protect.2 (unwind-protect . x))
  - [ ] (def-error-test unwind-protect.3 (unwind-protect nil . x))
  - [ ] (def-error-test not.1 (not . x))
  - [ ] (def-error-test not.2 (not nil . x))
  - [ ] (def-error-test eq.1 (eq . 1))
  - [ ] (def-error-test eq.2 (eq 'x . 2))
  - [ ] (def-error-test eq.3 (eq :foo 2 . 17))
  - [ ] (def-error-test eql.1 (eql . 1))
  - [ ] (def-error-test eql.2 (eql 'x . 2))
  - [ ] (def-error-test eql.3 (eql :foo 2 . 17))
  - [ ] (def-error-test equal.1 (equal . 1))
  - [ ] (def-error-test equal.2 (equal 'x . 2))
  - [ ] (def-error-test equal.3 (equal :foo 2 . 17))
  - [ ] (def-error-test equalp.1 (equalp . 1))
  - [ ] (def-error-test equalp.2 (equalp 'x . 2))
  - [ ] (def-error-test equalp.3 (equalp :foo 2 . 17))
  - [ ] (def-error-test identity.1 (identity . 0))
  - [ ] (def-error-test identity.2 (identity 0 . "foo"))
  - [ ] (def-error-test complement.1 (complement . 1.2))
  - [ ] (def-error-test complement.2 (complement #'plusp . #(1 2)))
  - [ ] (def-error-test complement.3 (complement #'zerop #*110101 . #c(1 2)))
  - [ ] (def-all-error-test complement.4 'functionp '(complement x))
  - [ ] (def-error-test constantly.1 (constantly . 1/2))
  - [ ] (def-error-test constantly.2 (constantly :foo . 1/2))
  - [ ] (def-error-test every.1 (every . :foo))
  - [ ] (def-error-test every.2 (every 'null . (list)))
  - [ ] (def-error-test every.3 (every (gensym) '(a b c d)))
  - [ ] (def-error-test some.1 (some . :foo))
  - [ ] (def-error-test some.2 (some 'null . (list)))
  - [ ] (def-error-test some.3 (some (gensym) '(a b c d)))
  - [ ] (def-error-test notevery.1 (notevery . :foo))
  - [ ] (def-error-test notevery.2 (notevery 'null . (list)))
  - [ ] (def-error-test notevery.3 (notevery (gensym) '(a b c d)))
  - [ ] (def-error-test notany.1 (notany . :foo))
  - [ ] (def-error-test notany.2 (notany 'null . (list)))
  - [ ] (def-error-test notany.3 (notany (gensym) '(a b c d)))
  - [ ] (def-error-test and.1 (and . #.(make-hash-table)))
  - [ ] (def-error-test and.2 (and t . :foo))
  - [ ] (def-error-test cond.1 (cond . 1))
  - [ ] (def-error-test cond.2 (cond (t . 2)))
  - [ ] (def-error-test cond.3 (cond nil))
  - [ ] (def-error-test cond.4 (cond (nil) . "foo"))
  - [ ] (def-error-test if.1 (if))
  - [ ] (def-error-test if.2 (if . t))
  - [ ] (def-error-test if.3 (if t))
  - [ ] (def-error-test if.4 (if nil))
  - [ ] (def-error-test if.5 (if t . 1))
  - [ ] (def-error-test if.6 (if nil . 2))
  - [ ] (def-error-test if.7 (if t 1 . 2))
  - [ ] (def-error-test if.8 (if nil #\x . #\y))
  - [ ] (def-error-test if.9 (if t 1 2 . 3))
  - [ ] (def-error-test if.10 (if nil #\x #\y . 1.23d4))
  - [ ] (def-error-test if.11 (if t 1 2 3))
  - [ ] (def-error-test if.12 (if nil #\x #\y nil nil nil))
  - [ ] (def-error-test or.1 (or . :foo))
  - [ ] (def-error-test or.2 (or nil . :bar))
  - [ ] (def-error-test when.1 (when))
  - [ ] (def-error-test when.2 (when . #\$))
  - [ ] (def-error-test when.3 (when t . x))
  - [ ] (def-error-test when.4 (when t nil . "A"))
  - [ ] (def-error-test unless.1 (unless))
  - [ ] (def-error-test unless.2 (unless . #*1011))
  - [ ] (def-error-test unless.3 (unless nil . t))
  - [ ] (def-error-test unless.4 (unless nil nil . #()))
**** README [0%]
**** ba-aux.lsp [0%]
**** errors-loop.lsp [0%]
  - [ ] (def-all-error-test loop.1 'listp #'(lambda (x) `(loop . ,x)))
  - [ ] (def-all-error-test loop.named.1 'symbolp #'(lambda (x) `(loop named ,x return nil)))
  - [ ] (def-all-error-test loop.named.2 'listp #'(lambda (x) `(loop named . ,x)))
  - [ ] (def-error-test loop.with.1 (loop with))
  - [ ] (def-all-error-test loop.with.2 #'(lambda (x) (or (symbolp x) (listp x)))
  - [ ] (def-all-error-test loop.with.3 'listp #'(lambda (x) `(loop with . ,x)))
  - [ ] (def-all-error-test loop.with.4 'listp #'(lambda (x) `(loop with x . ,x)))
  - [ ] (def-all-error-test loop.with.5 'listp #'(lambda (x) `(loop with x = . ,x)))
  - [ ] (def-all-error-test loop.with.6 'listp #'(lambda (x) `(loop with x t = . ,x)))
  - [ ] (def-error-test loop.initially.1 (loop initially))
  - [ ] (def-all-error-test loop.initially.2 'listp #'(lambda (x) `(loop initially . ,x)))
  - [ ] (def-all-error-test loop.initially.3 'listp #'(lambda (x) `(loop initially (progn) . ,x)))
  - [ ] (def-error-test loop.finally.1 (loop finally))
  - [ ] (def-all-error-test loop.finally.2 'listp #'(lambda (x) `(loop finally . ,x)))
  - [ ] (def-all-error-test loop.finally.3 'listp #'(lambda (x) `(loop finally (progn) . ,x)))
  - [ ] (def-error-test loop.for.1 (loop for))
  - [ ] (def-all-error-test loop.for.2 'listp #'(lambda (x) `(loop for . ,x)))
  - [ ] (def-all-error-test loop.for.3 'symbol-or-list-p #'(lambda (x) `(loop for ,x)))
  - [ ] (def-all-error-test loop.for.4 'symbol-or-list-p #'(lambda (x) `(loop for ,x = nil)))
  - [ ] (def-error-test loop.for.5 (loop for x from))
  - [ ] (def-error-test loop.for.6 (loop for x upfrom))
  - [ ] (def-error-test loop.for.7 (loop for x downfrom))
  - [ ] (def-error-test loop.for.8 (loop for x upto))
  - [ ] (def-error-test loop.for.9 (loop for x to))
  - [ ] (def-error-test loop.for.10 (loop for x below))
  - [ ] (def-all-error-test loop.for.11 (typef '(or symbol list class))
  - [ ] (def-all-error-test loop.for.12 'listp #'(lambda (x) `(loop for x . ,x)))
  - [ ] (def-all-error-test loop.for.13 'listp #'(lambda (x) `(loop for x from . ,x)))
  - [ ] (def-all-error-test loop.for.14 'listp #'(lambda (x) `(loop for x downfrom . ,x)))
  - [ ] (def-all-error-test loop.for.15 'listp #'(lambda (x) `(loop for x upfrom . ,x)))
  - [ ] (def-all-error-test loop.for.16 'listp #'(lambda (x) `(loop for x upto . ,x)))
  - [ ] (def-all-error-test loop.for.17 'listp #'(lambda (x) `(loop for x to . ,x)))
  - [ ] (def-all-error-test loop.for.18 'listp #'(lambda (x) `(loop for x downto . ,x)))
**** errors-iteration.lsp [0%]
  - [ ] (def-all-error-test do.1 'listp #'(lambda (x) `(do . ,x)))
  - [ ] (def-all-error-test do.2 'listp #'(lambda (x) `(do () . ,x)))
  - [ ] (def-all-error-test do.3 #'(lambda (x) (or (symbolp x) (listp x))) #'(lambda (x) `(do (,x))))
  - [ ] (def-all-error-test do.4 'listp #'(lambda (x) `(do ((a 1 (1+ a)) . ,x))))
  - [ ] (def-all-error-test do.5 'listp #'(lambda (x) `(do () ,x)))
  - [ ] (def-all-error-test do.6 'listp #'(lambda (x) `(do () (t . ,x))))
  - [ ] (def-all-error-test do.7 'listp #'(lambda (x) `(do () (t) . ,x)))
  - [ ] (def-all-error-test do.8 'listp #'(lambda (x) `(do ((a . ,x)) (t))))
  - [ ] (def-all-error-test do.9 'listp #'(lambda (x) `(do ((a 1 . ,x)) (t))))
  - [ ] (def-all-error-test do.10 'listp #'(lambda (x) `(do ((a 1 (1+ a) . ,x)) (t))))
  - [ ] (def-error-test do.11 (do))
  - [ ] (def-all-error-test do*.1 'listp #'(lambda (x) `(do* . ,x)))
  - [ ] (def-all-error-test do*.2 'listp #'(lambda (x) `(do* () . ,x)))
  - [ ] (def-all-error-test do*.3 #'(lambda (x) (or (symbolp x) (listp x))) #'(lambda (x) `(do* (,x))))
  - [ ] (def-all-error-test do*.4 'listp #'(lambda (x) `(do* ((a 1 (1+ a)) . ,x))))
  - [ ] (def-all-error-test do*.5 'listp #'(lambda (x) `(do* () ,x)))
  - [ ] (def-all-error-test do*.6 'listp #'(lambda (x) `(do* () (t . ,x))))
  - [ ] (def-all-error-test do*.7 'listp #'(lambda (x) `(do* () (t) . ,x)))
  - [ ] (def-all-error-test do*.8 'listp #'(lambda (x) `(do* ((a . ,x)) (t))))
  - [ ] (def-all-error-test do*.9 'listp #'(lambda (x) `(do* ((a 1 . ,x)) (t))))
  - [ ] (def-all-error-test do*.10 'listp #'(lambda (x) `(do* ((a 1 (1+ a) . ,x)) (t))))
  - [ ] (def-error-test do*.11 (do*))
  - [ ] (def-error-test dotimes.1 (dotimes))
  - [ ] (def-all-error-test dotimes.2 'listp #'(lambda (x) `(dotimes . ,x)))
  - [ ] (def-all-error-test dotimes.3 'symbolp #'(lambda (x) `(dotimes (,x 1))))
  - [ ] (def-all-error-test dotimes.4 (constantly nil) #'(lambda (x) `(dotimes (,x))))
  - [ ] (def-all-error-test dotimes.5 'integerp #'(lambda (x) `(dotimes (i ',x))))
  - [ ] (def-all-error-test dotimes.6 'listp #'(lambda (x) `(dotimes (i . ,x))))
  - [ ] (def-all-error-test dotimes.7 'listp #'(lambda (x) `(dotimes (i 1 . ,x))))
  - [ ] (def-all-error-test dotimes.8 'listp #'(lambda (x) `(dotimes (i 1) . ,x)))
  - [ ] (def-all-error-test dotimes.9 'listp #'(lambda (x) `(dotimes (i 1 nil . ,x))))
  - [ ] (def-all-error-test dotimes.10 'listp #'(lambda (x) `(dotimes (i 1 nil ,x))))
  - [ ] (def-error-test dolist.1 (dolist))
  - [ ] (def-all-error-test dolist.2 'listp #'(lambda (x) `(dolist . ,x)))
  - [ ] (def-all-error-test dolist.3 'symbolp #'(lambda (x) `(dolist (,x nil))))
  - [ ] (def-all-error-test dolist.4 'listp #'(lambda (x) `(dolist (e . ,x))))
  - [ ] (def-all-error-test dolist.5 'listp #'(lambda (x) `(dolist (e nil . ,x))))
  - [ ] (def-all-error-test dolist.6 'listp #'(lambda (x) `(dolist (e nil nil . ,x))))
  - [ ] (def-all-error-test dolist.7 'listp #'(lambda (x) `(dolist (e nil nil ,x))))
  - [ ] (def-all-error-test dolist.8 'listp #'(lambda (x) `(dolist (e ',x nil))))
  - [ ] (def-all-error-test dolist.9 'listp #'(lambda (x) `(dolist (e nil nil) . ,x)))
**** errors-data-and-control-flow-1.lsp [0%]
  - [ ] (def-all-error-test apply.1 'function-designator-p '(apply x nil))
  - [ ] (def-all-error-test apply.2 'function-designator-p '(apply x '(1 2 3)))
  - [ ] (def-error-test apply.3 (apply 'cons . 1))
  - [ ] (def-all-error-test apply.4 'listp '(apply 'cons '1 x))
  - [ ] (def-error-test defun.1 (defun))
  - [ ] (def-error-test defun.2 (defun #.(gensym)))
  - [ ] (def-error-test defun.3 (defun . foo))
  - [ ] (def-error-test defun.4 (defun #.(gensym) #.(gensym)))
  - [ ] (def-error-test defun.5 (defun #.(gensym) () . foo))
  - [ ] (def-error-test defun.6 (defun #.(gensym) () "foo" "bar" (declare)))
  - [ ] (def-error-test defun.7 (defun #.(gensym) () nil (declare)))
  - [ ] (def-error-test flet.1 (flet . foo))
  - [ ] (def-error-test flet.2 (flet foo))
  - [ ] (def-error-test flet.3 (flet (foo)))
  - [ ] (def-error-test flet.4 (flet ((foo))))
  - [ ] (def-error-test flet.5 (flet ((foo . bar))))
  - [ ] (def-error-test flet.6 (flet () . foo))
  - [ ] (def-error-test flet.7 (flet ((foo () . bar))))
  - [ ] (def-error-test flet.8 (flet ((foo z))))
  - [ ] (def-error-test flet.9 (flet ((foo ((x y))))))
  - [ ] (def-all-error-test flet.10 'symbolp
  - [ ] (def-all-error-test flet.11 (typef '(or symbol cons))
  - [ ] (def-all-error-test flet.12 (typef '(or symbol cons))
  - [ ] (def-error-test flet.13 (flet ((foo (&optional (x . bar)) nil))))
  - [ ] (def-error-test flet.14 (flet ((foo (&optional (x nil . bar)) nil))))
  - [ ] (def-error-test flet.15 (flet ((foo (&optional (x nil x-p . bar)) nil))))
  - [ ] (def-error-test flet.16 (flet ((foo (&optional (x nil x-p nil)) nil))))
  - [ ] (def-error-test flet.17 (flet ((foo (&key (x . bar)) nil))))
  - [ ] (def-error-test flet.18 (flet ((foo (&key (x nil . bar)) nil))))
  - [ ] (def-error-test flet.19 (flet ((foo (&key (x nil x-p . bar)) nil))))
  - [ ] (def-error-test flet.20 (flet ((foo (&key (x nil x-p nil)) nil))))
  - [ ] (def-error-test flet.21 (flet ((foo (&key ((x . bar))) nil))))
  - [ ] (def-error-test flet.22 (flet ((foo (&key ((x y . z))) nil))))
  - [ ] (def-error-test flet.23 (flet ((foo (&key ((x y z))) nil))))
  - [ ] (def-all-error-test flet.24 'symbolp
  - [ ] (def-all-error-test flet.25 'symbolp
  - [ ] (def-error-test flet.26 (flet ((foo (&aux . bar)))))
  - [ ] (def-error-test flet.27 (flet ((foo (&aux (x . bar))))))
  - [ ] (def-error-test flet.28 (flet ((foo (&aux (x nil . bar))))))
  - [ ] (def-error-test flet.29 (flet ((foo (&aux (x nil nil))))))
  - [ ] (def-error-test flet.30 (flet ((foo () "x" "y" (declare))) (foo)))
  - [ ] (def-error-test flet.31 (flet ((foo () :bad1) (foo () :bad2)) (foo)))
  - [ ] (def-error-test labels.1 (labels . foo))
  - [ ] (def-error-test labels.2 (labels foo))
  - [ ] (def-error-test labels.3 (labels (foo)))
  - [ ] (def-error-test labels.4 (labels ((foo))))
  - [ ] (def-error-test labels.5 (labels ((foo . bar))))
  - [ ] (def-error-test labels.6 (labels () . foo))
  - [ ] (def-error-test labels.7 (labels ((foo () . bar))))
  - [ ] (def-error-test labels.8 (labels ((foo z))))
  - [ ] (def-error-test labels.9 (labels ((foo ((x y))))))
  - [ ] (def-all-error-test labels.10 'symbolp
  - [ ] (def-all-error-test labels.11 (typef '(or symbol cons))
  - [ ] (def-all-error-test labels.12 (typef '(or symbol cons))
  - [ ] (def-error-test labels.13 (labels ((foo (&optional (x . bar)) nil))))
  - [ ] (def-error-test labels.14 (labels ((foo (&optional (x nil . bar)) nil))))
  - [ ] (def-error-test labels.15 (labels ((foo (&optional (x nil x-p . bar)) nil))))
  - [ ] (def-error-test labels.16 (labels ((foo (&optional (x nil x-p nil)) nil))))
  - [ ] (def-error-test labels.17 (labels ((foo (&key (x . bar)) nil))))
  - [ ] (def-error-test labels.18 (labels ((foo (&key (x nil . bar)) nil))))
  - [ ] (def-error-test labels.19 (labels ((foo (&key (x nil x-p . bar)) nil))))
  - [ ] (def-error-test labels.20 (labels ((foo (&key (x nil x-p nil)) nil))))
  - [ ] (def-error-test labels.21 (labels ((foo (&key ((x . bar))) nil))))
  - [ ] (def-error-test labels.22 (labels ((foo (&key ((x y . z))) nil))))
  - [ ] (def-error-test labels.23 (labels ((foo (&key ((x y z))) nil))))
  - [ ] (def-all-error-test labels.24 'symbolp
  - [ ] (def-all-error-test labels.25 'symbolp
  - [ ] (def-error-test labels.26 (labels ((foo (&aux . bar)))))
  - [ ] (def-error-test labels.27 (labels ((foo (&aux (x . bar))))))
  - [ ] (def-error-test labels.28 (labels ((foo (&aux (x nil . bar))))))
  - [ ] (def-error-test labels.29 (labels ((foo (&aux (x nil nil))))))
  - [ ] (def-error-test labels.30 (labels ((foo () "x" "y" (declare))) (foo)))
  - [ ] (def-error-test labels.31 (labels ((foo () :bad1) (foo () :bad2)) (foo)))
**** ba-test-package.lsp [0%]
**** makefile [0%]
*** sequences [0%]
**** substitute-if-not.lsp [0%]
  - [ ] (deftest substitute-if-not-list.1
  - [ ] (deftest substitute-if-not-list.2
  - [ ] (deftest substitute-if-not-list.3
  - [ ] (deftest substitute-if-not-list.4
  - [ ] (deftest substitute-if-not-list.5
  - [ ] (deftest substitute-if-not-list.6
  - [ ] (deftest substitute-if-not-list.7
  - [ ] (deftest substitute-if-not-list.8
  - [ ] (deftest substitute-if-not-list.9
  - [ ] (deftest substitute-if-not-list.10
  - [ ] (deftest substitute-if-not-list.11
  - [ ] (deftest substitute-if-not-list.12
  - [ ] (deftest substitute-if-not-list.13
  - [ ] (deftest substitute-if-not-list.14
  - [ ] (deftest substitute-if-not-list.15
  - [ ] (deftest substitute-if-not-list.16
  - [ ] (deftest substitute-if-not-list.17
  - [ ] (deftest substitute-if-not-list.18
  - [ ] (deftest substitute-if-not-vector.1
  - [ ] (deftest substitute-if-not-vector.2
  - [ ] (deftest substitute-if-not-vector.3
  - [ ] (deftest substitute-if-not-vector.4
  - [ ] (deftest substitute-if-not-vector.5
  - [ ] (deftest substitute-if-not-vector.6
  - [ ] (deftest substitute-if-not-vector.7
  - [ ] (deftest substitute-if-not-vector.8
  - [ ] (deftest substitute-if-not-vector.9
  - [ ] (deftest substitute-if-not-vector.10
  - [ ] (deftest substitute-if-not-vector.11
  - [ ] (deftest substitute-if-not-vector.12
  - [ ] (deftest substitute-if-not-vector.13
  - [ ] (deftest substitute-if-not-vector.14
  - [ ] (deftest substitute-if-not-vector.15
  - [ ] (deftest substitute-if-not-vector.16
  - [ ] (deftest substitute-if-not-vector.17
  - [ ] (deftest substitute-if-not-vector.18
  - [ ] (deftest substitute-if-not-vector.28
  - [ ] (deftest substitute-if-not-vector.29
  - [ ] (deftest substitute-if-not-vector.30
  - [ ] (deftest substitute-if-not-vector.31
  - [ ] (deftest substitute-if-not-vector.32
  - [ ] (deftest substitute-if-not-vector.33
  - [ ] (deftest substitute-if-not-string.1
  - [ ] (deftest substitute-if-not-string.2
  - [ ] (deftest substitute-if-not-string.3
  - [ ] (deftest substitute-if-not-string.4
  - [ ] (deftest substitute-if-not-string.5
  - [ ] (deftest substitute-if-not-string.6
  - [ ] (deftest substitute-if-not-string.7
  - [ ] (deftest substitute-if-not-string.8
  - [ ] (deftest substitute-if-not-string.9
  - [ ] (deftest substitute-if-not-string.10
  - [ ] (deftest substitute-if-not-string.11
  - [ ] (deftest substitute-if-not-string.12
  - [ ] (deftest substitute-if-not-string.13
  - [ ] (deftest substitute-if-not-string.14
  - [ ] (deftest substitute-if-not-string.15
  - [ ] (deftest substitute-if-not-string.16
  - [ ] (deftest substitute-if-not-string.17
  - [ ] (deftest substitute-if-not-string.18
  - [ ] (deftest substitute-if-not-string.28
  - [ ] (deftest substitute-if-not-string.29
  - [ ] (deftest substitute-if-not-string.30
  - [ ] (deftest substitute-if-not-string.31
  - [ ] (deftest substitute-if-not-bitstring.1
  - [ ] (deftest substitute-if-not-bitstring.2
  - [ ] (deftest substitute-if-not-bitstring.3
  - [ ] (deftest substitute-if-not-bitstring.4
  - [ ] (deftest substitute-if-not-bitstring.5
  - [ ] (deftest substitute-if-not-bitstring.6
  - [ ] (deftest substitute-if-not-bitstring.7
  - [ ] (deftest substitute-if-not-bitstring.8
  - [ ] (deftest substitute-if-not-bitstring.9
  - [ ] (deftest substitute-if-not-bitstring.10
  - [ ] (deftest substitute-if-not-bitstring.11
  - [ ] (deftest substitute-if-not-bitstring.12
  - [ ] (deftest substitute-if-not-bitstring.13
  - [ ] (deftest substitute-if-not-bitstring.14
  - [ ] (deftest substitute-if-not-bitstring.15
  - [ ] (deftest substitute-if-not-bitstring.16
  - [ ] (deftest substitute-if-not-bitstring.17
  - [ ] (deftest substitute-if-not-bitstring.18
  - [ ] (deftest substitute-if-not-bitstring.19
  - [ ] (deftest substitute-if-not-bitstring.20
  - [ ] (deftest substitute-if-not-bitstring.21
  - [ ] (deftest substitute-if-not-list.24
  - [ ] (deftest substitute-if-not-list.25
  - [ ] (deftest substitute-if-not-vector.24
  - [ ] (deftest substitute-if-not-vector.25
  - [ ] (deftest substitute-if-not-string.24
  - [ ] (deftest substitute-if-not-string.25
  - [ ] (deftest substitute-if-not-string.26
  - [ ] (deftest substitute-if-not-bitstring.26
  - [ ] (deftest substitute-if-not-bitstring.27
  - [ ] (deftest substitute-if-not-bit-vector.30
  - [ ] (deftest substitute-if-not-bit-vector.31
  - [ ] (deftest substitute-if-not-bit-vector.32
  - [ ] (deftest substitute-if-not-bit-vector.33
  - [ ] (deftest substitute-if-not.order.1
  - [ ] (deftest substitute-if-not.order.2
  - [ ] (deftest substitute-if-not.allow-other-keys.1
  - [ ] (deftest substitute-if-not.allow-other-keys.2
  - [ ] (deftest substitute-if-not.allow-other-keys.3
  - [ ] (deftest substitute-if-not.allow-other-keys.4
  - [ ] (deftest substitute-if-not.allow-other-keys.5
  - [ ] (deftest substitute-if-not.keywords.6
  - [ ] (deftest substitute-if-not.allow-other-keys.7
  - [ ] (deftest substitute-if-not.allow-other-keys.8
  - [ ] (def-fold-test substitute-if-not.fold.1
  - [ ] (def-fold-test substitute-if-not.fold.2
  - [ ] (def-fold-test substitute-if-not.fold.3
  - [ ] (def-fold-test substitute-if-not.fold.4
  - [ ] (deftest substitute-if-not.error.1
  - [ ] (deftest substitute-if-not.error.2
  - [ ] (deftest substitute-if-not.error.3
  - [ ] (deftest substitute-if-not.error.4
  - [ ] (deftest substitute-if-not.error.5
  - [ ] (deftest substitute-if-not.error.6
  - [ ] (deftest substitute-if-not.error.7
  - [ ] (deftest substitute-if-not.error.8
  - [ ] (deftest substitute-if-not.error.9
  - [ ] (deftest substitute-if-not.error.10
  - [ ] (deftest substitute-if-not.error.11
  - [ ] (deftest substitute-if-not.error.12
**** count-if.lsp [0%]
  - [ ] (deftest count-if-list.1
  - [ ] (deftest count-if-list.2
  - [ ] (deftest count-if-list.3
  - [ ] (deftest count-if-list.4
  - [ ] (deftest count-if-list.5
  - [ ] (deftest count-if-list.6
  - [ ] (deftest count-if-list.8
  - [ ] (deftest count-if-list.9
  - [ ] (deftest count-if-list.10
  - [ ] (deftest count-if-list.11
  - [ ] (deftest count-if-list.12
  - [ ] (deftest count-if-list.13
  - [ ] (deftest count-if-list.14
  - [ ] (deftest count-if-list.15
  - [ ] (deftest count-if-list.16
  - [ ] (deftest count-if-vector.1
  - [ ] (deftest count-if-vector.2
  - [ ] (deftest count-if-vector.3
  - [ ] (deftest count-if-vector.4
  - [ ] (deftest count-if-vector.5
  - [ ] (deftest count-if-vector.6
  - [ ] (deftest count-if-vector.8
  - [ ] (deftest count-if-vector.9
  - [ ] (deftest count-if-vector.10
  - [ ] (deftest count-if-vector.11
  - [ ] (deftest count-if-vector.12
  - [ ] (deftest count-if-vector.13
  - [ ] (deftest count-if-vector.14
  - [ ] (deftest count-if-vector.15
  - [ ] (deftest count-if-vector.16
  - [ ] (deftest count-if-nonsimple-vector.1
  - [ ] (deftest count-if-nonsimple-vector.2
  - [ ] (deftest count-if-nonsimple-vector.3
  - [ ] (deftest count-if-nonsimple-vector.4
  - [ ] (deftest count-if-nonsimple-vector.5
  - [ ] (deftest count-if-nonsimple-vector.6
  - [ ] (deftest count-if-nonsimple-vector.8
  - [ ] (deftest count-if-nonsimple-vector.9
  - [ ] (deftest count-if-nonsimple-vector.10
  - [ ] (deftest count-if-nonsimple-vector.11
  - [ ] (deftest count-if-nonsimple-vector.12
  - [ ] (deftest count-if-nonsimple-vector.13
  - [ ] (deftest count-if-nonsimple-vector.14
  - [ ] (deftest count-if-nonsimple-vector.15
  - [ ] (deftest count-if-nonsimple-vector.16
  - [ ] (deftest count-if-nonsimple-vector.17
  - [ ] (deftest count-if.special-vector.1
  - [ ] (deftest count-if.special-vector.2
  - [ ] (deftest count-if.special-vector.3
  - [ ] (deftest count-if.special-vector.4
  - [ ] (deftest count-if-bit-vector.1
  - [ ] (deftest count-if-bit-vector.2
  - [ ] (deftest count-if-bit-vector.3
  - [ ] (deftest count-if-bit-vector.4
  - [ ] (deftest count-if-bit-vector.5
  - [ ] (deftest count-if-bit-vector.6
  - [ ] (deftest count-if-bit-vector.8
  - [ ] (deftest count-if-bit-vector.10
  - [ ] (deftest count-if-bit-vector.11
  - [ ] (deftest count-if-bit-vector.12
  - [ ] (deftest count-if-bit-vector.13
  - [ ] (deftest count-if-bit-vector.14
  - [ ] (deftest count-if-bit-vector.15
  - [ ] (deftest count-if-bit-vector.16
  - [ ] (deftest count-if-bit-vector.17
  - [ ] (deftest count-if-string.1
  - [ ] (deftest count-if-string.2
  - [ ] (deftest count-if-string.3
  - [ ] (deftest count-if-string.4
  - [ ] (deftest count-if-string.5
  - [ ] (deftest count-if-string.6
  - [ ] (deftest count-if-string.8
  - [ ] (deftest count-if-string.11
  - [ ] (deftest count-if-string.12
  - [ ] (deftest count-if-string.13
  - [ ] (deftest count-if-string.14
  - [ ] (deftest count-if-string.15
  - [ ] (deftest count-if-string.16
  - [ ] (deftest count-if-string.17
  - [ ] (deftest count-if-string.18
  - [ ] (deftest count-if.order.1
  - [ ] (deftest count-if.order.2
  - [ ] (deftest count-if.allow-other-keys.1
  - [ ] (deftest count-if.allow-other-keys.2
  - [ ] (deftest count-if.allow-other-keys.3
  - [ ] (deftest count-if.keywords.4
  - [ ] (deftest count-if.allow-other-keys.5
  - [ ] (deftest count-if.error.1
  - [ ] (deftest count-if.error.4
  - [ ] (deftest count-if.error.5
  - [ ] (deftest count-if.error.6
  - [ ] (deftest count-if.error.7
  - [ ] (deftest count-if.error.8
  - [ ] (deftest count-if.error.9
  - [ ] (deftest count-if.error.10
  - [ ] (deftest count-if.error.11
  - [ ] (deftest count-if.error.12
  - [ ] (deftest count-if.error.13
  - [ ] (deftest count-if.error.14
  - [ ] (deftest count-if.error.15
**** find-if-not.lsp [0%]
  - [ ] (deftest find-if-not-list.1
  - [ ] (deftest find-if-not-list.2
  - [ ] (deftest find-if-not-list.2a
  - [ ] (deftest find-if-not-list.3
  - [ ] (deftest find-if-not-list.4
  - [ ] (deftest find-if-not-list.5
  - [ ] (deftest find-if-not-list.6
  - [ ] (deftest find-if-not-list.7
  - [ ] (deftest find-if-not-list.8
  - [ ] (deftest find-if-not-list.9
  - [ ] (deftest find-if-not-list.10
  - [ ] (deftest find-if-not-list.11
  - [ ] (deftest find-if-not-list.12
  - [ ] (deftest find-if-not-list.13
  - [ ] (deftest find-if-not-list.14
  - [ ] (deftest find-if-not-list.15
  - [ ] (deftest find-if-not-list.16
  - [ ] (deftest find-if-not-list.17
  - [ ] (deftest find-if-not-list.18
  - [ ] (deftest find-if-not-vector.1
  - [ ] (deftest find-if-not-vector.2
  - [ ] (deftest find-if-not-vector.2a
  - [ ] (deftest find-if-not-vector.3
  - [ ] (deftest find-if-not-vector.4
  - [ ] (deftest find-if-not-vector.5
  - [ ] (deftest find-if-not-vector.6
  - [ ] (deftest find-if-not-vector.7
  - [ ] (deftest find-if-not-vector.8
  - [ ] (deftest find-if-not-vector.9
  - [ ] (deftest find-if-not-vector.10
  - [ ] (deftest find-if-not-vector.11
  - [ ] (deftest find-if-not-vector.12
  - [ ] (deftest find-if-not-vector.13
  - [ ] (deftest find-if-not-vector.14
  - [ ] (deftest find-if-not-vector.15
  - [ ] (deftest find-if-not-vector.16
  - [ ] (deftest find-if-not-vector.17
  - [ ] (deftest find-if-not-vector.18
  - [ ] (deftest find-if-not-bit-vector.1
  - [ ] (deftest find-if-not-bit-vector.2
  - [ ] (deftest find-if-not-bit-vector.3
  - [ ] (deftest find-if-not-bit-vector.4
  - [ ] (deftest find-if-not-bit-vector.5
  - [ ] (deftest find-if-not-bit-vector.6
  - [ ] (deftest find-if-not-bit-vector.7
  - [ ] (deftest find-if-not-string.1
  - [ ] (deftest find-if-not-string.2
  - [ ] (deftest find-if-not-string.2a
  - [ ] (deftest find-if-not-string.3
  - [ ] (deftest find-if-not-string.3a
  - [ ] (deftest find-if-not-string.4
  - [ ] (deftest find-if-not-string.5
  - [ ] (deftest find-if-not-string.6
  - [ ] (deftest find-if-not-string.7
  - [ ] (deftest find-if-not-string.8
  - [ ] (deftest find-if-not-string.9
  - [ ] (deftest find-if-not-string.10
  - [ ] (deftest find-if-not-string.11
  - [ ] (deftest find-if-not-string.12
  - [ ] (deftest find-if-not-string.13
  - [ ] (deftest find-if-not-string.14
  - [ ] (deftest find-if-not-string.15
  - [ ] (deftest find-if-not-string.16
  - [ ] (deftest find-if-not-string.17
  - [ ] (deftest find-if-not-string.18
  - [ ] (deftest find-if-not-string.19
  - [ ] (deftest find-if-not.allow-other-keys.1
  - [ ] (deftest find-if-not.allow-other-keys.2
  - [ ] (deftest find-if-not.allow-other-keys.3
  - [ ] (deftest find-if-not.keywords.4
  - [ ] (deftest find-if-not.allow-other-keys.5
  - [ ] (deftest find-if-not.error.1
  - [ ] (deftest find-if-not.error.4
  - [ ] (deftest find-if-not.error.5
  - [ ] (deftest find-if-not.error.6
  - [ ] (deftest find-if-not.error.7
  - [ ] (deftest find-if-not.error.8
  - [ ] (deftest find-if-not.error.9
  - [ ] (deftest find-if-not.error.10
  - [ ] (deftest find-if-not.error.11
  - [ ] (deftest find-if-not.error.12
  - [ ] (deftest find-if-not.error.13
  - [ ] (deftest find-if-not.error.14
  - [ ] (deftest find-if-not.error.15
  - [ ] (deftest find-if-not.order.1
  - [ ] (deftest find-if-not.order.2
  - [ ] (deftest find-if-not.order.3
**** count.lsp [0%]
  - [ ] (deftest count-list.1
  - [ ] (deftest count-list.2
  - [ ] (deftest count-list.3
  - [ ] (deftest count-list.4
  - [ ] (deftest count-list.5
  - [ ] (deftest count-list.6
  - [ ] (deftest count-list.7
  - [ ] (deftest count-list.8
  - [ ] (deftest count-list.9
  - [ ] (deftest count-list.10
  - [ ] (deftest count-list.11
  - [ ] (deftest count-list.12
  - [ ] (deftest count-list.13
  - [ ] (deftest count-list.14
  - [ ] (deftest count-list.15
  - [ ] (deftest count-list.16
  - [ ] (deftest count-list.17
  - [ ] (deftest count-list.18
  - [ ] (deftest count-vector.1
  - [ ] (deftest count-vector.2
  - [ ] (deftest count-vector.3
  - [ ] (deftest count-vector.4
  - [ ] (deftest count-vector.5
  - [ ] (deftest count-vector.6
  - [ ] (deftest count-vector.7
  - [ ] (deftest count-vector.8
  - [ ] (deftest count-vector.9
  - [ ] (deftest count-vector.10
  - [ ] (deftest count-vector.11
  - [ ] (deftest count-vector.12
  - [ ] (deftest count-vector.13
  - [ ] (deftest count-vector.14
  - [ ] (deftest count-vector.15
  - [ ] (deftest count-vector.16
  - [ ] (deftest count-vector.17
  - [ ] (deftest count-vector.18
  - [ ] (deftest count-filled-vector.1
  - [ ] (deftest count-filled-vector.2
  - [ ] (deftest count-filled-vector.3
  - [ ] (deftest count-filled-vector.4
  - [ ] (deftest count-filled-vector.5
  - [ ] (deftest count-filled-vector.6
  - [ ] (deftest count-filled-vector.7
  - [ ] (deftest count-filled-vector.8
  - [ ] (deftest count-filled-vector.9
  - [ ] (deftest count-filled-vector.10
  - [ ] (deftest count-filled-vector.11
  - [ ] (deftest count-filled-vector.12
  - [ ] (deftest count-filled-vector.13
  - [ ] (deftest count-filled-vector.14
  - [ ] (deftest count-filled-vector.15
  - [ ] (deftest count-filled-vector.16
  - [ ] (deftest count-filled-vector.17
  - [ ] (deftest count-filled-vector.18
  - [ ] (deftest count-filled-vector.19
  - [ ] (deftest count-filled-vector.20
  - [ ] (deftest count.special-vector.1
  - [ ] (deftest count.special-vector.2
  - [ ] (deftest count.special-vector.3
  - [ ] (deftest count.special-vector.4
  - [ ] (deftest count-bit-vector.1
  - [ ] (deftest count-bit-vector.2
  - [ ] (deftest count-bit-vector.3
  - [ ] (deftest count-bit-vector.4
  - [ ] (deftest count-bit-vector.5
  - [ ] (deftest count-bit-vector.6
  - [ ] (deftest count-bit-vector.7
  - [ ] (deftest count-bit-vector.8
  - [ ] (deftest count-bit-vector.9
  - [ ] (deftest count-bit-vector.10
  - [ ] (deftest count-bit-vector.11
  - [ ] (deftest count-bit-vector.12
  - [ ] (deftest count-bit-vector.13
  - [ ] (deftest count-bit-vector.14
  - [ ] (deftest count-bit-vector.15
  - [ ] (deftest count-bit-vector.16
  - [ ] (deftest count-bit-vector.17
  - [ ] (deftest count-bit-vector.18
  - [ ] (deftest count-bit-vector.19
  - [ ] (deftest count-bit-vector.20
  - [ ] (deftest count-bit-vector.21
  - [ ] (deftest count-bit-vector.22
  - [ ] (deftest count-string.1
  - [ ] (deftest count-string.2
  - [ ] (deftest count-string.3
  - [ ] (deftest count-string.4
  - [ ] (deftest count-string.5
  - [ ] (deftest count-string.6
  - [ ] (deftest count-string.7
  - [ ] (deftest count-string.8
  - [ ] (deftest count-string.9
  - [ ] (deftest count-string.10
  - [ ] (deftest count-string.11
  - [ ] (deftest count-string.12
  - [ ] (deftest count-string.13
  - [ ] (deftest count-string.14
  - [ ] (deftest count-string.15
  - [ ] (deftest count-string.16
  - [ ] (deftest count-string.17
  - [ ] (deftest count-string.18
  - [ ] (deftest count-string.19
  - [ ] (deftest count-string.20
  - [ ] (deftest count-string.21
  - [ ] (deftest count-string.22
  - [ ] (deftest count-string.23
  - [ ] (deftest count.order.1
  - [ ] (deftest count.order.2
  - [ ] (deftest count.allow-other-keys.1
  - [ ] (deftest count.allow-other-keys.2
  - [ ] (deftest count.allow-other-keys.3
  - [ ] (deftest count.keywords.4
  - [ ] (deftest count.allow-other-keys.5
  - [ ] (deftest count.error.1
  - [ ] (deftest count.error.4
  - [ ] (deftest count.error.5
  - [ ] (deftest count.error.6
  - [ ] (deftest count.error.7
  - [ ] (deftest count.error.8
  - [ ] (deftest count.error.9
  - [ ] (deftest count.error.10
  - [ ] (deftest count.error.11
  - [ ] (deftest count.error.12
  - [ ] (deftest count.error.13
  - [ ] (deftest count.error.14
  - [ ] (deftest count.error.15
**** substitute-if.lsp [0%]
  - [ ] (deftest substitute-if-list.1
  - [ ] (deftest substitute-if-list.2
  - [ ] (deftest substitute-if-list.3
  - [ ] (deftest substitute-if-list.4
  - [ ] (deftest substitute-if-list.5
  - [ ] (deftest substitute-if-list.6
  - [ ] (deftest substitute-if-list.7
  - [ ] (deftest substitute-if-list.8
  - [ ] (deftest substitute-if-list.9
  - [ ] (deftest substitute-if-list.10
  - [ ] (deftest substitute-if-list.11
  - [ ] (deftest substitute-if-list.12
  - [ ] (deftest substitute-if-list.13
  - [ ] (deftest substitute-if-list.14
  - [ ] (deftest substitute-if-list.15
  - [ ] (deftest substitute-if-list.16
  - [ ] (deftest substitute-if-list.17
  - [ ] (deftest substitute-if-list.18
  - [ ] (deftest substitute-if-vector.1
  - [ ] (deftest substitute-if-vector.2
  - [ ] (deftest substitute-if-vector.3
  - [ ] (deftest substitute-if-vector.4
  - [ ] (deftest substitute-if-vector.5
  - [ ] (deftest substitute-if-vector.6
  - [ ] (deftest substitute-if-vector.7
  - [ ] (deftest substitute-if-vector.8
  - [ ] (deftest substitute-if-vector.9
  - [ ] (deftest substitute-if-vector.10
  - [ ] (deftest substitute-if-vector.11
  - [ ] (deftest substitute-if-vector.12
  - [ ] (deftest substitute-if-vector.13
  - [ ] (deftest substitute-if-vector.14
  - [ ] (deftest substitute-if-vector.15
  - [ ] (deftest substitute-if-vector.16
  - [ ] (deftest substitute-if-vector.17
  - [ ] (deftest substitute-if-vector.18
  - [ ] (deftest substitute-if-vector.28
  - [ ] (deftest substitute-if-vector.29
  - [ ] (deftest substitute-if-vector.30
  - [ ] (deftest substitute-if-vector.31
  - [ ] (deftest substitute-if-vector.32
  - [ ] (deftest substitute-if-vector.33
  - [ ] (deftest substitute-if-string.1
  - [ ] (deftest substitute-if-string.2
  - [ ] (deftest substitute-if-string.3
  - [ ] (deftest substitute-if-string.4
  - [ ] (deftest substitute-if-string.5
  - [ ] (deftest substitute-if-string.6
  - [ ] (deftest substitute-if-string.7
  - [ ] (deftest substitute-if-string.8
  - [ ] (deftest substitute-if-string.9
  - [ ] (deftest substitute-if-string.10
  - [ ] (deftest substitute-if-string.11
  - [ ] (deftest substitute-if-string.12
  - [ ] (deftest substitute-if-string.13
  - [ ] (deftest substitute-if-string.14
  - [ ] (deftest substitute-if-string.15
  - [ ] (deftest substitute-if-string.16
  - [ ] (deftest substitute-if-string.17
  - [ ] (deftest substitute-if-string.18
  - [ ] (deftest substitute-if-string.28
  - [ ] (deftest substitute-if-string.29
  - [ ] (deftest substitute-if-string.30
  - [ ] (deftest substitute-if-string.31
  - [ ] (deftest substitute-if-bit-vector.1
  - [ ] (deftest substitute-if-bit-vector.2
  - [ ] (deftest substitute-if-bit-vector.3
  - [ ] (deftest substitute-if-bit-vector.4
  - [ ] (deftest substitute-if-bit-vector.5
  - [ ] (deftest substitute-if-bit-vector.6
  - [ ] (deftest substitute-if-bit-vector.7
  - [ ] (deftest substitute-if-bit-vector.8
  - [ ] (deftest substitute-if-bit-vector.9
  - [ ] (deftest substitute-if-bit-vector.10
  - [ ] (deftest substitute-if-bit-vector.11
  - [ ] (deftest substitute-if-bit-vector.12
  - [ ] (deftest substitute-if-bit-vector.13
  - [ ] (deftest substitute-if-bit-vector.14
  - [ ] (deftest substitute-if-bit-vector.15
  - [ ] (deftest substitute-if-bit-vector.16
  - [ ] (deftest substitute-if-bit-vector.17
  - [ ] (deftest substitute-if-bit-vector.18
  - [ ] (deftest substitute-if-bit-vector.19
  - [ ] (deftest substitute-if-bit-vector.20
  - [ ] (deftest substitute-if-bit-vector.21
  - [ ] (deftest substitute-if-list.24
  - [ ] (deftest substitute-if-list.25
  - [ ] (deftest substitute-if-vector.24
  - [ ] (deftest substitute-if-vector.25
  - [ ] (deftest substitute-if-string.24
  - [ ] (deftest substitute-if-string.25
  - [ ] (deftest substitute-if-string.26
  - [ ] (deftest substitute-if-bit-vector.22
  - [ ] (deftest substitute-if-bit-vector.23
  - [ ] (deftest substitute-if-bit-vector.24
  - [ ] (deftest substitute-if-bit-vector.25
  - [ ] (deftest substitute-if-bit-vector.26
  - [ ] (deftest substitute-if-bit-vector.27
  - [ ] (deftest substitute-if.order.1
  - [ ] (deftest substitute-if.order.2
  - [ ] (deftest substitute-if.allow-other-keys.1
  - [ ] (deftest substitute-if.allow-other-keys.2
  - [ ] (deftest substitute-if.allow-other-keys.3
  - [ ] (deftest substitute-if.allow-other-keys.4
  - [ ] (deftest substitute-if.allow-other-keys.5
  - [ ] (deftest substitute-if.keywords.6
  - [ ] (deftest substitute-if.allow-other-keys.7
  - [ ] (deftest substitute-if.allow-other-keys.8
  - [ ] (def-fold-test substitute-if.fold.1 (substitute-if 'z 'null '(a nil b)))
  - [ ] (def-fold-test substitute-if.fold.2 (substitute-if 'z 'null #(a nil b)))
  - [ ] (def-fold-test substitute-if.fold.3 (substitute-if 0 'plusp #*100110))
  - [ ] (def-fold-test substitute-if.fold.4 (substitute-if #\x 'digit-char-p
  - [ ] (deftest substitute-if.error.1
  - [ ] (deftest substitute-if.error.2
  - [ ] (deftest substitute-if.error.3
  - [ ] (deftest substitute-if.error.4
  - [ ] (deftest substitute-if.error.5
  - [ ] (deftest substitute-if.error.6
  - [ ] (deftest substitute-if.error.7
  - [ ] (deftest substitute-if.error.8
  - [ ] (deftest substitute-if.error.9
  - [ ] (deftest substitute-if.error.10
  - [ ] (deftest substitute-if.error.11
  - [ ] (deftest substitute-if.error.12
**** search-vector.lsp [0%]
  - [ ] (deftest search-vector.1
  - [ ] (deftest search-vector.2
  - [ ] (deftest search-vector.3
  - [ ] (deftest search-vector.4
  - [ ] (deftest search-vector.5
  - [ ] (deftest search-vector.6
  - [ ] (deftest search-vector.7
  - [ ] (deftest search-vector.8
  - [ ] (deftest search-vector.9
  - [ ] (deftest search-vector.10
  - [ ] (deftest search-vector.11
  - [ ] (deftest search-vector.12
  - [ ] (deftest search-vector.13
  - [ ] (deftest search-vector.14
  - [ ] (deftest search-vector.15
  - [ ] (deftest search-vector.16
  - [ ] (deftest search-vector.17
  - [ ] (deftest search-vector.18
**** fill.lsp [0%]
  - [ ] (deftest fill.error.1
  - [ ] (deftest fill.error.2
  - [ ] (deftest fill.error.3
  - [ ] (deftest fill.error.4
  - [ ] (deftest fill.error.5
  - [ ] (deftest fill.error.6
  - [ ] (deftest fill.error.7
  - [ ] (deftest fill.error.8
  - [ ] (deftest fill.error.10
  - [ ] (deftest fill.error.11
  - [ ] (deftest array-fill-1
  - [ ] (deftest array-fill-2
  - [ ] (deftest array-fill-3
  - [ ] (deftest array-fill-4
  - [ ] (deftest array-fill-5
  - [ ] (deftest array-fill-6
  - [ ] (deftest array-fill-7
  - [ ] (deftest array-fill-8
  - [ ] (deftest array-fill-9
  - [ ] (deftest array-fill-10
  - [ ] (deftest array-fixnum-fill-1
  - [ ] (deftest array-fixnum-fill-2
  - [ ] (deftest array-fixnum-fill-3
  - [ ] (deftest array-fixnum-fill-4
  - [ ] (deftest array-fixnum-fill-5
  - [ ] (deftest array-fixnum-fill-6
  - [ ] (deftest array-fixnum-fill-7
  - [ ] (deftest array-fixnum-fill-8
  - [ ] (deftest array-fixnum-fill-9
  - [ ] (deftest array-fixnum-fill-10
  - [ ] (deftest array-unsigned-byte8-fill-1
  - [ ] (deftest array-unsigned-byte8-fill-2
  - [ ] (deftest array-unsigned-byte8-fill-3
  - [ ] (deftest array-unsigned-byte8-fill-4
  - [ ] (deftest array-unsigned-byte8-fill-5
  - [ ] (deftest array-unsigned-byte8-fill-6
  - [ ] (deftest array-unsigned-byte8-fill-7
  - [ ] (deftest array-unsigned-byte8-fill-8
  - [ ] (deftest array-unsigned-byte8-fill-9
  - [ ] (deftest array-unsigned-byte8-fill-10
  - [ ] (deftest array-fill-pointer-fill.1
  - [ ] (deftest array-fill-pointer-fill.2
  - [ ] (deftest fill.string.1
  - [ ] (deftest fill.string.2
  - [ ] (deftest fill.string.3
  - [ ] (deftest fill.string.4
  - [ ] (deftest fill.string.5
  - [ ] (deftest fill.string.6
  - [ ] (deftest fill.string.7
  - [ ] (deftest fill.string.8
  - [ ] (deftest fill.string.9
  - [ ] (deftest fill.string.10
  - [ ] (deftest fill.bit-vector.1
  - [ ] (deftest fill.bit-vector.2
  - [ ] (deftest fill.bit-vector.3
  - [ ] (deftest fill.bit-vector.4
  - [ ] (deftest fill.bit-vector.5
  - [ ] (deftest fill.bit-vector.6
  - [ ] (deftest fill.bit-vector.7
  - [ ] (deftest fill.bit-vector.8
  - [ ] (deftest fill.bit-vector.9
  - [ ] (deftest fill.allow-other-keys.1
  - [ ] (deftest fill.allow-other-keys.2
  - [ ] (deftest fill.allow-other-keys.3
  - [ ] (deftest fill.allow-other-keys.4
  - [ ] (deftest fill.allow-other-keys.5
  - [ ] (deftest fill.allow-other-keys.6
  - [ ] (deftest fill.allow-other-keys.7
  - [ ] (deftest fill.order.1
  - [ ] (deftest fill.order.2
  - [ ] (deftest fill.order.3
  - [ ] (deftest fill.order.4
  - [ ] (deftest fill.specialized-strings.1
  - [ ] (deftest fill.specialized-strings.2
  - [ ] (deftest fill.specialized-strings.3
  - [ ] (deftest fill.specialized-strings.4
  - [ ] (deftest fill.specialized-vectors.1
  - [ ] (deftest fill.specialized-vectors.2
  - [ ] (deftest fill.specialized-vectors.3
**** make-sequence.lsp [0%]
  - [ ] (deftest make-sequence.1
  - [ ] (deftest make-sequence.2
  - [ ] (deftest make-sequence.3
  - [ ] (deftest make-sequence.4
  - [ ] (deftest make-sequence.5
  - [ ] (deftest make-sequence.6
  - [ ] (deftest make-sequence.7
  - [ ] (deftest make-sequence.8
  - [ ] (deftest make-sequence.9
  - [ ] (deftest make-sequence.10
  - [ ] (deftest make-sequence.11
  - [ ] (deftest make-sequence.12
  - [ ] (deftest make-sequence.13
  - [ ] (deftest make-sequence.14
  - [ ] (deftest make-sequence.15
  - [ ] (deftest make-sequence.16
  - [ ] (deftest make-sequence.17
  - [ ] (deftest make-sequence.18
  - [ ] (deftest make-sequence.19
  - [ ] (deftest make-sequence.20
  - [ ] (deftest make-sequence.21
  - [ ] (deftest make-sequence.22
  - [ ] (deftest make-sequence.23
  - [ ] (deftest make-sequence.24
  - [ ] (deftest make-sequence.25
  - [ ] (deftest make-sequence.26
  - [ ] (deftest make-sequence.27
  - [ ] (deftest make-sequence.28
  - [ ] (deftest make-sequence.29
  - [ ] (deftest make-sequence.30
  - [ ] (deftest make-sequence.31
  - [ ] (deftest make-sequence.32
  - [ ] (deftest make-sequence.33
  - [ ] (deftest make-sequence.34
  - [ ] (deftest make-sequence.35
  - [ ] (deftest make-sequence.36
  - [ ] (deftest make-sequence.37
  - [ ] (deftest make-sequence.38
  - [ ] (deftest make-sequence.39
  - [ ] (deftest make-sequence.40
  - [ ] (deftest make-sequence.41
  - [ ] (deftest make-sequence.42
  - [ ] (deftest make-sequence.43
  - [ ] (deftest make-sequence.44
  - [ ] (deftest make-sequence.45
  - [ ] (deftest make-sequence.46
  - [ ] (deftest make-sequence.47
  - [ ] (deftest make-sequence.48
  - [ ] (deftest make-sequence.49
  - [ ] (deftest make-sequence.50
  - [ ] (deftest make-sequence.51
  - [ ] (deftest make-sequence.52
  - [ ] (deftest make-sequence.53
  - [ ] (deftest make-sequence.54
  - [ ] (deftest make-sequence.55
  - [ ] (deftest make-sequence.56
  - [ ] (deftest make-sequence.57
  - [ ] (deftest make-sequence.58
  - [ ] (deftest make-sequence.allow-other-keys.1
  - [ ] (deftest make-sequence.allow-other-keys.2
  - [ ] (deftest make-sequence.allow-other-keys.3
  - [ ] (deftest make-sequence.allow-other-keys.4
  - [ ] (deftest make-sequence.allow-other-keys.5
  - [ ] (deftest make-sequence.keywords.6
  - [ ] (deftest make-sequence.error.1
  - [ ] (deftest make-sequence.error.2
  - [ ] (deftest make-sequence.error.3
  - [ ] (deftest make-sequence.error.4
  - [ ] (deftest make-sequence.error.5
  - [ ] (deftest make-sequence.error.6
  - [ ] (deftest make-sequence.error.7
  - [ ] (deftest make-sequence.error.8
  - [ ] (deftest make-sequence.error.9
  - [ ] (deftest make-sequence.error.10
  - [ ] (deftest make-sequence.error.11
  - [ ] (deftest make-sequence.error.12
  - [ ] (deftest make-sequence.error.13
  - [ ] (deftest make-sequence.error.14
  - [ ] (deftest make-sequence.error.15
  - [ ] (deftest make-sequence.error.16
  - [ ] (deftest make-sequence.order.1
  - [ ] (deftest make-sequence.order.2
  - [ ] (def-fold-test make-sequence.fold.1
  - [ ] (def-fold-test make-sequence.fold.2
  - [ ] (def-fold-test make-sequence.fold.3
  - [ ] (def-fold-test make-sequence.fold.4
**** find-if.lsp [0%]
  - [ ] (deftest find-if-list.1
  - [ ] (deftest find-if-list.2
  - [ ] (deftest find-if-list.2a
  - [ ] (deftest find-if-list.3
  - [ ] (deftest find-if-list.4
  - [ ] (deftest find-if-list.5
  - [ ] (deftest find-if-list.6
  - [ ] (deftest find-if-list.7
  - [ ] (deftest find-if-list.8
  - [ ] (deftest find-if-list.9
  - [ ] (deftest find-if-list.10
  - [ ] (deftest find-if-list.11
  - [ ] (deftest find-if-list.12
  - [ ] (deftest find-if-list.13
  - [ ] (deftest find-if-list.14
  - [ ] (deftest find-if-list.15
  - [ ] (deftest find-if-list.16
  - [ ] (deftest find-if-list.17
  - [ ] (deftest find-if-list.18
  - [ ] (deftest find-if-vector.1
  - [ ] (deftest find-if-vector.2
  - [ ] (deftest find-if-vector.2a
  - [ ] (deftest find-if-vector.3
  - [ ] (deftest find-if-vector.4
  - [ ] (deftest find-if-vector.5
  - [ ] (deftest find-if-vector.6
  - [ ] (deftest find-if-vector.7
  - [ ] (deftest find-if-vector.8
  - [ ] (deftest find-if-vector.9
  - [ ] (deftest find-if-vector.10
  - [ ] (deftest find-if-vector.11
  - [ ] (deftest find-if-vector.12
  - [ ] (deftest find-if-vector.13
  - [ ] (deftest find-if-vector.14
  - [ ] (deftest find-if-vector.15
  - [ ] (deftest find-if-vector.16
  - [ ] (deftest find-if-vector.17
  - [ ] (deftest find-if-vector.18
  - [ ] (deftest find-if-vector.19
  - [ ] (deftest find-if-bit-vector.1
  - [ ] (deftest find-if-bit-vector.2
  - [ ] (deftest find-if-bit-vector.3
  - [ ] (deftest find-if-bit-vector.4
  - [ ] (deftest find-if-bit-vector.5
  - [ ] (deftest find-if-bit-vector.6
  - [ ] (deftest find-if-bit-vector.7
  - [ ] (deftest find-if-string.1
  - [ ] (deftest find-if-string.2
  - [ ] (deftest find-if-string.2a
  - [ ] (deftest find-if-string.3
  - [ ] (deftest find-if-string.3a
  - [ ] (deftest find-if-string.4
  - [ ] (deftest find-if-string.5
  - [ ] (deftest find-if-string.6
  - [ ] (deftest find-if-string.7
  - [ ] (deftest find-if-string.8
  - [ ] (deftest find-if-string.9
  - [ ] (deftest find-if-string.10
  - [ ] (deftest find-if-string.11
  - [ ] (deftest find-if-string.12
  - [ ] (deftest find-if-string.13
  - [ ] (deftest find-if-string.14
  - [ ] (deftest find-if-string.15
  - [ ] (deftest find-if-string.16
  - [ ] (deftest find-if-string.17
  - [ ] (deftest find-if-string.18
  - [ ] (deftest find-if-string.19
  - [ ] (deftest find-if-string.20
  - [ ] (deftest find-if.allow-other-keys.1
  - [ ] (deftest find-if.allow-other-keys.2
  - [ ] (deftest find-if.allow-other-keys.3
  - [ ] (deftest find-if.keywords.4
  - [ ] (deftest find-if.allow-other-keys.5
  - [ ] (deftest find-if.error.1
  - [ ] (deftest find-if.error.4
  - [ ] (deftest find-if.error.5
  - [ ] (deftest find-if.error.6
  - [ ] (deftest find-if.error.7
  - [ ] (deftest find-if.error.8
  - [ ] (deftest find-if.error.9
  - [ ] (deftest find-if.error.10
  - [ ] (deftest find-if.error.11
  - [ ] (deftest find-if.error.12
  - [ ] (deftest find-if.error.13
  - [ ] (deftest find-if.error.14
  - [ ] (deftest find-if.error.15
  - [ ] (deftest find-if.order.1
  - [ ] (deftest find-if.order.2
  - [ ] (deftest find-if.order.3
**** remove-duplicates.lsp [0%]
  - [ ] (deftest random-remove-duplicates
  - [ ] (deftest random-delete-duplicates
  - [ ] (deftest remove-duplicates.1
  - [ ] (deftest delete-duplicates.1
  - [ ] (def-fold-test remove-duplicates.fold.1 (remove-duplicates '(1 2 3 3)))
  - [ ] (def-fold-test remove-duplicates.fold.2 (remove-duplicates #(1 2 3 3)))
  - [ ] (def-fold-test remove-duplicates.fold.3 (remove-duplicates #*0011))
  - [ ] (def-fold-test remove-duplicates.fold.4 (remove-duplicates "1233"))
  - [ ] (deftest remove-duplicates.order.1
  - [ ] (deftest remove-duplicates.order.2
  - [ ] (deftest remove-duplicates.allow-other-keys.1
  - [ ] (deftest remove-duplicates.allow-other-keys.2
  - [ ] (deftest remove-duplicates.allow-other-keys.3
  - [ ] (deftest remove-duplicates.allow-other-keys.4
  - [ ] (deftest remove-duplicates.allow-other-keys.5
  - [ ] (deftest remove-duplicates.allow-other-keys.6
  - [ ] (deftest remove-duplicates.allow-other-keys.7
  - [ ] (deftest remove-duplicates.allow-other-keys.8
  - [ ] (deftest remove-duplicates.keywords.1
  - [ ] (deftest delete-duplicates.allow-other-keys.1
  - [ ] (deftest delete-duplicates.allow-other-keys.2
  - [ ] (deftest delete-duplicates.allow-other-keys.3
  - [ ] (deftest delete-duplicates.allow-other-keys.4
  - [ ] (deftest delete-duplicates.allow-other-keys.5
  - [ ] (deftest delete-duplicates.allow-other-keys.6
  - [ ] (deftest delete-duplicates.allow-other-keys.7
  - [ ] (deftest delete-duplicates.allow-other-keys.8
  - [ ] (deftest delete-duplicates.keywords.1
  - [ ] (deftest delete-duplicates.order.1
  - [ ] (deftest delete-duplicates.order.2
  - [ ] (deftest remove-duplicates.error.1
  - [ ] (deftest remove-duplicates.error.2
  - [ ] (deftest remove-duplicates.error.3
  - [ ] (deftest remove-duplicates.error.4
  - [ ] (deftest remove-duplicates.error.5
  - [ ] (deftest remove-duplicates.error.6
  - [ ] (deftest remove-duplicates.error.7
  - [ ] (deftest remove-duplicates.error.8
  - [ ] (deftest remove-duplicates.error.9
  - [ ] (deftest remove-duplicates.error.10
  - [ ] (deftest delete-duplicates.error.1
  - [ ] (deftest delete-duplicates.error.2
  - [ ] (deftest delete-duplicates.error.3
  - [ ] (deftest delete-duplicates.error.4
  - [ ] (deftest delete-duplicates.error.5
  - [ ] (deftest delete-duplicates.error.6
  - [ ] (deftest delete-duplicates.error.7
  - [ ] (deftest delete-duplicates.error.8
  - [ ] (deftest delete-duplicates.error.9
  - [ ] (deftest delete-duplicates.error.10
  - [ ] (deftest remove-duplicates.string.1
  - [ ] (deftest remove-duplicates.string.2
  - [ ] (deftest delete-duplicates.string.1
  - [ ] (deftest delete-duplicates.string.2
  - [ ] (deftest remove-duplicates.2
  - [ ] (deftest remove-duplicates.2a
  - [ ] (deftest remove-duplicates.3
  - [ ] (deftest remove-duplicates.3a
  - [ ] (deftest remove-duplicates.4
  - [ ] (deftest remove-duplicates.5
  - [ ] (deftest delete-duplicates.2
  - [ ] (deftest delete-duplicates.2a
  - [ ] (deftest delete-duplicates.3
  - [ ] (deftest delete-duplicates.3a
  - [ ] (deftest delete-duplicates.4
  - [ ] (deftest delete-duplicates.5
**** substitute.lsp [0%]
  - [ ] (deftest substitute-list.1
  - [ ] (deftest substitute-list.2
  - [ ] (deftest substitute-list.3
  - [ ] (deftest substitute-list.4
  - [ ] (deftest substitute-list.5
  - [ ] (deftest substitute-list.6
  - [ ] (deftest substitute-list.7
  - [ ] (deftest substitute-list.8
  - [ ] (deftest substitute-list.9
  - [ ] (deftest substitute-list.10
  - [ ] (deftest substitute-list.11
  - [ ] (deftest substitute-list.12
  - [ ] (deftest substitute-list.13
  - [ ] (deftest substitute-list.14
  - [ ] (deftest substitute-list.15
  - [ ] (deftest substitute-list.16
  - [ ] (deftest substitute-list.17
  - [ ] (deftest substitute-list.18
  - [ ] (deftest substitute-list.19
  - [ ] (deftest substitute-list.20
  - [ ] (deftest substitute-list.21
  - [ ] (deftest substitute-list.22
  - [ ] (deftest substitute-list.23
  - [ ] (deftest substitute-list.24
  - [ ] (deftest substitute-list.25
  - [ ] (deftest substitute-list.26
  - [ ] (deftest substitute-list.27
  - [ ] (deftest substitute-vector.1
  - [ ] (deftest substitute-vector.2
  - [ ] (deftest substitute-vector.3
  - [ ] (deftest substitute-vector.4
  - [ ] (deftest substitute-vector.5
  - [ ] (deftest substitute-vector.6
  - [ ] (deftest substitute-vector.7
  - [ ] (deftest substitute-vector.8
  - [ ] (deftest substitute-vector.9
  - [ ] (deftest substitute-vector.10
  - [ ] (deftest substitute-vector.11
  - [ ] (deftest substitute-vector.12
  - [ ] (deftest substitute-vector.13
  - [ ] (deftest substitute-vector.14
  - [ ] (deftest substitute-vector.15
  - [ ] (deftest substitute-vector.16
  - [ ] (deftest substitute-vector.17
  - [ ] (deftest substitute-vector.18
  - [ ] (deftest substitute-vector.19
  - [ ] (deftest substitute-vector.20
  - [ ] (deftest substitute-vector.21
  - [ ] (deftest substitute-vector.22
  - [ ] (deftest substitute-vector.23
  - [ ] (deftest substitute-vector.24
  - [ ] (deftest substitute-vector.25
  - [ ] (deftest substitute-vector.26
  - [ ] (deftest substitute-vector.27
  - [ ] (deftest substitute-vector.28
  - [ ] (deftest substitute-vector.29
  - [ ] (deftest substitute-vector.30
  - [ ] (deftest substitute-vector.31
  - [ ] (deftest substitute-vector.32
  - [ ] (deftest substitute-vector.33
  - [ ] (deftest substitute-string.1
  - [ ] (deftest substitute-string.2
  - [ ] (deftest substitute-string.3
  - [ ] (deftest substitute-string.4
  - [ ] (deftest substitute-string.5
  - [ ] (deftest substitute-string.6
  - [ ] (deftest substitute-string.7
  - [ ] (deftest substitute-string.8
  - [ ] (deftest substitute-string.9
  - [ ] (deftest substitute-string.10
  - [ ] (deftest substitute-string.11
  - [ ] (deftest substitute-string.12
  - [ ] (deftest substitute-string.13
  - [ ] (deftest substitute-string.14
  - [ ] (deftest substitute-string.15
  - [ ] (deftest substitute-string.16
  - [ ] (deftest substitute-string.17
  - [ ] (deftest substitute-string.18
  - [ ] (deftest substitute-string.19
  - [ ] (deftest substitute-string.20
  - [ ] (deftest substitute-string.21
  - [ ] (deftest substitute-string.22
  - [ ] (deftest substitute-string.23
  - [ ] (deftest substitute-string.24
  - [ ] (deftest substitute-string.25
  - [ ] (deftest substitute-string.26
  - [ ] (deftest substitute-string.27
  - [ ] (deftest substitute-string.28
  - [ ] (deftest substitute-string.29
  - [ ] (deftest substitute-string.30
  - [ ] (deftest substitute-string.31
  - [ ] (deftest substitute-string.32
  - [ ] (deftest substitute-bit-vector.1
  - [ ] (deftest substitute-bit-vector.2
  - [ ] (deftest substitute-bit-vector.3
  - [ ] (deftest substitute-bit-vector.4
  - [ ] (deftest substitute-bit-vector.5
  - [ ] (deftest substitute-bit-vector.6
  - [ ] (deftest substitute-bit-vector.7
  - [ ] (deftest substitute-bit-vector.8
  - [ ] (deftest substitute-bit-vector.9
  - [ ] (deftest substitute-bit-vector.10
  - [ ] (deftest substitute-bit-vector.11
  - [ ] (deftest substitute-bit-vector.12
  - [ ] (deftest substitute-bit-vector.13
  - [ ] (deftest substitute-bit-vector.14
  - [ ] (deftest substitute-bit-vector.15
  - [ ] (deftest substitute-bit-vector.16
  - [ ] (deftest substitute-bit-vector.17
  - [ ] (deftest substitute-bit-vector.18
  - [ ] (deftest substitute-bit-vector.19
  - [ ] (deftest substitute-bit-vector.20
  - [ ] (deftest substitute-bit-vector.21
  - [ ] (deftest substitute-bit-vector.22
  - [ ] (deftest substitute-bit-vector.23
  - [ ] (deftest substitute-bit-vector.24
  - [ ] (deftest substitute-bit-vector.25
  - [ ] (deftest substitute-bit-vector.26
  - [ ] (deftest substitute-bit-vector.27
  - [ ] (deftest substitute-bit-vector.28
  - [ ] (deftest substitute-bit-vector.29
  - [ ] (deftest substitute-bit-vector.30
  - [ ] (deftest substitute-bit-vector.31
  - [ ] (deftest substitute-bit-vector.32
  - [ ] (deftest substitute-bit-vector.33
  - [ ] (deftest substitute.order.1
  - [ ] (deftest substitute.order.2
  - [ ] (deftest substitute.allow-other-keys.1
  - [ ] (deftest substitute.allow-other-keys.2
  - [ ] (deftest substitute.allow-other-keys.3
  - [ ] (deftest substitute.allow-other-keys.4
  - [ ] (deftest substitute.allow-other-keys.5
  - [ ] (deftest substitute.keywords.6
  - [ ] (deftest substitute.allow-other-keys.7
  - [ ] (deftest substitute.allow-other-keys.8
  - [ ] (def-fold-test substitute.fold.1 (substitute 'z 'b '(a b c)))
  - [ ] (def-fold-test substitute.fold.2 (substitute 'z 'b #(a b c)))
  - [ ] (def-fold-test substitute.fold.3 (substitute 0 1 #*001101))
  - [ ] (def-fold-test substitute.fold.4 (substitute #\a #\b "abcebadfke"))
  - [ ] (deftest substitute.error.1
  - [ ] (deftest substitute.error.2
  - [ ] (deftest substitute.error.3
  - [ ] (deftest substitute.error.4
  - [ ] (deftest substitute.error.5
  - [ ] (deftest substitute.error.6
  - [ ] (deftest substitute.error.7
  - [ ] (deftest substitute.error.8
  - [ ] (deftest substitute.error.9
  - [ ] (deftest substitute.error.10
  - [ ] (deftest substitute.error.11
  - [ ] (deftest substitute.error.12
**** nreverse.lsp [0%]
  - [ ] (deftest nreverse-list.1
  - [ ] (deftest nreverse-list.2
  - [ ] (deftest nreverse-vector.1
  - [ ] (deftest nreverse-vector.2
  - [ ] (deftest nreverse-vector.4
  - [ ] (deftest nreverse-vector.5
  - [ ] (deftest nreverse-vector.6
  - [ ] (deftest nreverse-vector.7
  - [ ] (deftest nreverse-vector.8
  - [ ] (deftest nreverse-vector.9
  - [ ] (deftest nreverse-vector.10
  - [ ] (deftest nreverse-bit-vector.1
  - [ ] (deftest nreverse-bit-vector.2
  - [ ] (deftest nreverse-bit-vector.3
  - [ ] (deftest nreverse-string.1
  - [ ] (deftest nreverse-string.2
  - [ ] (deftest nreverse-string.3
  - [ ] (deftest nreverse-string.4
  - [ ] (deftest nreverse-string.5
  - [ ] (deftest nreverse.order.1
  - [ ] (deftest nreverse.error.1
  - [ ] (deftest nreverse.error.6
  - [ ] (deftest nreverse.error.7
  - [ ] (deftest nreverse.error.8
**** fill-strings.lsp [0%]
  - [ ] (deftest array-string-fill.1
  - [ ] (deftest array-string-fill.2
  - [ ] (deftest array-string-fill.3
  - [ ] (deftest array-string-fill.4
  - [ ] (deftest array-string-fill.5
**** elt.lsp [0%]
  - [ ] (deftest elt.1
  - [ ] (deftest elt.1a
  - [ ] (deftest elt.1b
  - [ ] (deftest elt.2
  - [ ] (deftest elt.3 (elt '(a b c d e) 0) a)
  - [ ] (deftest elt.4 (elt '(a b c d e) 2) c)
  - [ ] (deftest elt.5 (elt '(a b c d e) 4) e)
  - [ ] (deftest elt.5a
  - [ ] (deftest elt.6
  - [ ] (deftest elt.7
  - [ ] (deftest elt.8
  - [ ] (deftest elt.9
  - [ ] (deftest elt.10
  - [ ] (deftest elt.11
  - [ ] (deftest elt.12
  - [ ] (deftest elt.13
  - [ ] (deftest elt.14
  - [ ] (deftest elt.15
  - [ ] (deftest elt.16
  - [ ] (deftest elt.17
  - [ ] (deftest elt.18
  - [ ] (deftest elt.19
  - [ ] (deftest elt.order.1
  - [ ] (deftest elt.order.2
  - [ ] (deftest elt-v.1
  - [ ] (deftest elt-v.3
  - [ ] (deftest elt-v.4
  - [ ] (deftest elt-v.5
  - [ ] (deftest elt-v.6
  - [ ] (deftest elt-v.7
  - [ ] (deftest elt-v.8
  - [ ] (deftest elt-v.9
  - [ ] (deftest elt-v.10
  - [ ] (deftest elt-v.11
  - [ ] (deftest elt-v.12
  - [ ] (deftest elt-v.13
  - [ ] (deftest elt-adj-array.1
  - [ ] (deftest elt-adj-array.3
  - [ ] (deftest elt-adj-array.4
  - [ ] (deftest elt-adj-array.5
  - [ ] (deftest elt-adj-array.6
  - [ ] (deftest elt-adj-array.7
  - [ ] (deftest elt-adj-array.8
  - [ ] (deftest elt-adj-array.9
  - [ ] (deftest elt-adj-array.10
  - [ ] (deftest elt-adj-array.11
  - [ ] (deftest elt-adj-array.12
  - [ ] (deftest elt-adj-array.13
  - [ ] (deftest elt-displaced-array.1
  - [ ] (deftest elt-displaced-array.2
  - [ ] (deftest elt-displaced-array.3
  - [ ] (deftest elt-fill-pointer.1
  - [ ] (deftest elt-fill-pointer.2
  - [ ] (deftest elt-fill-pointer.3
  - [ ] (deftest elt-fill-pointer.4
  - [ ] (deftest elt-fill-pointer.5
  - [ ] (deftest elt-fill-pointer.6
  - [ ] (deftest elt-fill-pointer.7
  - [ ] (deftest elt-fill-pointer.8
  - [ ] (deftest elt.special-strings.1
  - [ ] (deftest elt.special-vectors.1
  - [ ] (deftest elt.special-vectors.2
  - [ ] (deftest elt.special-vectors.3
  - [ ] (deftest elt.special-vectors.4
  - [ ] (deftest elt.error.1
  - [ ] (deftest elt.error.2
  - [ ] (deftest elt.error.3
  - [ ] (deftest elt.error.4
  - [ ] (deftest elt.error.5
**** search-string.lsp [0%]
  - [ ] (deftest search-string.1
  - [ ] (deftest search-string.2
  - [ ] (deftest search-string.3
  - [ ] (deftest search-string.4
  - [ ] (deftest search-string.5
  - [ ] (deftest search-string.6
  - [ ] (deftest search-string.7
  - [ ] (deftest search-string.8
  - [ ] (deftest search-string.9
  - [ ] (deftest search-string.10
  - [ ] (deftest search-string.11
  - [ ] (deftest search-string.13
  - [ ] (deftest search-string.14
  - [ ] (deftest search-string.15
  - [ ] (deftest search-string.16
  - [ ] (deftest search-string.17
  - [ ] (deftest search-string.18
  - [ ] (deftest search-string.19
  - [ ] (deftest search-string.20
**** concatenate.lsp [0%]
  - [ ] (deftest concatenate.1
  - [ ] (deftest concatenate.2
  - [ ] (deftest concatenate.3
  - [ ] (deftest concatenate.4
  - [ ] (deftest concatenate.5
  - [ ] (deftest concatenate.6
  - [ ] (deftest concatenate.7
  - [ ] (deftest concatenate.8
  - [ ] (deftest concatenate.9
  - [ ] (deftest concatenate.10
  - [ ] (deftest concatenate.11
  - [ ] (deftest concatenate.12
  - [ ] (deftest concatenate.13
  - [ ] (deftest concatenate.14
  - [ ] (deftest concatenate.15
  - [ ] (deftest concatenate.16
  - [ ] (deftest concatenate.17
  - [ ] (deftest concatenate.18
  - [ ] (deftest concatenate.18a
  - [ ] (deftest concatenate.18b
  - [ ] (deftest concatenate.18c
  - [ ] (deftest concatenate.18d
  - [ ] (deftest concatenate.19
  - [ ] (deftest concatenate.20
  - [ ] (deftest concatenate.21
  - [ ] (deftest concatenate.22
  - [ ] (deftest concatenate.23
  - [ ] (deftest concatenate.24
  - [ ] (deftest concatenate.25
  - [ ] (deftest concatenate.26
  - [ ] (deftest concatenate.27
  - [ ] (deftest concatenate.28
  - [ ] (deftest concatenate.29
  - [ ] (deftest concatenate.30
  - [ ] (deftest concatenate.30a
  - [ ] (deftest concatenate.31
  - [ ] (deftest concatenate.32
  - [ ] (deftest concatenate.33
  - [ ] (deftest concatenate.34
  - [ ] (deftest concatenate.35
  - [ ] (deftest concatenate.36
  - [ ] (deftest concatenate.37
  - [ ] (deftest concatenate.38
  - [ ] (deftest concatenate.39
  - [ ] (deftest concatenate.40
  - [ ] (deftest concatenate.order.1
  - [ ] (deftest concatenate.order.2
  - [ ] (def-fold-test concatenate.fold.1 (concatenate 'list '(a b) '(c d)))
  - [ ] (def-fold-test concatenate.fold.2 (concatenate 'vector '(a b) '(c d)))
  - [ ] (def-fold-test concatenate.fold.3 (concatenate 'bit-vector '(0 0) '(1 0 1)))
  - [ ] (def-fold-test concatenate.fold.4 (concatenate 'string "ab" "cd"))
  - [ ] (def-fold-test concatenate.fold.5 (concatenate 'list '(a b c d)))
  - [ ] (def-fold-test concatenate.fold.6 (concatenate 'vector #(a b c d)))
  - [ ] (def-fold-test concatenate.fold.7 (concatenate 'bit-vector #*110101101))
  - [ ] (def-fold-test concatenate.fold.8 (concatenate 'string "abcdef"))
  - [ ] (deftest concatenate.error.1
  - [ ] (deftest concatenate.error.2
  - [ ] (deftest concatenate.error.3
  - [ ] (deftest concatenate.error.4
  - [ ] (deftest concatenate.error.5
  - [ ] (deftest concatenate.error.6
**** count-if-not.lsp [0%]
  - [ ] (deftest count-if-not-list.1
  - [ ] (deftest count-if-not-list.2
  - [ ] (deftest count-if-not-list.3
  - [ ] (deftest count-if-not-list.4
  - [ ] (deftest count-if-not-list.5
  - [ ] (deftest count-if-not-list.6
  - [ ] (deftest count-if-not-list.8
  - [ ] (deftest count-if-not-list.9
  - [ ] (deftest count-if-not-list.10
  - [ ] (deftest count-if-not-list.11
  - [ ] (deftest count-if-not-list.12
  - [ ] (deftest count-if-not-list.13
  - [ ] (deftest count-if-not-list.14
  - [ ] (deftest count-if-not-list.15
  - [ ] (deftest count-if-not-list.16
  - [ ] (deftest count-if-not-vector.1
  - [ ] (deftest count-if-not-vector.2
  - [ ] (deftest count-if-not-vector.3
  - [ ] (deftest count-if-not-vector.4
  - [ ] (deftest count-if-not-vector.5
  - [ ] (deftest count-if-not-vector.6
  - [ ] (deftest count-if-not-vector.8
  - [ ] (deftest count-if-not-vector.9
  - [ ] (deftest count-if-not-vector.10
  - [ ] (deftest count-if-not-vector.11
  - [ ] (deftest count-if-not-vector.12
  - [ ] (deftest count-if-not-vector.13
  - [ ] (deftest count-if-not-vector.14
  - [ ] (deftest count-if-not-vector.15
  - [ ] (deftest count-if-not-vector.16
  - [ ] (deftest count-if-not-nonsimple-vector.1
  - [ ] (deftest count-if-not-nonsimple-vector.2
  - [ ] (deftest count-if-not-nonsimple-vector.3
  - [ ] (deftest count-if-not-nonsimple-vector.4
  - [ ] (deftest count-if-not-nonsimple-vector.5
  - [ ] (deftest count-if-not-nonsimple-vector.6
  - [ ] (deftest count-if-not-nonsimple-vector.8
  - [ ] (deftest count-if-not-nonsimple-vector.9
  - [ ] (deftest count-if-not-nonsimple-vector.10
  - [ ] (deftest count-if-not-nonsimple-vector.11
  - [ ] (deftest count-if-not-nonsimple-vector.12
  - [ ] (deftest count-if-not-nonsimple-vector.13
  - [ ] (deftest count-if-not-nonsimple-vector.14
  - [ ] (deftest count-if-not-nonsimple-vector.15
  - [ ] (deftest count-if-not-nonsimple-vector.16
  - [ ] (deftest count-if-not-nonsimple-vector.17
  - [ ] (deftest count-if-not.special-vector.2
  - [ ] (deftest count-if-not.special-vector.3
  - [ ] (deftest count-if-not.special-vector.4
  - [ ] (deftest count-if-not-bit-vector.1
  - [ ] (deftest count-if-not-bit-vector.2
  - [ ] (deftest count-if-not-bit-vector.3
  - [ ] (deftest count-if-not-bit-vector.4
  - [ ] (deftest count-if-not-bit-vector.5
  - [ ] (deftest count-if-not-bit-vector.6
  - [ ] (deftest count-if-not-bit-vector.8
  - [ ] (deftest count-if-not-bit-vector.10
  - [ ] (deftest count-if-not-bit-vector.11
  - [ ] (deftest count-if-not-bit-vector.12
  - [ ] (deftest count-if-not-bit-vector.13
  - [ ] (deftest count-if-not-bit-vector.14
  - [ ] (deftest count-if-not-bit-vector.15
  - [ ] (deftest count-if-not-bit-vector.16
  - [ ] (deftest count-if-not-bit-vector.17
  - [ ] (deftest count-if-not-string.1
  - [ ] (deftest count-if-not-string.2
  - [ ] (deftest count-if-not-string.3
  - [ ] (deftest count-if-not-string.4
  - [ ] (deftest count-if-not-string.5
  - [ ] (deftest count-if-not-string.6
  - [ ] (deftest count-if-not-string.8
  - [ ] (deftest count-if-not-string.11
  - [ ] (deftest count-if-not-string.12
  - [ ] (deftest count-if-not-string.13
  - [ ] (deftest count-if-not-string.14
  - [ ] (deftest count-if-not-string.15
  - [ ] (deftest count-if-not-string.16
  - [ ] (deftest count-if-not-string.17
  - [ ] (deftest count-if-not-string.18
  - [ ] (deftest count-if-not.order.1
  - [ ] (deftest count-if-not.order.2
  - [ ] (deftest count-if-not.keywords.1
  - [ ] (deftest count-if-not.keywords.2
  - [ ] (deftest count-if-not.keywords.3
  - [ ] (deftest count-if-not.keywords.4
  - [ ] (deftest count-if-not.allow-other-keys.5
  - [ ] (deftest count-if-not.error.1
  - [ ] (deftest count-if-not.error.4
  - [ ] (deftest count-if-not.error.5
  - [ ] (deftest count-if-not.error.6
  - [ ] (deftest count-if-not.error.7
  - [ ] (deftest count-if-not.error.8
  - [ ] (deftest count-if-not.error.9
  - [ ] (deftest count-if-not.error.10
  - [ ] (deftest count-if-not.error.11
  - [ ] (deftest count-if-not.error.12
  - [ ] (deftest count-if-not.error.13
  - [ ] (deftest count-if-not.error.14
  - [ ] (deftest count-if-not.error.15
**** mismatch.lsp [0%]
  - [ ] (deftest mismatch-list.1
  - [ ] (deftest mismatch-list.2
  - [ ] (deftest mismatch-list.3
  - [ ] (deftest mismatch-list.4
  - [ ] (deftest mismatch-list.5
  - [ ] (deftest mismatch-list.6
  - [ ] (deftest mismatch-list.7
  - [ ] (deftest mismatch-list.8
  - [ ] (deftest mismatch-list.9
  - [ ] (deftest mismatch-list.10
  - [ ] (deftest mismatch-list.11
  - [ ] (deftest mismatch-list.12
  - [ ] (deftest mismatch-list.13
  - [ ] (deftest mismatch-list.14
  - [ ] (deftest mismatch-list.15
  - [ ] (deftest mismatch-list.16
  - [ ] (deftest mismatch-list.17
  - [ ] (deftest mismatch-list.18
  - [ ] (deftest mismatch-list.19
  - [ ] (deftest mismatch-list.20
  - [ ] (deftest mismatch-list.21
  - [ ] (deftest mismatch-list.22
  - [ ] (deftest mismatch-vector.1
  - [ ] (deftest mismatch-vector.2
  - [ ] (deftest mismatch-vector.3
  - [ ] (deftest mismatch-vector.4
  - [ ] (deftest mismatch-vector.5
  - [ ] (deftest mismatch-vector.6
  - [ ] (deftest mismatch-vector.7
  - [ ] (deftest mismatch-vector.8
  - [ ] (deftest mismatch-vector.9
  - [ ] (deftest mismatch-vector.10
  - [ ] (deftest mismatch-vector.11
  - [ ] (deftest mismatch-vector.12
  - [ ] (deftest mismatch-vector.13
  - [ ] (deftest mismatch-vector.14
  - [ ] (deftest mismatch-vector.15
  - [ ] (deftest mismatch-vector.16
  - [ ] (deftest mismatch-vector.17
  - [ ] (deftest mismatch-vector.18
  - [ ] (deftest mismatch-vector.19
  - [ ] (deftest mismatch-vector.20
  - [ ] (deftest mismatch-vector.21
  - [ ] (deftest mismatch-vector.22
  - [ ] (deftest mismatch-vector.23
  - [ ] (deftest mismatch-vector.24
  - [ ] (deftest mismatch-bit-vector.1
  - [ ] (deftest mismatch-bit-vector.1a
  - [ ] (deftest mismatch-bit-vector.1b
  - [ ] (deftest mismatch-bit-vector.2
  - [ ] (deftest mismatch-bit-vector.2a
  - [ ] (deftest mismatch-bit-vector.2b
  - [ ] (deftest mismatch-bit-vector.3
  - [ ] (deftest mismatch-bit-vector.4
  - [ ] (deftest mismatch-bit-vector.5
  - [ ] (deftest mismatch-bit-vector.6
  - [ ] (deftest mismatch-bit-vector.7
  - [ ] (deftest mismatch-bit-vector.7a
  - [ ] (deftest mismatch-bit-vector.7b
  - [ ] (deftest mismatch-bit-vector.8
  - [ ] (deftest mismatch-bit-vector.8a
  - [ ] (deftest mismatch-bit-vector.9
  - [ ] (deftest mismatch-bit-vector.9a
  - [ ] (deftest mismatch-bit-vector.9b
  - [ ] (deftest mismatch-bit-vector.10
  - [ ] (deftest mismatch-bit-vector.10a
  - [ ] (deftest mismatch-bit-vector.11
  - [ ] (deftest mismatch-bit-vector.11a
  - [ ] (deftest mismatch-bit-vector.11b
  - [ ] (deftest mismatch-bit-vector.11c
  - [ ] (deftest mismatch-bit-vector.11d
  - [ ] (deftest mismatch-bit-vector.12
  - [ ] (deftest mismatch-bit-vector.12a
  - [ ] (deftest mismatch-bit-vector.12b
  - [ ] (deftest mismatch-bit-vector.13
  - [ ] (deftest mismatch-bit-vector.14
  - [ ] (deftest mismatch-bit-vector.15
  - [ ] (deftest mismatch-bit-vector.16
  - [ ] (deftest mismatch-bit-vector.17
  - [ ] (deftest mismatch-bit-vector.18
  - [ ] (deftest mismatch-bit-vector.19
  - [ ] (deftest mismatch-bit-vector.20
  - [ ] (deftest mismatch-bit-vector.21
  - [ ] (deftest mismatch-bit-vector.22
  - [ ] (deftest mismatch-bit-vector.23
  - [ ] (deftest mismatch-bit-vector.24
  - [ ] (deftest mismatch-string.1
  - [ ] (deftest mismatch-string.1a
  - [ ] (deftest mismatch-string.1b
  - [ ] (deftest mismatch-string.2
  - [ ] (deftest mismatch-string.2a
  - [ ] (deftest mismatch-string.2b
  - [ ] (deftest mismatch-string.3
  - [ ] (deftest mismatch-string.4
  - [ ] (deftest mismatch-string.5
  - [ ] (deftest mismatch-string.6
  - [ ] (deftest mismatch-string.7
  - [ ] (deftest mismatch-string.7a
  - [ ] (deftest mismatch-string.7b
  - [ ] (deftest mismatch-string.8
  - [ ] (deftest mismatch-string.8a
  - [ ] (deftest mismatch-string.9
  - [ ] (deftest mismatch-string.9a
  - [ ] (deftest mismatch-string.9b
  - [ ] (deftest mismatch-string.10
  - [ ] (deftest mismatch-string.10a
  - [ ] (deftest mismatch-string.11
  - [ ] (deftest mismatch-string.11a
  - [ ] (deftest mismatch-string.11b
  - [ ] (deftest mismatch-string.11c
  - [ ] (deftest mismatch-string.11d
  - [ ] (deftest mismatch-string.11e
  - [ ] (deftest mismatch-string.12
  - [ ] (deftest mismatch-string.12a
  - [ ] (deftest mismatch-string.12b
  - [ ] (deftest mismatch-string.13
  - [ ] (deftest mismatch-string.14
  - [ ] (deftest mismatch-string.15
  - [ ] (deftest mismatch-string.16
  - [ ] (deftest mismatch-string.17
  - [ ] (deftest mismatch-string.18
  - [ ] (deftest mismatch-string.19
  - [ ] (deftest mismatch-string.20
  - [ ] (deftest mismatch-string.20a
  - [ ] (deftest mismatch-string.21
  - [ ] (deftest mismatch-string.22
  - [ ] (deftest mismatch-string.23
  - [ ] (deftest mismatch-string.24
  - [ ] (deftest mistmatch-string.25
  - [ ] (deftest mismatch.allow-other-keys.1
  - [ ] (deftest mismatch.allow-other-keys.2
  - [ ] (deftest mismatch.allow-other-keys.3
  - [ ] (deftest mismatch.allow-other-keys.4
  - [ ] (deftest mismatch.allow-other-keys.5
  - [ ] (deftest mismatch.keywords.6
  - [ ] (deftest mismatch.allow-other-keys.7
  - [ ] (deftest mismatch.order.1
  - [ ] (deftest mismatch.order.2
  - [ ] (deftest mismatch.order.3
  - [ ] (deftest mismatch.error.1
  - [ ] (deftest mismatch.error.2
  - [ ] (deftest mismatch.error.3
  - [ ] (deftest mismatch.error.4
  - [ ] (deftest mismatch.error.5
  - [ ] (deftest mismatch.error.6
  - [ ] (deftest mismatch.error.7
  - [ ] (deftest mismatch.error.8
  - [ ] (deftest mismatch.error.9
  - [ ] (deftest mismatch.error.10
**** copy-seq.lsp [0%]
  - [ ] (deftest copy-seq.1
  - [ ] (deftest copy-seq.2
  - [ ] (deftest copy-seq.3
  - [ ] (deftest copy-seq.4
  - [ ] (deftest copy-seq.5
  - [ ] (deftest copy-seq.6
  - [ ] (deftest copy-seq.7
  - [ ] (deftest copy-seq.8
  - [ ] (deftest copy-seq.9
  - [ ] (deftest copy-seq.10
  - [ ] (deftest copy-seq.11
  - [ ] (deftest copy-seq.12
  - [ ] (deftest copy-seq.13
  - [ ] (deftest copy-seq.14
  - [ ] (deftest copy-seq.15
  - [ ] (deftest copy-seq.16
  - [ ] (deftest copy-seq.17
  - [ ] (deftest copy-seq.18
  - [ ] (deftest copy-seq.19
  - [ ] (deftest copy-seq.20
  - [ ] (deftest copy-seq.21
  - [ ] (deftest copy-seq.22
  - [ ] (deftest copy-seq.23
  - [ ] (deftest copy-seq.24
  - [ ] (deftest copy-seq.order.1
  - [ ] (def-fold-test copy-seq.fold.1 (copy-seq '(a b c)))
  - [ ] (def-fold-test copy-seq.fold.2 (copy-seq #(a b c)))
  - [ ] (def-fold-test copy-seq.fold.3 (copy-seq #*01101100))
  - [ ] (def-fold-test copy-seq.fold.4 (copy-seq "abcdef"))
  - [ ] (deftest copy-seq.error.1
  - [ ] (deftest copy-seq.error.4
  - [ ] (deftest copy-seq.error.5
  - [ ] (deftest copy-seq.error.6
**** nsubstitute-if.lsp [0%]
  - [ ] (deftest nsubstitute-if-list.1
  - [ ] (deftest nsubstitute-if-list.2
  - [ ] (deftest nsubstitute-if-list.3
  - [ ] (deftest nsubstitute-if-list.4
  - [ ] (deftest nsubstitute-if-list.5
  - [ ] (deftest nsubstitute-if-list.6
  - [ ] (deftest nsubstitute-if-list.7
  - [ ] (deftest nsubstitute-if-list.8
  - [ ] (deftest nsubstitute-if-list.9
  - [ ] (deftest nsubstitute-if-list.10
  - [ ] (deftest nsubstitute-if-list.11
  - [ ] (deftest nsubstitute-if-list.12
  - [ ] (deftest nsubstitute-if-list.13
  - [ ] (deftest nsubstitute-if-list.14
  - [ ] (deftest nsubstitute-if-list.15
  - [ ] (deftest nsubstitute-if-list.16
  - [ ] (deftest nsubstitute-if-list.17
  - [ ] (deftest nsubstitute-if-list.18
  - [ ] (deftest nsubstitute-if-vector.1
  - [ ] (deftest nsubstitute-if-vector.2
  - [ ] (deftest nsubstitute-if-vector.3
  - [ ] (deftest nsubstitute-if-vector.4
  - [ ] (deftest nsubstitute-if-vector.5
  - [ ] (deftest nsubstitute-if-vector.6
  - [ ] (deftest nsubstitute-if-vector.7
  - [ ] (deftest nsubstitute-if-vector.8
  - [ ] (deftest nsubstitute-if-vector.9
  - [ ] (deftest nsubstitute-if-vector.10
  - [ ] (deftest nsubstitute-if-vector.11
  - [ ] (deftest nsubstitute-if-vector.12
  - [ ] (deftest nsubstitute-if-vector.13
  - [ ] (deftest nsubstitute-if-vector.14
  - [ ] (deftest nsubstitute-if-vector.15
  - [ ] (deftest nsubstitute-if-vector.16
  - [ ] (deftest nsubstitute-if-vector.17
  - [ ] (deftest nsubstitute-if-vector.18
  - [ ] (deftest nsubstitute-if-vector.28
  - [ ] (deftest nsubstitute-if-vector.29
  - [ ] (deftest nsubstitute-if-vector.30
  - [ ] (deftest nsubstitute-if-vector.31
  - [ ] (deftest nsubstitute-if-vector.32
  - [ ] (deftest nsubstitute-if-vector.33
  - [ ] (deftest nsubstitute-if-string.1
  - [ ] (deftest nsubstitute-if-string.2
  - [ ] (deftest nsubstitute-if-string.3
  - [ ] (deftest nsubstitute-if-string.4
  - [ ] (deftest nsubstitute-if-string.5
  - [ ] (deftest nsubstitute-if-string.6
  - [ ] (deftest nsubstitute-if-string.7
  - [ ] (deftest nsubstitute-if-string.8
  - [ ] (deftest nsubstitute-if-string.9
  - [ ] (deftest nsubstitute-if-string.10
  - [ ] (deftest nsubstitute-if-string.11
  - [ ] (deftest nsubstitute-if-string.12
  - [ ] (deftest nsubstitute-if-string.13
  - [ ] (deftest nsubstitute-if-string.14
  - [ ] (deftest nsubstitute-if-string.15
  - [ ] (deftest nsubstitute-if-string.16
  - [ ] (deftest nsubstitute-if-string.17
  - [ ] (deftest nsubstitute-if-string.18
  - [ ] (deftest nsubstitute-if-string.28
  - [ ] (deftest nsubstitute-if-string.29
  - [ ] (deftest nsubstitute-if-string.30
  - [ ] (deftest nsubstitute-if-string.31
  - [ ] (deftest nsubstitute-if-string.32
  - [ ] (deftest nsubstitute-if-string.33
  - [ ] (deftest nsubstitute-if-string.34
  - [ ] (deftest nsubstitute-if-bit-vector.1
  - [ ] (deftest nsubstitute-if-bit-vector.2
  - [ ] (deftest nsubstitute-if-bit-vector.3
  - [ ] (deftest nsubstitute-if-bit-vector.4
  - [ ] (deftest nsubstitute-if-bit-vector.5
  - [ ] (deftest nsubstitute-if-bit-vector.6
  - [ ] (deftest nsubstitute-if-bit-vector.7
  - [ ] (deftest nsubstitute-if-bit-vector.8
  - [ ] (deftest nsubstitute-if-bit-vector.9
  - [ ] (deftest nsubstitute-if-bit-vector.10
  - [ ] (deftest nsubstitute-if-bit-vector.11
  - [ ] (deftest nsubstitute-if-bit-vector.12
  - [ ] (deftest nsubstitute-if-bit-vector.13
  - [ ] (deftest nsubstitute-if-bit-vector.14
  - [ ] (deftest nsubstitute-if-bit-vector.15
  - [ ] (deftest nsubstitute-if-bit-vector.16
  - [ ] (deftest nsubstitute-if-bit-vector.17
  - [ ] (deftest nsubstitute-if-bit-vector.18
  - [ ] (deftest nsubstitute-if-bit-vector.19
  - [ ] (deftest nsubstitute-if-bit-vector.20
  - [ ] (deftest nsubstitute-if-bit-vector.21
  - [ ] (deftest nsubstitute-if-list.24
  - [ ] (deftest nsubstitute-if-list.25
  - [ ] (deftest nsubstitute-if-vector.24
  - [ ] (deftest nsubstitute-if-vector.25
  - [ ] (deftest nsubstitute-if-string.24
  - [ ] (deftest nsubstitute-if-string.25
  - [ ] (deftest nsubstitute-if-bit-vector.26
  - [ ] (deftest nsubstitute-if-bit-vector.27
  - [ ] (deftest nsubstitute-if-bit-vector.30
  - [ ] (deftest nsubstitute-if-bit-vector.31
  - [ ] (deftest nsubstitute-if-bit-vector.32
  - [ ] (deftest nsubstitute-if-bit-vector.33
  - [ ] (deftest nsubstitute-if.order.1
  - [ ] (deftest nsubstitute-if.order.2
  - [ ] (deftest nsubstitute-if.allow-other-keys.1
  - [ ] (deftest nsubstitute-if.allow-other-keys.2
  - [ ] (deftest nsubstitute-if.allow-other-keys.3
  - [ ] (deftest nsubstitute-if.allow-other-keys.4
  - [ ] (deftest nsubstitute-if.allow-other-keys.5
  - [ ] (deftest nsubstitute-if.keywords.6
  - [ ] (deftest nsubstitute-if.allow-other-keys.7
  - [ ] (deftest nsubstitute-if.allow-other-keys.8
  - [ ] (deftest nsubstitute-if.error.1
  - [ ] (deftest nsubstitute-if.error.2
  - [ ] (deftest nsubstitute-if.error.3
  - [ ] (deftest nsubstitute-if.error.4
  - [ ] (deftest nsubstitute-if.error.5
  - [ ] (deftest nsubstitute-if.error.6
  - [ ] (deftest nsubstitute-if.error.7
  - [ ] (deftest nsubstitute-if.error.8
  - [ ] (deftest nsubstitute-if.error.9
  - [ ] (deftest nsubstitute-if.error.10
  - [ ] (deftest nsubstitute-if.error.11
  - [ ] (deftest nsubstitute-if.error.12
**** remove.lsp [0%]
  - [ ] (deftest remove-list.1
  - [ ] (deftest remove-list.2
  - [ ] (deftest remove-list.3
  - [ ] (deftest remove-list.4
  - [ ] (deftest remove-list.5
  - [ ] (deftest remove-list.6
  - [ ] (deftest remove-list.7
  - [ ] (deftest remove-list.8
  - [ ] (deftest remove-list.9
  - [ ] (deftest remove-list.10
  - [ ] (deftest remove-list.11
  - [ ] (deftest remove-list.12
  - [ ] (deftest remove-list.13
  - [ ] (deftest remove-list.14
  - [ ] (deftest remove-list.15
  - [ ] (deftest remove-list.16
  - [ ] (deftest remove-list.17
  - [ ] (deftest remove-list.18
  - [ ] (deftest remove-list.19
  - [ ] (deftest remove-list.20
  - [ ] (deftest remove-list.21
  - [ ] (deftest remove-list.22
  - [ ] (deftest remove-list.23
  - [ ] (deftest remove-list.24
  - [ ] (deftest remove-list.25
  - [ ] (deftest remove-list.26
  - [ ] (deftest remove-list.27
  - [ ] (deftest remove-list.28
  - [ ] (deftest remove-list.29
  - [ ] (deftest remove-vector.1
  - [ ] (deftest remove-vector.2
  - [ ] (deftest remove-vector.3
  - [ ] (deftest remove-string.1
  - [ ] (deftest remove-string.2
  - [ ] (deftest remove-string.3
  - [ ] (deftest remove-string.4
  - [ ] (deftest delete-vector.1
  - [ ] (deftest delete-vector.2
  - [ ] (deftest delete-vector.3
  - [ ] (deftest delete-string.1
  - [ ] (deftest delete-string.2
  - [ ] (deftest delete-string.3
  - [ ] (deftest delete-string.4
  - [ ] (deftest delete-string.5
  - [ ] (deftest delete-string.6
  - [ ] (deftest remove-bit-vector.1
  - [ ] (deftest remove-bit-vector.2
  - [ ] (deftest remove-bit-vector.3
  - [ ] (deftest delete-bit-vector.1
  - [ ] (deftest delete-bit-vector.2
  - [ ] (deftest delete-bit-vector.3
  - [ ] (def-fold-test remove.fold.1 (remove 'c '(a b c d e)))
  - [ ] (def-fold-test remove.fold.2 (remove 'c #(a b c d e)))
  - [ ] (def-fold-test remove.fold.3 (remove 1 #*0011011001))
  - [ ] (def-fold-test remove.fold.4 (remove #\c "abcde"))
  - [ ] (def-fold-test remove-if.fold.1 (remove-if 'null '(a b nil d e)))
  - [ ] (def-fold-test remove-if.fold.2 (remove-if #'null #(a b nil d e)))
  - [ ] (def-fold-test remove-if.fold.3 (remove-if 'plusp #*0011011001))
  - [ ] (def-fold-test remove-if.fold.4 (remove-if 'digit-char-p "ab0de"))
  - [ ] (def-fold-test remove-if-not.fold.1 (remove-if-not #'identity '(a b nil d e)))
  - [ ] (def-fold-test remove-if-not.fold.2 (remove-if-not 'identity #(a b nil d e)))
  - [ ] (def-fold-test remove-if-not.fold.3 (remove-if-not #'zerop #*0011011001))
  - [ ] (def-fold-test remove-if-not.fold.4 (remove-if-not #'alpha-char-p "ab-de"))
  - [ ] (deftest remove.order.1
  - [ ] (deftest remove.order.2
  - [ ] (deftest delete.order.1
  - [ ] (deftest delete.order.2
  - [ ] (deftest remove-if.order.1
  - [ ] (deftest remove-if.order.2
  - [ ] (deftest delete-if.order.1
  - [ ] (deftest delete-if.order.2
  - [ ] (deftest remove-if-not.order.1
  - [ ] (deftest remove-if-not.order.2
  - [ ] (deftest delete-if-not.order.1
  - [ ] (deftest delete-if-not.order.2
  - [ ] (deftest remove-random
  - [ ] (deftest remove-if-random
  - [ ] (deftest remove-if-not-random
  - [ ] (deftest delete-random
  - [ ] (deftest delete-if-random
  - [ ] (deftest delete-if-not-random
  - [ ] (deftest remove-if-list.1
  - [ ] (deftest remove-if-list.2
  - [ ] (deftest remove-if-not-list.1
  - [ ] (deftest remove-if-not-list.2
  - [ ] (deftest delete-if-list.1
  - [ ] (deftest delete-if-list.2
  - [ ] (deftest delete-if-not-list.1
  - [ ] (deftest delete-if-not-list.2
  - [ ] (deftest delete-list.1
  - [ ] (deftest delete-list.2
  - [ ] (deftest remove.allow-other-keys.1
  - [ ] (deftest remove.allow-other-keys.2
  - [ ] (deftest remove.allow-other-keys.3
  - [ ] (deftest remove.allow-other-keys.4
  - [ ] (deftest remove.allow-other-keys.5
  - [ ] (deftest remove.allow-other-keys.6
  - [ ] (deftest remove.keywords.7
  - [ ] (deftest delete.allow-other-keys.1
  - [ ] (deftest delete.allow-other-keys.2
  - [ ] (deftest delete.allow-other-keys.3
  - [ ] (deftest delete.allow-other-keys.4
  - [ ] (deftest delete.allow-other-keys.5
  - [ ] (deftest delete.allow-other-keys.6
  - [ ] (deftest delete.keywords.7
  - [ ] (deftest remove.error.1
  - [ ] (deftest remove.error.2
  - [ ] (deftest remove.error.3
  - [ ] (deftest remove.error.4
  - [ ] (deftest remove.error.4a
  - [ ] (deftest remove.error.5
  - [ ] (deftest remove.error.6
  - [ ] (deftest remove.error.7
  - [ ] (deftest remove.error.8
  - [ ] (deftest remove.error.9
  - [ ] (deftest remove.error.10
  - [ ] (deftest remove.error.11
  - [ ] (deftest delete.error.1
  - [ ] (deftest delete.error.2
  - [ ] (deftest delete.error.3
  - [ ] (deftest delete.error.4
  - [ ] (deftest delete.error.5
  - [ ] (deftest delete.error.6
  - [ ] (deftest delete.error.7
  - [ ] (deftest delete.error.8
  - [ ] (deftest delete.error.9
  - [ ] (deftest delete.error.10
  - [ ] (deftest delete.error.11
  - [ ] (deftest remove-if-string.1
  - [ ] (deftest remove-if-string.2
  - [ ] (deftest remove-if-string.3
  - [ ] (deftest remove-if-not-string.1
  - [ ] (deftest remove-if-not-string.2
  - [ ] (deftest remove-if-not-string.3
  - [ ] (deftest delete-if-string.1
  - [ ] (deftest delete-if-string.2
  - [ ] (deftest delete-if-string.3
  - [ ] (deftest delete-if-not-string.1
  - [ ] (deftest delete-if-not-string.2
  - [ ] (deftest delete-if-not-string.3
**** stable-sort.lsp [0%]
  - [ ] (deftest stable-sort-list.1
  - [ ] (deftest stable-sort-list.2
  - [ ] (deftest stable-sort-list.3
  - [ ] (deftest stable-sort-list.4
  - [ ] (deftest stable-sort-list.5
  - [ ] (deftest stable-sort-vector.1
  - [ ] (deftest stable-sort-vector.2
  - [ ] (deftest stable-sort-vector.3
  - [ ] (deftest stable-sort-vector.4
  - [ ] (deftest stable-sort-vector.6
  - [ ] (deftest stable-sort-vector.7
  - [ ] (deftest stable-sort-vector.8
  - [ ] (deftest stable-sort-vector.9
  - [ ] (deftest stable-sort-vector.10
  - [ ] (deftest stable-sort-bit-vector.1
  - [ ] (deftest stable-sort-bit-vector.2
  - [ ] (deftest stable-sort-bit-vector.3
  - [ ] (deftest stable-sort-string.1
  - [ ] (deftest stable-sort-string.2
  - [ ] (deftest stable-sort-string.3
  - [ ] (deftest stable-sort-string.4
  - [ ] (deftest stable-sort.order.1
  - [ ] (deftest stable-sort.order.2
  - [ ] (deftest stable-sort.error.1
  - [ ] (deftest stable-sort.error.2
  - [ ] (deftest stable-sort.error.3
  - [ ] (deftest stable-sort.error.4
  - [ ] (deftest stable-sort.error.5
  - [ ] (deftest stable-sort.error.6
  - [ ] (deftest stable-sort.error.7
  - [ ] (deftest stable-sort.error.8
  - [ ] (deftest stable-sort.error.9
  - [ ] (deftest stable-sort.error.10
  - [ ] (deftest stable-sort.error.11
**** position.lsp [0%]
  - [ ] (deftest position-list.1
  - [ ] (deftest position-list.2
  - [ ] (deftest position-list.3
  - [ ] (deftest position-list.4
  - [ ] (deftest position-list.5
  - [ ] (deftest position-list.6
  - [ ] (deftest position-list.7
  - [ ] (deftest position-list.8
  - [ ] (deftest position-list.9
  - [ ] (deftest position-list.10
  - [ ] (deftest position-list.11
  - [ ] (deftest position-list.12
  - [ ] (deftest position-list.13
  - [ ] (deftest position-list.14
  - [ ] (deftest position-list.15
  - [ ] (deftest position-list.16
  - [ ] (deftest position-list.17
  - [ ] (deftest position-list.18
  - [ ] (deftest position-list.19
  - [ ] (deftest position-list.20
  - [ ] (deftest position-list.21
  - [ ] (deftest position-list.22
  - [ ] (deftest position-list.23
  - [ ] (deftest position-list.24
  - [ ] (deftest position-list.25
  - [ ] (deftest position-list.26
  - [ ] (deftest position-list.27
  - [ ] (deftest position-list.28
  - [ ] (deftest position-list.29
  - [ ] (deftest position-list.30
  - [ ] (deftest position-vector.1
  - [ ] (deftest position-vector.2
  - [ ] (deftest position-vector.3
  - [ ] (deftest position-vector.4
  - [ ] (deftest position-vector.5
  - [ ] (deftest position-vector.6
  - [ ] (deftest position-vector.7
  - [ ] (deftest position-vector.8
  - [ ] (deftest position-vector.9
  - [ ] (deftest position-vector.10
  - [ ] (deftest position-vector.11
  - [ ] (deftest position-vector.12
  - [ ] (deftest position-vector.13
  - [ ] (deftest position-vector.14
  - [ ] (deftest position-vector.15
  - [ ] (deftest position-vector.16
  - [ ] (deftest position-vector.17
  - [ ] (deftest position-vector.18
  - [ ] (deftest position-vector.19
  - [ ] (deftest position-vector.20
  - [ ] (deftest position-vector.21
  - [ ] (deftest position-vector.22
  - [ ] (deftest position-vector.23
  - [ ] (deftest position-vector.24
  - [ ] (deftest position-vector.25
  - [ ] (deftest position-vector.26
  - [ ] (deftest position-vector.27
  - [ ] (deftest position-vector.28
  - [ ] (deftest position-vector.29
  - [ ] (deftest position-vector.30
  - [ ] (deftest position-vector.31
  - [ ] (deftest position-vector.32
  - [ ] (deftest position-vector.33
  - [ ] (deftest position-vector.34
  - [ ] (deftest position-bit-vector.1
  - [ ] (deftest position-bit-vector.2
  - [ ] (deftest position-bit-vector.3
  - [ ] (deftest position-bit-vector.4
  - [ ] (deftest position-bit-vector.5
  - [ ] (deftest position-bit-vector.6
  - [ ] (deftest position-bit-vector.7
  - [ ] (deftest position-bit-vector.8
  - [ ] (deftest position-bit-vector.9
  - [ ] (deftest position-bit-vector.10
  - [ ] (deftest position-bit-vector.11
  - [ ] (deftest position-bit-vector.12
  - [ ] (deftest position-bit-vector.13
  - [ ] (deftest position-bit-vector.14
  - [ ] (deftest position-bit-vector.15
  - [ ] (deftest position-bit-vector.16
  - [ ] (deftest position-bit-vector.17
  - [ ] (deftest position-bit-vector.18
  - [ ] (deftest position-bit-vector.19
  - [ ] (deftest position-bit-vector.20
  - [ ] (deftest position-bit-vector.21
  - [ ] (deftest position-bit-vector.22
  - [ ] (deftest position-bit-vector.23
  - [ ] (deftest position-bit-vector.24
  - [ ] (deftest position-bit-vector.25
  - [ ] (deftest position-bit-vector.27
  - [ ] (deftest position-bit-vector.28
  - [ ] (deftest position-bit-vector.29
  - [ ] (deftest position-bit-vector.30
  - [ ] (deftest position-bit-vector.31
  - [ ] (deftest position-bit-vector.32
  - [ ] (deftest position-bit-vector.33
  - [ ] (deftest position-bit-vector.34
  - [ ] (deftest position-string.1
  - [ ] (deftest position-string.2
  - [ ] (deftest position-string.3
  - [ ] (deftest position-string.4
  - [ ] (deftest position-string.5
  - [ ] (deftest position-string.6
  - [ ] (deftest position-string.7
  - [ ] (deftest position-string.8
  - [ ] (deftest position-string.9
  - [ ] (deftest position-string.10
  - [ ] (deftest position-string.11
  - [ ] (deftest position-string.13
  - [ ] (deftest position-string.14
  - [ ] (deftest position-string.15
  - [ ] (deftest position-string.16
  - [ ] (deftest position-string.17
  - [ ] (deftest position-string.18
  - [ ] (deftest position-string.19
  - [ ] (deftest position-string.20
  - [ ] (deftest position-string.21
  - [ ] (deftest position-string.22
  - [ ] (deftest position-string.23
  - [ ] (deftest position-string.24
  - [ ] (deftest position-string.25
  - [ ] (deftest position-string.26
  - [ ] (deftest position-string.27
  - [ ] (deftest position-string.28
  - [ ] (deftest position-string.29
  - [ ] (deftest position-string.30
  - [ ] (deftest position-string.31
  - [ ] (deftest position-string.32
  - [ ] (deftest position-string.33
  - [ ] (deftest position-string.34
  - [ ] (deftest position.order.1
  - [ ] (deftest position.order.2
  - [ ] (deftest position.allow-other-keys.1
  - [ ] (deftest position.allow-other-keys.2
  - [ ] (deftest position.allow-other-keys.3
  - [ ] (deftest position.allow-other-keys.4
  - [ ] (deftest position.allow-other-keys.5
  - [ ] (deftest position.keywords.6
  - [ ] (deftest position.allow-other-keys.7
  - [ ] (deftest position.allow-other-keys.8
  - [ ] (deftest position.allow-other-keys.9
  - [ ] (deftest position.error.1
  - [ ] (deftest position.error.4
  - [ ] (deftest position.error.5
  - [ ] (deftest position.error.6
  - [ ] (deftest position.error.7
  - [ ] (deftest position.error.8
  - [ ] (deftest position.error.9
  - [ ] (deftest position.error.10
  - [ ] (deftest position.error.11
  - [ ] (deftest position.error.12
  - [ ] (deftest position.error.13
  - [ ] (deftest position.error.14
  - [ ] (deftest position.error.15
**** map-into.lsp [0%]
  - [ ] (deftest map-into-list.1
  - [ ] (deftest map-into-list.2
  - [ ] (deftest map-into-list.3
  - [ ] (deftest map-into-list.4
  - [ ] (deftest map-into-list.5
  - [ ] (deftest map-into-list.6
  - [ ] (deftest map-into-list.7
  - [ ] (deftest map-into-list.8
  - [ ] (deftest map-into-array.1
  - [ ] (deftest map-into-array.2
  - [ ] (deftest map-into-array.3
  - [ ] (deftest map-into-array.4
  - [ ] (deftest map-into-array.5
  - [ ] (deftest map-into-array.6
  - [ ] (deftest map-into-array.7
  - [ ] (deftest map-into-array.8
  - [ ] (deftest map-into-array.9
  - [ ] (deftest map-into-array.10
  - [ ] (deftest map-into-array.11
  - [ ] (deftest map-into-string.1
  - [ ] (deftest map-into-string.2
  - [ ] (deftest map-into-string.3
  - [ ] (deftest map-into-string.4
  - [ ] (deftest map-into-string.5
  - [ ] (deftest map-into-string.6
  - [ ] (deftest map-into-string.7
  - [ ] (deftest map-into-string.8
  - [ ] (deftest map-into-string.9
  - [ ] (deftest map-into-string.10
  - [ ] (deftest map-into-string.11
  - [ ] (deftest map-into-string.12
  - [ ] (deftest map-into-string.13
  - [ ] (deftest map-into-string.14
  - [ ] (deftest map-into.bit-vector.1
  - [ ] (deftest map-into.bit-vector.2
  - [ ] (deftest map-into.bit-vector.3
  - [ ] (deftest map-into.bit-vector.4
  - [ ] (deftest map-into.bit-vector.5
  - [ ] (deftest map-into.bit-vector.6
  - [ ] (deftest map-into.bit-vector.7
  - [ ] (deftest map-into.bit-vector.8
  - [ ] (deftest map-into.bit-vector.9
  - [ ] (deftest map-into.specialized-vector.1
  - [ ] (deftest map-into.specialized-vector.2
  - [ ] (deftest map-into.specialized-vector.3
  - [ ] (deftest map-into.specialized-vector.4
  - [ ] (deftest map-into.specialized-vector.5
  - [ ] (deftest map-into.specialized-vector.6
  - [ ] (deftest map-into.specialized-vector.7
  - [ ] (deftest map-into.specialized-vector.8
  - [ ] (deftest map-into.error.1
  - [ ] (deftest map-into.error.2
  - [ ] (deftest map-into.error.3
  - [ ] (deftest map-into.error.4
  - [ ] (deftest map-into.error.5
  - [ ] (deftest map-into.error.6
  - [ ] (deftest map-into.error.7
  - [ ] (deftest map-into.error.8
  - [ ] (deftest map-into.order.1
  - [ ] (deftest map-into.order.2
**** nsubstitute.lsp [0%]
  - [ ] (deftest nsubstitute-list.1
  - [ ] (deftest nsubstitute-list.2
  - [ ] (deftest nsubstitute-list.3
  - [ ] (deftest nsubstitute-list.4
  - [ ] (deftest nsubstitute-list.5
  - [ ] (deftest nsubstitute-list.6
  - [ ] (deftest nsubstitute-list.7
  - [ ] (deftest nsubstitute-list.8
  - [ ] (deftest nsubstitute-list.9
  - [ ] (deftest nsubstitute-list.10
  - [ ] (deftest nsubstitute-list.11
  - [ ] (deftest nsubstitute-list.12
  - [ ] (deftest nsubstitute-list.13
  - [ ] (deftest nsubstitute-list.14
  - [ ] (deftest nsubstitute-list.15
  - [ ] (deftest nsubstitute-list.16
  - [ ] (deftest nsubstitute-list.17
  - [ ] (deftest nsubstitute-list.18
  - [ ] (deftest nsubstitute-list.19
  - [ ] (deftest nsubstitute-list.20
  - [ ] (deftest nsubstitute-list.21
  - [ ] (deftest nsubstitute-list.22
  - [ ] (deftest nsubstitute-list.23
  - [ ] (deftest nsubstitute-vector.1
  - [ ] (deftest nsubstitute-vector.2
  - [ ] (deftest nsubstitute-vector.3
  - [ ] (deftest nsubstitute-vector.4
  - [ ] (deftest nsubstitute-vector.5
  - [ ] (deftest nsubstitute-vector.6
  - [ ] (deftest nsubstitute-vector.7
  - [ ] (deftest nsubstitute-vector.8
  - [ ] (deftest nsubstitute-vector.9
  - [ ] (deftest nsubstitute-vector.10
  - [ ] (deftest nsubstitute-vector.11
  - [ ] (deftest nsubstitute-vector.12
  - [ ] (deftest nsubstitute-vector.13
  - [ ] (deftest nsubstitute-vector.14
  - [ ] (deftest nsubstitute-vector.15
  - [ ] (deftest nsubstitute-vector.16
  - [ ] (deftest nsubstitute-vector.17
  - [ ] (deftest nsubstitute-vector.18
  - [ ] (deftest nsubstitute-vector.19
  - [ ] (deftest nsubstitute-vector.20
  - [ ] (deftest nsubstitute-vector.21
  - [ ] (deftest nsubstitute-vector.22
  - [ ] (deftest nsubstitute-vector.23
  - [ ] (deftest nsubstitute-vector.28
  - [ ] (deftest nsubstitute-vector.29
  - [ ] (deftest nsubstitute-vector.30
  - [ ] (deftest nsubstitute-vector.31
  - [ ] (deftest nsubstitute-string.1
  - [ ] (deftest nsubstitute-string.2
  - [ ] (deftest nsubstitute-string.3
  - [ ] (deftest nsubstitute-string.4
  - [ ] (deftest nsubstitute-string.5
  - [ ] (deftest nsubstitute-string.6
  - [ ] (deftest nsubstitute-string.7
  - [ ] (deftest nsubstitute-string.8
  - [ ] (deftest nsubstitute-string.9
  - [ ] (deftest nsubstitute-string.10
  - [ ] (deftest nsubstitute-string.11
  - [ ] (deftest nsubstitute-string.12
  - [ ] (deftest nsubstitute-string.13
  - [ ] (deftest nsubstitute-string.14
  - [ ] (deftest nsubstitute-string.15
  - [ ] (deftest nsubstitute-string.16
  - [ ] (deftest nsubstitute-string.17
  - [ ] (deftest nsubstitute-string.18
  - [ ] (deftest nsubstitute-string.19
  - [ ] (deftest nsubstitute-string.20
  - [ ] (deftest nsubstitute-string.21
  - [ ] (deftest nsubstitute-string.22
  - [ ] (deftest nsubstitute-string.23
  - [ ] (deftest nsubstitute-string.28
  - [ ] (deftest nsubstitute-string.29
  - [ ] (deftest nsubstitute-string.30
  - [ ] (deftest nsubstitute-string.31
  - [ ] (deftest nsubstitute-bit-vector.1
  - [ ] (deftest nsubstitute-bit-vector.2
  - [ ] (deftest nsubstitute-bit-vector.3
  - [ ] (deftest nsubstitute-bit-vector.4
  - [ ] (deftest nsubstitute-bit-vector.5
  - [ ] (deftest nsubstitute-bit-vector.6
  - [ ] (deftest nsubstitute-bit-vector.7
  - [ ] (deftest nsubstitute-bit-vector.8
  - [ ] (deftest nsubstitute-bit-vector.9
  - [ ] (deftest nsubstitute-bit-vector.10
  - [ ] (deftest nsubstitute-bit-vector.11
  - [ ] (deftest nsubstitute-bit-vector.12
  - [ ] (deftest nsubstitute-bit-vector.13
  - [ ] (deftest nsubstitute-bit-vector.14
  - [ ] (deftest nsubstitute-bit-vector.15
  - [ ] (deftest nsubstitute-bit-vector.16
  - [ ] (deftest nsubstitute-bit-vector.17
  - [ ] (deftest nsubstitute-bit-vector.18
  - [ ] (deftest nsubstitute-bit-vector.19
  - [ ] (deftest nsubstitute-bit-vector.20
  - [ ] (deftest nsubstitute-bit-vector.21
  - [ ] (deftest nsubstitute-bit-vector.22
  - [ ] (deftest nsubstitute-bit-vector.23
  - [ ] (deftest nsubstitute-bit-vector.24
  - [ ] (deftest nsubstitute-bit-vector.25
  - [ ] (deftest nsubstitute-list.24
  - [ ] (deftest nsubstitute-list.25
  - [ ] (deftest nsubstitute-list.26
  - [ ] (deftest nsubstitute-list.27
  - [ ] (deftest nsubstitute-vector.24
  - [ ] (deftest nsubstitute-vector.25
  - [ ] (deftest nsubstitute-vector.26
  - [ ] (deftest nsubstitute-vector.27
  - [ ] (deftest nsubstitute-vector.32
  - [ ] (deftest nsubstitute-vector.33
  - [ ] (deftest nsubstitute-string.24
  - [ ] (deftest nsubstitute-string.25
  - [ ] (deftest nsubstitute-string.26
  - [ ] (deftest nsubstitute-string.27
  - [ ] (deftest nsubstitute-string.32
  - [ ] (deftest nsubstitute-string.33
  - [ ] (deftest nsubstitute-string.34
  - [ ] (deftest nsubstitute-bit-vector.30
  - [ ] (deftest nsubstitute-bit-vector.31
  - [ ] (deftest nsubstitute-bit-vector.32
  - [ ] (deftest nsubstitute-bit-vector.33
  - [ ] (deftest nsubstitute.order.1
  - [ ] (deftest nsubstitute.order.2
  - [ ] (deftest nsubstitute.allow-other-keys.1
  - [ ] (deftest nsubstitute.allow-other-keys.2
  - [ ] (deftest nsubstitute.allow-other-keys.3
  - [ ] (deftest nsubstitute.allow-other-keys.4
  - [ ] (deftest nsubstitute.allow-other-keys.5
  - [ ] (deftest nsubstitute.keywords.6
  - [ ] (deftest nsubstitute.allow-other-keys.7
  - [ ] (deftest nsubstitute.allow-other-keys.8
  - [ ] (deftest nsubstitute.error.1
  - [ ] (deftest nsubstitute.error.2
  - [ ] (deftest nsubstitute.error.3
  - [ ] (deftest nsubstitute.error.4
  - [ ] (deftest nsubstitute.error.5
  - [ ] (deftest nsubstitute.error.6
  - [ ] (deftest nsubstitute.error.7
  - [ ] (deftest nsubstitute.error.8
  - [ ] (deftest nsubstitute.error.9
  - [ ] (deftest nsubstitute.error.10
  - [ ] (deftest nsubstitute.error.11
  - [ ] (deftest nsubstitute.error.12
**** search-list.lsp [0%]
  - [ ] (deftest search-list.1
  - [ ] (deftest search-list.2
  - [ ] (deftest search-list.3
  - [ ] (deftest search-list.4
  - [ ] (deftest search-list.5
  - [ ] (deftest search-list.6
  - [ ] (deftest search-list.7
  - [ ] (deftest search-list.8
  - [ ] (deftest search-list.9
  - [ ] (deftest search-list.10
  - [ ] (deftest search-list.11
  - [ ] (deftest search-list.12
  - [ ] (deftest search-list.13
  - [ ] (deftest search-list.14
  - [ ] (deftest search-list.15
  - [ ] (deftest search-list.16
  - [ ] (deftest search.allow-other-keys.1
  - [ ] (deftest search.allow-other-keys.2
  - [ ] (deftest search.allow-other-keys.3
  - [ ] (deftest search.allow-other-keys.4
  - [ ] (deftest search.allow-other-keys.5
  - [ ] (deftest search.allow-other-keys.6
  - [ ] (deftest search.allow-other-keys.7
  - [ ] (deftest search.keywords.8
  - [ ] (deftest search.error.1
  - [ ] (deftest search.error.2
  - [ ] (deftest search.error.3
  - [ ] (deftest search.error.4
  - [ ] (deftest search.error.5
  - [ ] (deftest search.error.6
  - [ ] (deftest search.error.7
  - [ ] (deftest search.error.8
  - [ ] (deftest search.error.9
  - [ ] (deftest search.error.10
  - [ ] (deftest search.order.1
  - [ ] (deftest search.order.2
**** position-if.lsp [0%]
  - [ ] (deftest position-if-list.1
  - [ ] (deftest position-if-list.2
  - [ ] (deftest position-if-list.3
  - [ ] (deftest position-if-list.4
  - [ ] (deftest position-if-list.5
  - [ ] (deftest position-if-list.6
  - [ ] (deftest position-if-list.7
  - [ ] (deftest position-if-list.8
  - [ ] (deftest position-if-list.9
  - [ ] (deftest position-if-list.10
  - [ ] (deftest position-if-list.11
  - [ ] (deftest position-if-list.12
  - [ ] (deftest position-if-vector.1
  - [ ] (deftest position-if-vector.2
  - [ ] (deftest position-if-vector.3
  - [ ] (deftest position-if-vector.4
  - [ ] (deftest position-if-vector.5
  - [ ] (deftest position-if-vector.6
  - [ ] (deftest position-if-vector.7
  - [ ] (deftest position-if-vector.8
  - [ ] (deftest position-if-vector.9
  - [ ] (deftest position-if-vector.10
  - [ ] (deftest position-if-vector.11
  - [ ] (deftest position-if-vector.12
  - [ ] (deftest position-if-vector.13
  - [ ] (deftest position-if-vector.14
  - [ ] (deftest position-if-bit-vector.1
  - [ ] (deftest position-if-bit-vector.2
  - [ ] (deftest position-if-bit-vector.3
  - [ ] (deftest position-if-bit-vector.4
  - [ ] (deftest position-if-bit-vector.5
  - [ ] (deftest position-if-bit-vector.6
  - [ ] (deftest position-if-bit-vector.7
  - [ ] (deftest position-if-bit-vector.8
  - [ ] (deftest position-if-bit-vector.9
  - [ ] (deftest position-if-bit-vector.10
  - [ ] (deftest position-if-bit-vector.11
  - [ ] (deftest position-if-bit-vector.12
  - [ ] (deftest position-if-bit-vector.13
  - [ ] (deftest position-if-string.1
  - [ ] (deftest position-if-string.2
  - [ ] (deftest position-if-string.3
  - [ ] (deftest position-if-string.4
  - [ ] (deftest position-if-string.5
  - [ ] (deftest position-if-string.6
  - [ ] (deftest position-if-string.7
  - [ ] (deftest position-if-string.8
  - [ ] (deftest position-if-string.9
  - [ ] (deftest position-if-string.10
  - [ ] (deftest position-if-string.11
  - [ ] (deftest position-if-string.12
  - [ ] (deftest position-if-string.13
  - [ ] (deftest position-if-string.14
  - [ ] (deftest position-if-string.15
  - [ ] (deftest position-if.order.1
  - [ ] (deftest position-if.order.2
  - [ ] (deftest position-if.allow-other-keys.1
  - [ ] (deftest position-if.allow-other-keys.2
  - [ ] (deftest position-if.allow-other-keys.3
  - [ ] (deftest position-if.allow-other-keys.4
  - [ ] (deftest position-if.allow-other-keys.5
  - [ ] (deftest position-if.keywords.6
  - [ ] (deftest position-if.allow-other-keys.7
  - [ ] (deftest position-if.allow-other-keys.8
  - [ ] (deftest position-if.allow-other-keys.9
  - [ ] (deftest position-if.error.1
  - [ ] (deftest position-if.error.4
  - [ ] (deftest position-if.error.5
  - [ ] (deftest position-if.error.6
  - [ ] (deftest position-if.error.7
  - [ ] (deftest position-if.error.8
  - [ ] (deftest position-if.error.9
  - [ ] (deftest position-if.error.10
  - [ ] (deftest position-if.error.11
  - [ ] (deftest position-if.error.12
  - [ ] (deftest position-if.error.13
  - [ ] (deftest position-if.error.14
  - [ ] (deftest position-if.error.15
**** reverse.lsp [0%]
  - [ ] (deftest reverse-list.1
  - [ ] (deftest reverse-list.2
  - [ ] (deftest reverse-vector.1
  - [ ] (deftest reverse-vector.2
  - [ ] (deftest reverse-vector.3
  - [ ] (deftest reverse-vector.4
  - [ ] (deftest reverse-vector.5
  - [ ] (deftest reverse-vector.6
  - [ ] (deftest reverse-vector.7
  - [ ] (deftest reverse-vector.8
  - [ ] (deftest reverse-vector.9
  - [ ] (deftest reverse-bit-vector.1
  - [ ] (deftest reverse-bit-vector.2
  - [ ] (deftest reverse-bit-vector.3
  - [ ] (deftest reverse-string.1
  - [ ] (deftest reverse-string.2
  - [ ] (deftest reverse-string.3
  - [ ] (deftest reverse-string.4
  - [ ] (deftest reverse-string.5
  - [ ] (deftest reverse.order.1
  - [ ] (def-fold-test reverse.fold.1 (reverse '(a b c)))
  - [ ] (def-fold-test reverse.fold.2 (reverse #(a b c)))
  - [ ] (def-fold-test reverse.fold.3 (reverse #*00111101011011))
  - [ ] (def-fold-test reverse.fold.4 (reverse "abcdefgh"))
  - [ ] (deftest reverse.error.1
  - [ ] (deftest reverse.error.6
  - [ ] (deftest reverse.error.7
  - [ ] (deftest reverse.error.8
**** find.lsp [0%]
  - [ ] (deftest find-list.1
  - [ ] (deftest find-list.2
  - [ ] (deftest find-list.3
  - [ ] (deftest find-list.4
  - [ ] (deftest find-list.5
  - [ ] (deftest find-list.6
  - [ ] (deftest find-list.7
  - [ ] (deftest find-list.8
  - [ ] (deftest find-list.9
  - [ ] (deftest find-list.10
  - [ ] (deftest find-list.11
  - [ ] (deftest find-list.12
  - [ ] (deftest find-list.13
  - [ ] (deftest find-list.14
  - [ ] (deftest find-list.15
  - [ ] (deftest find-list.16
  - [ ] (deftest find-list.17
  - [ ] (deftest find-list.18
  - [ ] (deftest find-list.19
  - [ ] (deftest find-list.20
  - [ ] (deftest find-list.21
  - [ ] (deftest find-list.22
  - [ ] (deftest find-list.23
  - [ ] (deftest find-list.24
  - [ ] (deftest find-list.25
  - [ ] (deftest find-list.26
  - [ ] (deftest find-list.27
  - [ ] (deftest find-list.28
  - [ ] (deftest find-list.29
  - [ ] (deftest find-list.30
  - [ ] (deftest find-vector.1
  - [ ] (deftest find-vector.1a
  - [ ] (deftest find-vector.2
  - [ ] (deftest find-vector.2a
  - [ ] (deftest find-vector.3
  - [ ] (deftest find-vector.4
  - [ ] (deftest find-vector.5
  - [ ] (deftest find-vector.6
  - [ ] (deftest find-vector.7
  - [ ] (deftest find-vector.8
  - [ ] (deftest find-vector.9
  - [ ] (deftest find-vector.10
  - [ ] (deftest find-vector.11
  - [ ] (deftest find-vector.12
  - [ ] (deftest find-vector.13
  - [ ] (deftest find-vector.14
  - [ ] (deftest find-vector.15
  - [ ] (deftest find-vector.16
  - [ ] (deftest find-vector.17
  - [ ] (deftest find-vector.18
  - [ ] (deftest find-vector.19
  - [ ] (deftest find-vector.20
  - [ ] (deftest find-vector.21
  - [ ] (deftest find-vector.22
  - [ ] (deftest find-vector.23
  - [ ] (deftest find-vector.24
  - [ ] (deftest find-vector.25
  - [ ] (deftest find-vector.26
  - [ ] (deftest find-vector.27
  - [ ] (deftest find-vector.28
  - [ ] (deftest find-vector.29
  - [ ] (deftest find-vector.30
  - [ ] (deftest find-vector.31
  - [ ] (deftest find-vector.32
  - [ ] (deftest find-vector.33
  - [ ] (deftest find-vector.34
  - [ ] (deftest find-bit-vector.1
  - [ ] (deftest find-bit-vector.1a
  - [ ] (deftest find-bit-vector.1b
  - [ ] (deftest find-bit-vector.1c
  - [ ] (deftest find-bit-vector.1d
  - [ ] (deftest find-bit-vector.2
  - [ ] (deftest find-bit-vector.2a
  - [ ] (deftest find-bit-vector.2b
  - [ ] (deftest find-bit-vector.2c
  - [ ] (deftest find-bit-vector.2d
  - [ ] (deftest find-bit-vector.2e
  - [ ] (deftest find-bit-vector.3
  - [ ] (deftest find-bit-vector.4
  - [ ] (deftest find-bit-vector.5
  - [ ] (deftest find-bit-vector.6
  - [ ] (deftest find-bit-vector.7
  - [ ] (deftest find-bit-vector.8
  - [ ] (deftest find-bit-vector.9
  - [ ] (deftest find-bit-vector.10
  - [ ] (deftest find-bit-vector.11
  - [ ] (deftest find-bit-vector.12
  - [ ] (deftest find-bit-vector.13
  - [ ] (deftest find-bit-vector.14
  - [ ] (deftest find-bit-vector.15
  - [ ] (deftest find-bit-vector.16
  - [ ] (deftest find-bit-vector.16a
  - [ ] (deftest find-bit-vector.16b
  - [ ] (deftest find-bit-vector.17
  - [ ] (deftest find-bit-vector.17a
  - [ ] (deftest find-bit-vector.17b
  - [ ] (deftest find-bit-vector.18
  - [ ] (deftest find-bit-vector.18a
  - [ ] (deftest find-bit-vector.19
  - [ ] (deftest find-bit-vector.19a
  - [ ] (deftest find-bit-vector.20
  - [ ] (deftest find-bit-vector.21
  - [ ] (deftest find-bit-vector.21a
  - [ ] (deftest find-bit-vector.21b
  - [ ] (deftest find-bit-vector.22
  - [ ] (deftest find-bit-vector.22a
  - [ ] (deftest find-bit-vector.22b
  - [ ] (deftest find-bit-vector.23
  - [ ] (deftest find-bit-vector.23a
  - [ ] (deftest find-bit-vector.23b
  - [ ] (deftest find-bit-vector.24
  - [ ] (deftest find-bit-vector.24a
  - [ ] (deftest find-bit-vector.24b
  - [ ] (deftest find-bit-vector.25
  - [ ] (deftest find-bit-vector.26
  - [ ] (deftest find-bit-vector.26a
  - [ ] (deftest find-bit-vector.27
  - [ ] (deftest find-bit-vector.28
  - [ ] (deftest find-bit-vector.29
  - [ ] (deftest find-bit-vector.30
  - [ ] (deftest find-bit-vector.31
  - [ ] (deftest find-bit-vector.32
  - [ ] (deftest find-bit-vector.33
  - [ ] (deftest find-bit-vector.34
  - [ ] (deftest find-string.1
  - [ ] (deftest find-string.1a
  - [ ] (deftest find-string.2
  - [ ] (deftest find-string.2a
  - [ ] (deftest find-string.3
  - [ ] (deftest find-string.4
  - [ ] (deftest find-string.5
  - [ ] (deftest find-string.6
  - [ ] (deftest find-string.7
  - [ ] (deftest find-string.8
  - [ ] (deftest find-string.9
  - [ ] (deftest find-string.10
  - [ ] (deftest find-string.11
  - [ ] (deftest find-string.13
  - [ ] (deftest find-string.14
  - [ ] (deftest find-string.15
  - [ ] (deftest find-string.16
  - [ ] (deftest find-string.17
  - [ ] (deftest find-string.18
  - [ ] (deftest find-string.19
  - [ ] (deftest find-string.20
  - [ ] (deftest find-string.21
  - [ ] (deftest find-string.22
  - [ ] (deftest find-string.23
  - [ ] (deftest find-string.24
  - [ ] (deftest find-string.25
  - [ ] (deftest find-string.26
  - [ ] (deftest find-string.27
  - [ ] (deftest find-string.28
  - [ ] (deftest find.allow-other-keys.1
  - [ ] (deftest find.allow-other-keys.2
  - [ ] (deftest find.allow-other-keys.3
  - [ ] (deftest find.keywords.4
  - [ ] (deftest find.allow-other-keys.5
  - [ ] (deftest find.error.1
  - [ ] (deftest find.error.4
  - [ ] (deftest find.error.5
  - [ ] (deftest find.error.6
  - [ ] (deftest find.error.7
  - [ ] (deftest find.error.8
  - [ ] (deftest find.error.9
  - [ ] (deftest find.error.10
  - [ ] (deftest find.error.11
  - [ ] (deftest find.error.12
  - [ ] (deftest find.error.13
  - [ ] (deftest find.error.14
  - [ ] (deftest find.error.15
  - [ ] (deftest find.order.1
  - [ ] (deftest find.order.2
  - [ ] (deftest find.order.3
**** nsubstitute-if-not.lsp [0%]
  - [ ] (deftest nsubstitute-if-not-list.1
  - [ ] (deftest nsubstitute-if-not-list.2
  - [ ] (deftest nsubstitute-if-not-list.3
  - [ ] (deftest nsubstitute-if-not-list.4
  - [ ] (deftest nsubstitute-if-not-list.5
  - [ ] (deftest nsubstitute-if-not-list.6
  - [ ] (deftest nsubstitute-if-not-list.7
  - [ ] (deftest nsubstitute-if-not-list.8
  - [ ] (deftest nsubstitute-if-not-list.9
  - [ ] (deftest nsubstitute-if-not-list.10
  - [ ] (deftest nsubstitute-if-not-list.11
  - [ ] (deftest nsubstitute-if-not-list.12
  - [ ] (deftest nsubstitute-if-not-list.13
  - [ ] (deftest nsubstitute-if-not-list.14
  - [ ] (deftest nsubstitute-if-not-list.15
  - [ ] (deftest nsubstitute-if-not-list.16
  - [ ] (deftest nsubstitute-if-not-list.17
  - [ ] (deftest nsubstitute-if-not-list.18
  - [ ] (deftest nsubstitute-if-not-vector.1
  - [ ] (deftest nsubstitute-if-not-vector.2
  - [ ] (deftest nsubstitute-if-not-vector.3
  - [ ] (deftest nsubstitute-if-not-vector.4
  - [ ] (deftest nsubstitute-if-not-vector.5
  - [ ] (deftest nsubstitute-if-not-vector.6
  - [ ] (deftest nsubstitute-if-not-vector.7
  - [ ] (deftest nsubstitute-if-not-vector.8
  - [ ] (deftest nsubstitute-if-not-vector.9
  - [ ] (deftest nsubstitute-if-not-vector.10
  - [ ] (deftest nsubstitute-if-not-vector.11
  - [ ] (deftest nsubstitute-if-not-vector.12
  - [ ] (deftest nsubstitute-if-not-vector.13
  - [ ] (deftest nsubstitute-if-not-vector.14
  - [ ] (deftest nsubstitute-if-not-vector.15
  - [ ] (deftest nsubstitute-if-not-vector.16
  - [ ] (deftest nsubstitute-if-not-vector.17
  - [ ] (deftest nsubstitute-if-not-vector.18
  - [ ] (deftest nsubstitute-if-not-vector.28
  - [ ] (deftest nsubstitute-if-not-vector.29
  - [ ] (deftest nsubstitute-if-not-vector.30
  - [ ] (deftest nsubstitute-if-not-vector.31
  - [ ] (deftest nsubstitute-if-not-vector.32
  - [ ] (deftest nsubstitute-if-not-vector.33
  - [ ] (deftest nsubstitute-if-not-string.1
  - [ ] (deftest nsubstitute-if-not-string.2
  - [ ] (deftest nsubstitute-if-not-string.3
  - [ ] (deftest nsubstitute-if-not-string.4
  - [ ] (deftest nsubstitute-if-not-string.5
  - [ ] (deftest nsubstitute-if-not-string.6
  - [ ] (deftest nsubstitute-if-not-string.7
  - [ ] (deftest nsubstitute-if-not-string.8
  - [ ] (deftest nsubstitute-if-not-string.9
  - [ ] (deftest nsubstitute-if-not-string.10
  - [ ] (deftest nsubstitute-if-not-string.11
  - [ ] (deftest nsubstitute-if-not-string.12
  - [ ] (deftest nsubstitute-if-not-string.13
  - [ ] (deftest nsubstitute-if-not-string.14
  - [ ] (deftest nsubstitute-if-not-string.15
  - [ ] (deftest nsubstitute-if-not-string.16
  - [ ] (deftest nsubstitute-if-not-string.17
  - [ ] (deftest nsubstitute-if-not-string.18
  - [ ] (deftest nsubstitute-if-not-string.28
  - [ ] (deftest nsubstitute-if-not-string.29
  - [ ] (deftest nsubstitute-if-not-string.30
  - [ ] (deftest nsubstitute-if-not-string.31
  - [ ] (deftest nsubstitute-if-not-string.32
  - [ ] (deftest nsubstitute-if-not-string.33
  - [ ] (deftest nsubstitute-if-not-string.34
  - [ ] (deftest nsubstitute-if-not-bit-vector.1
  - [ ] (deftest nsubstitute-if-not-bit-vector.2
  - [ ] (deftest nsubstitute-if-not-bit-vector.3
  - [ ] (deftest nsubstitute-if-not-bit-vector.4
  - [ ] (deftest nsubstitute-if-not-bit-vector.5
  - [ ] (deftest nsubstitute-if-not-bit-vector.6
  - [ ] (deftest nsubstitute-if-not-bit-vector.7
  - [ ] (deftest nsubstitute-if-not-bit-vector.8
  - [ ] (deftest nsubstitute-if-not-bit-vector.9
  - [ ] (deftest nsubstitute-if-not-bit-vector.10
  - [ ] (deftest nsubstitute-if-not-bit-vector.11
  - [ ] (deftest nsubstitute-if-not-bit-vector.12
  - [ ] (deftest nsubstitute-if-not-bit-vector.13
  - [ ] (deftest nsubstitute-if-not-bit-vector.14
  - [ ] (deftest nsubstitute-if-not-bit-vector.15
  - [ ] (deftest nsubstitute-if-not-bit-vector.16
  - [ ] (deftest nsubstitute-if-not-bit-vector.17
  - [ ] (deftest nsubstitute-if-not-bit-vector.18
  - [ ] (deftest nsubstitute-if-not-bit-vector.19
  - [ ] (deftest nsubstitute-if-not-bit-vector.20
  - [ ] (deftest nsubstitute-if-not-bit-vector.21
  - [ ] (deftest nsubstitute-if-not-list.24
  - [ ] (deftest nsubstitute-if-not-list.25
  - [ ] (deftest nsubstitute-if-not-vector.24
  - [ ] (deftest nsubstitute-if-not-vector.25
  - [ ] (deftest nsubstitute-if-not-string.24
  - [ ] (deftest nsubstitute-if-not-string.25
  - [ ] (deftest nsubstitute-if-not-bit-vector.26
  - [ ] (deftest nsubstitute-if-not-bit-vector.27
  - [ ] (deftest nsubstitute-if-not-bit-vector.30
  - [ ] (deftest nsubstitute-if-not-bit-vector.31
  - [ ] (deftest nsubstitute-if-not-bit-vector.32
  - [ ] (deftest nsubstitute-if-not-bit-vector.33
  - [ ] (deftest nsubstitute-if-not.order.1
  - [ ] (deftest nsubstitute-if-not.order.2
  - [ ] (deftest nsubstitute-if-not.allow-other-keys.1
  - [ ] (deftest nsubstitute-if-not.allow-other-keys.2
  - [ ] (deftest nsubstitute-if-not.allow-other-keys.3
  - [ ] (deftest nsubstitute-if-not.allow-other-keys.4
  - [ ] (deftest nsubstitute-if-not.allow-other-keys.5
  - [ ] (deftest nsubstitute-if-not.keywords.6
  - [ ] (deftest nsubstitute-if-not.allow-other-keys.7
  - [ ] (deftest nsubstitute-if-not.allow-other-keys.8
  - [ ] (deftest nsubstitute-if-not.error.1
  - [ ] (deftest nsubstitute-if-not.error.2
  - [ ] (deftest nsubstitute-if-not.error.3
  - [ ] (deftest nsubstitute-if-not.error.4
  - [ ] (deftest nsubstitute-if-not.error.5
  - [ ] (deftest nsubstitute-if-not.error.6
  - [ ] (deftest nsubstitute-if-not.error.7
  - [ ] (deftest nsubstitute-if-not.error.8
  - [ ] (deftest nsubstitute-if-not.error.9
  - [ ] (deftest nsubstitute-if-not.error.10
  - [ ] (deftest nsubstitute-if-not.error.11
  - [ ] (deftest nsubstitute-if-not.error.12
**** sort.lsp [0%]
  - [ ] (deftest sort-list.1
  - [ ] (deftest sort-list.2
  - [ ] (deftest sort-list.3
  - [ ] (deftest sort-list.4
  - [ ] (deftest sort-vector.1
  - [ ] (deftest sort-vector.2
  - [ ] (deftest sort-vector.3
  - [ ] (deftest sort-vector.4
  - [ ] (deftest sort-vector.5
  - [ ] (deftest sort-vector.6
  - [ ] (deftest sort-vector.7
  - [ ] (deftest sort-vector.8
  - [ ] (deftest sort-vector.9
  - [ ] (deftest sort-vector.10
  - [ ] (deftest sort-bit-vector.1
  - [ ] (deftest sort-bit-vector.2
  - [ ] (deftest sort-bit-vector.3
  - [ ] (deftest sort-string.1
  - [ ] (deftest sort-string.2
  - [ ] (deftest sort-string.3
  - [ ] (deftest sort-string.4
  - [ ] (deftest sort.order.1
  - [ ] (deftest sort.order.2
  - [ ] (deftest sort.error.1
  - [ ] (deftest sort.error.2
  - [ ] (deftest sort.error.3
  - [ ] (deftest sort.error.4
  - [ ] (deftest sort.error.5
  - [ ] (deftest sort.error.6
  - [ ] (deftest sort.error.7
  - [ ] (deftest sort.error.8
  - [ ] (deftest sort.error.9
  - [ ] (deftest sort.error.10
  - [ ] (deftest sort.error.11
**** reduce.lsp [0%]
  - [ ] (deftest reduce-list.1
  - [ ] (deftest reduce-list.2
  - [ ] (deftest reduce-list.3
  - [ ] (deftest reduce-list.4
  - [ ] (deftest reduce-list.5
  - [ ] (deftest reduce-list.6
  - [ ] (deftest reduce-list.7
  - [ ] (deftest reduce-list.8
  - [ ] (deftest reduce-list.9
  - [ ] (deftest reduce-list.10
  - [ ] (deftest reduce-list.11
  - [ ] (deftest reduce-list.12
  - [ ] (deftest reduce-list.13
  - [ ] (deftest reduce-list.14
  - [ ] (deftest reduce-list.15
  - [ ] (deftest reduce-list.16
  - [ ] (deftest reduce-list.17
  - [ ] (deftest reduce-array.1
  - [ ] (deftest reduce-array.2
  - [ ] (deftest reduce-array.3
  - [ ] (deftest reduce-array.4
  - [ ] (deftest reduce-array.5
  - [ ] (deftest reduce-array.6
  - [ ] (deftest reduce-array.7
  - [ ] (deftest reduce-array.8
  - [ ] (deftest reduce-array.9
  - [ ] (deftest reduce-array.10
  - [ ] (deftest reduce-array.11
  - [ ] (deftest reduce-array.12
  - [ ] (deftest reduce-array.13
  - [ ] (deftest reduce-array.14
  - [ ] (deftest reduce-array.15
  - [ ] (deftest reduce-array.16
  - [ ] (deftest reduce-array.17
  - [ ] (deftest reduce-array.18
  - [ ] (deftest reduce-array.19
  - [ ] (deftest reduce-array.20
  - [ ] (deftest reduce-array.21
  - [ ] (deftest reduce-array.22
  - [ ] (deftest reduce-array.23
  - [ ] (deftest reduce-array.24
  - [ ] (deftest reduce-array.25
  - [ ] (deftest reduce.error.1
  - [ ] (deftest reduce.error.2
  - [ ] (deftest reduce.error.3
  - [ ] (deftest reduce.error.4
  - [ ] (deftest reduce.error.5
  - [ ] (deftest reduce.error.6
  - [ ] (deftest reduce.error.7
  - [ ] (deftest reduce.error.8
  - [ ] (deftest reduce.error.9
  - [ ] (deftest reduce.error.10
  - [ ] (deftest reduce-string.1
  - [ ] (deftest reduce-string.2
  - [ ] (deftest reduce-string.3
  - [ ] (deftest reduce-string.4
  - [ ] (deftest reduce-string.5
  - [ ] (deftest reduce-string.6
  - [ ] (deftest reduce-string.7
  - [ ] (deftest reduce-string.8
  - [ ] (deftest reduce-string.9
  - [ ] (deftest reduce-string.10
  - [ ] (deftest reduce-string.11
  - [ ] (deftest reduce-string.12
  - [ ] (deftest reduce-string.13
  - [ ] (deftest reduce-string.14
  - [ ] (deftest reduce-string.15
  - [ ] (deftest reduce-string.16
  - [ ] (deftest reduce-string.17
  - [ ] (deftest reduce-string.18
  - [ ] (deftest reduce-string.19
  - [ ] (deftest reduce-string.20
  - [ ] (deftest reduce-bitstring.1
  - [ ] (deftest reduce-bitstring.2
  - [ ] (deftest reduce-bitstring.3
  - [ ] (deftest reduce-bitstring.4
  - [ ] (deftest reduce-bitstring.5
  - [ ] (deftest reduce-bitstring.6
  - [ ] (deftest reduce-bitstring.7
  - [ ] (deftest reduce-bitstring.8
  - [ ] (deftest reduce-bitstring.9
  - [ ] (deftest reduce-bitstring.10
  - [ ] (deftest reduce-bitstring.11
  - [ ] (deftest reduce-bitstring.12
  - [ ] (deftest reduce-bitstring.13
  - [ ] (deftest reduce-bitstring.14
  - [ ] (deftest reduce-bitstring.15
  - [ ] (deftest reduce-bitstring.16
  - [ ] (deftest reduce-bitstring.17
  - [ ] (deftest reduce-bitstring.18
  - [ ] (deftest reduce.order.1
  - [ ] (deftest reduce.order.2
  - [ ] (deftest reduce.order.3
  - [ ] (deftest reduce.allow-other-keys.1
  - [ ] (deftest reduce.allow-other-keys.2
  - [ ] (deftest reduce.allow-other-keys.3
  - [ ] (deftest reduce.allow-other-keys.4
  - [ ] (deftest reduce.allow-other-keys.5
  - [ ] (deftest reduce.allow-other-keys.6
  - [ ] (deftest reduce.allow-other-keys.7
  - [ ] (deftest reduce.allow-other-keys.8
  - [ ] (deftest reduce.keywords.9
**** position-if-not.lsp [0%]
  - [ ] (deftest position-if-not-list.1
  - [ ] (deftest position-if-not-list.2
  - [ ] (deftest position-if-not-list.3
  - [ ] (deftest position-if-not-list.4
  - [ ] (deftest position-if-not-list.5
  - [ ] (deftest position-if-not-list.6
  - [ ] (deftest position-if-not-list.7
  - [ ] (deftest position-if-not-list.8
  - [ ] (deftest position-if-not-list.9
  - [ ] (deftest position-if-not-list.10
  - [ ] (deftest position-if-not-list.11
  - [ ] (deftest position-if-not-list.12
  - [ ] (deftest position-if-not-vector.1
  - [ ] (deftest position-if-not-vector.2
  - [ ] (deftest position-if-not-vector.3
  - [ ] (deftest position-if-not-vector.4
  - [ ] (deftest position-if-not-vector.5
  - [ ] (deftest position-if-not-vector.6
  - [ ] (deftest position-if-not-vector.7
  - [ ] (deftest position-if-not-vector.8
  - [ ] (deftest position-if-not-vector.9
  - [ ] (deftest position-if-not-vector.10
  - [ ] (deftest position-if-not-vector.11
  - [ ] (deftest position-if-not-vector.12
  - [ ] (deftest position-if-not-vector.13
  - [ ] (deftest position-if-not-vector.14
  - [ ] (deftest position-if-not-bit-vector.1
  - [ ] (deftest position-if-not-bit-vector.2
  - [ ] (deftest position-if-not-bit-vector.3
  - [ ] (deftest position-if-not-bit-vector.4
  - [ ] (deftest position-if-not-bit-vector.5
  - [ ] (deftest position-if-not-bit-vector.6
  - [ ] (deftest position-if-not-bit-vector.7
  - [ ] (deftest position-if-not-bit-vector.8
  - [ ] (deftest position-if-not-bit-vector.9
  - [ ] (deftest position-if-not-bit-vector.10
  - [ ] (deftest position-if-not-bit-vector.11
  - [ ] (deftest position-if-not-bit-vector.12
  - [ ] (deftest position-if-not-bit-vector.13
  - [ ] (deftest position-if-not-string.1
  - [ ] (deftest position-if-not-string.2
  - [ ] (deftest position-if-not-string.3
  - [ ] (deftest position-if-not-string.4
  - [ ] (deftest position-if-not-string.5
  - [ ] (deftest position-if-not-string.6
  - [ ] (deftest position-if-not-string.7
  - [ ] (deftest position-if-not-string.8
  - [ ] (deftest position-if-not-string.9
  - [ ] (deftest position-if-not-string.10
  - [ ] (deftest position-if-not-string.11
  - [ ] (deftest position-if-not-string.12
  - [ ] (deftest position-if-not-string.13
  - [ ] (deftest position-if-not-string.14
  - [ ] (deftest position-if-not-string.15
  - [ ] (deftest position-if-not.order.1
  - [ ] (deftest position-if-not.order.2
  - [ ] (deftest position-if-not.allow-other-keys.1
  - [ ] (deftest position-if-not.allow-other-keys.2
  - [ ] (deftest position-if-not.allow-other-keys.3
  - [ ] (deftest position-if-not.allow-other-keys.4
  - [ ] (deftest position-if-not.allow-other-keys.5
  - [ ] (deftest position-if-not.keywords.6
  - [ ] (deftest position-if-not.allow-other-keys.7
  - [ ] (deftest position-if-not.allow-other-keys.8
  - [ ] (deftest position-if-not.allow-other-keys.9
  - [ ] (deftest position-if-not.error.1
  - [ ] (deftest position-if-not.error.4
  - [ ] (deftest position-if-not.error.5
  - [ ] (deftest position-if-not.error.6
  - [ ] (deftest position-if-not.error.7
  - [ ] (deftest position-if-not.error.8
  - [ ] (deftest position-if-not.error.9
  - [ ] (deftest position-if-not.error.10
  - [ ] (deftest position-if-not.error.11
  - [ ] (deftest position-if-not.error.12
  - [ ] (deftest position-if-not.error.13
  - [ ] (deftest position-if-not.error.14
  - [ ] (deftest position-if-not.error.15
**** map.lsp [0%]
  - [ ] (deftest map-array.1
  - [ ] (deftest map-array.2
  - [ ] (deftest map-array.3
  - [ ] (deftest map-array.4
  - [ ] (deftest map-array.5
  - [ ] (deftest map-array.6
  - [ ] (deftest map-array.9
  - [ ] (deftest map-array.10
  - [ ] (deftest map-array.11
  - [ ] (deftest map-array.12
  - [ ] (deftest map-array.13
  - [ ] (deftest map-array.14
  - [ ] (deftest map-bit-vector.15
  - [ ] (deftest map-bit-vector.16
  - [ ] (deftest map-bit-vector.17
  - [ ] (deftest map-bit-vector.18
  - [ ] (deftest map-bit-vector.19
  - [ ] (deftest map-bit-vector.20
  - [ ] (deftest map-bit-vector.21
  - [ ] (deftest map-bit-vector.22
  - [ ] (deftest map-bit-vector.23
  - [ ] (deftest map-bit-vector.24
  - [ ] (deftest map-bit-vector.25
  - [ ] (deftest map-string.26
  - [ ] (deftest map-string.27
  - [ ] (deftest map-string.28
  - [ ] (deftest map-string.29
  - [ ] (deftest map-string.30
  - [ ] (deftest map-nil.33
  - [ ] (deftest map-nil.34
  - [ ] (deftest map-nil.35
  - [ ] (deftest map-nil.36
  - [ ] (deftest map-null.1
  - [ ] (deftest map-cons.1
  - [ ] (deftest map.37
  - [ ] (deftest map.38
  - [ ] (deftest map.39
  - [ ] (deftest map.40
  - [ ] (deftest map.41
  - [ ] (deftest map.42
  - [ ] (deftest map.43
  - [ ] (deftest map.44
  - [ ] (deftest map.45
  - [ ] (deftest map.46
  - [ ] (deftest map.47
  - [ ] (deftest map.48
  - [ ] (deftest map.error.1
  - [ ] (deftest map.error.1a
  - [ ] (deftest map.error.2
  - [ ] (deftest map.error.3
  - [ ] (deftest map.error.4
  - [ ] (deftest map.error.5
  - [ ] (deftest map.error.6
  - [ ] (deftest map.error.7
  - [ ] (deftest map.error.8
  - [ ] (deftest map.error.9
  - [ ] (deftest map.error.10
  - [ ] (deftest map.error.11
  - [ ] (deftest map.error.12
  - [ ] (deftest map.error.13
  - [ ] (deftest map.fill.1
  - [ ] (deftest map.fill.2
  - [ ] (deftest map.fill.3
  - [ ] (deftest map.fill.4
  - [ ] (deftest map.fill.5
  - [ ] (deftest map.fill.6
  - [ ] (deftest map.specialized-string.1
  - [ ] (deftest map.specialized-string.2
  - [ ] (deftest map.specialized-string.3
  - [ ] (deftest map.specialized-vector.1
  - [ ] (deftest map.specialized-vector.2
  - [ ] (deftest map.specialized-vector.3
  - [ ] (deftest map.specialized-vector.4
  - [ ] (deftest map.specialized-vector.5
  - [ ] (deftest map.specialized-vector.6
  - [ ] (deftest map.specialized-vector.7
  - [ ] (deftest map.order.1
  - [ ] (def-fold-test map.fold.1 (map 'vector #'identity '(a b c)))
**** subseq.lsp [0%]
  - [ ] (deftest subseq-list.1
  - [ ] (deftest subseq-list.2
  - [ ] (deftest subseq-list.3
  - [ ] (deftest subseq-list.4
  - [ ] (deftest subseq-list.5
  - [ ] (deftest subseq-list.6    ;; check that no structure is shared
  - [ ] (deftest subseq-list.7
  - [ ] (deftest subseq-list.8
  - [ ] (deftest subseq-list.9
  - [ ] (deftest subseq-list.10
  - [ ] (deftest subseq-list.11
  - [ ] (deftest subseq-list.12
  - [ ] (deftest subseq-vector.1
  - [ ] (deftest subseq-vector.2
  - [ ] (deftest subseq-vector.3
  - [ ] (deftest subseq-vector.4
  - [ ] (deftest subseq-vector.5
  - [ ] (deftest subseq-vector.6
  - [ ] (deftest subseq-vector.7
  - [ ] (deftest subseq-vector.8
  - [ ] (deftest subseq-vector.9
  - [ ] (deftest subseq-vector.10
  - [ ] (deftest subseq-string.1
  - [ ] (deftest subseq-string.2
  - [ ] (deftest subseq-string.3
  - [ ] (deftest subseq.specialized-string.1
  - [ ] (deftest subseq.specialized-vector.1
  - [ ] (deftest subseq.specialized-vector.2
  - [ ] (deftest subseq.specialized-vector.3
  - [ ] (deftest subseq-bit-vector.1
  - [ ] (deftest subseq-bit-vector.2
  - [ ] (deftest subseq-bit-vector.3
  - [ ] (deftest subseq.order.1
  - [ ] (deftest subseq.order.2
  - [ ] (deftest subseq.order.3
  - [ ] (deftest subseq.order.4
  - [ ] (def-fold-test subseq.fold.1 (subseq '(1 2 3) 0))
  - [ ] (def-fold-test subseq.fold.2 (subseq #(1 2 3) 0))
  - [ ] (def-fold-test subseq.fold.3 (subseq #*011101 0))
  - [ ] (def-fold-test subseq.fold.4 (subseq "abcdef" 0))
  - [ ] (deftest subseq.error.1
  - [ ] (deftest subseq.error.2
  - [ ] (deftest subseq.error.3
**** replace.lsp [0%]
  - [ ] (deftest replace-list.1
  - [ ] (deftest replace-list.2
  - [ ] (deftest replace-list.3
  - [ ] (deftest replace-list.4
  - [ ] (deftest replace-list.5
  - [ ] (deftest replace-list.6
  - [ ] (deftest replace-list.7
  - [ ] (deftest replace-list.8
  - [ ] (deftest replace-list.9
  - [ ] (deftest replace-list.10
  - [ ] (deftest replace-list.11
  - [ ] (deftest replace-list.12
  - [ ] (deftest replace-list.13
  - [ ] (deftest replace-list.14
  - [ ] (deftest replace-list.15
  - [ ] (deftest replace-list.16
  - [ ] (deftest replace-list.17
  - [ ] (deftest replace-list.18
  - [ ] (deftest replace-list.19
  - [ ] (deftest replace-list.20
  - [ ] (deftest replace-vector.1
  - [ ] (deftest replace-vector.2
  - [ ] (deftest replace-vector.3
  - [ ] (deftest replace-vector.4
  - [ ] (deftest replace-vector.5
  - [ ] (deftest replace-vector.6
  - [ ] (deftest replace-vector.7
  - [ ] (deftest replace-vector.8
  - [ ] (deftest replace-vector.9
  - [ ] (deftest replace-vector.10
  - [ ] (deftest replace-vector.11
  - [ ] (deftest replace-vector.12
  - [ ] (deftest replace-vector.13
  - [ ] (deftest replace-vector.14
  - [ ] (deftest replace-vector.15
  - [ ] (deftest replace-vector.16
  - [ ] (deftest replace-vector.17
  - [ ] (deftest replace-vector.18
  - [ ] (deftest replace-vector.19
  - [ ] (deftest replace-vector.21
  - [ ] (deftest replace-bit-vector.1
  - [ ] (deftest replace-bit-vector.2
  - [ ] (deftest replace-bit-vector.3
  - [ ] (deftest replace-bit-vector.4
  - [ ] (deftest replace-bit-vector.5
  - [ ] (deftest replace-bit-vector.6
  - [ ] (deftest replace-bit-vector.7
  - [ ] (deftest replace-bit-vector.8
  - [ ] (deftest replace-bit-vector.9
  - [ ] (deftest replace-bit-vector.10
  - [ ] (deftest replace-bit-vector.11
  - [ ] (deftest replace-bit-vector.12
  - [ ] (deftest replace-bit-vector.13
  - [ ] (deftest replace-bit-vector.14
  - [ ] (deftest replace-bit-vector.15
  - [ ] (deftest replace-bit-vector.16
  - [ ] (deftest replace-bit-vector.17
  - [ ] (deftest replace-bit-vector.18
  - [ ] (deftest replace-bit-vector.19
  - [ ] (deftest replace-bit-vector.21
  - [ ] (deftest replace-string.1
  - [ ] (deftest replace-string.2
  - [ ] (deftest replace-string.3
  - [ ] (deftest replace-string.4
  - [ ] (deftest replace-string.5
  - [ ] (deftest replace-string.6
  - [ ] (deftest replace-string.7
  - [ ] (deftest replace-string.8
  - [ ] (deftest replace-string.9
  - [ ] (deftest replace-string.10
  - [ ] (deftest replace-string.11
  - [ ] (deftest replace-string.12
  - [ ] (deftest replace-string.13
  - [ ] (deftest replace-string.14
  - [ ] (deftest replace-string.15
  - [ ] (deftest replace-string.16
  - [ ] (deftest replace-string.17
  - [ ] (deftest replace-string.18
  - [ ] (deftest replace-string.19
  - [ ] (deftest replace-string.21
  - [ ] (deftest replace-string.22
  - [ ] (deftest replace-string.23
  - [ ] (deftest replace-string.24
  - [ ] (deftest replace-string.25
  - [ ] (deftest replace-string.26
  - [ ] (deftest replace.order.1
  - [ ] (deftest replace.order.2
  - [ ] (deftest replace.order.3
  - [ ] (deftest replace.allow-other-keys.1
  - [ ] (deftest replace.allow-other-keys.2
  - [ ] (deftest replace.allow-other-keys.3
  - [ ] (deftest replace.allow-other-keys.4
  - [ ] (deftest replace.allow-other-keys.5
  - [ ] (deftest replace.allow-other-keys.6
  - [ ] (deftest replace.keywords.7
  - [ ] (deftest replace.error.1
  - [ ] (deftest replace.error.2
  - [ ] (deftest replace.error.3
  - [ ] (deftest replace.error.4
  - [ ] (deftest replace.error.5
  - [ ] (deftest replace.error.6
**** length.lsp [0%]
  - [ ] (deftest length.list.1
  - [ ] (deftest length.list.2
  - [ ] (deftest length.list.3
  - [ ] (deftest length.list-4
  - [ ] (deftest length.vector.1
  - [ ] (deftest length.vector.2
  - [ ] (deftest length.vector.3
  - [ ] (deftest length.vector.4
  - [ ] (deftest length.nonsimple-vector.1
  - [ ] (deftest length.nonsimple-vector.2
  - [ ] (deftest length.bit-vector.2
  - [ ] (deftest length.bit-vector.3
  - [ ] (deftest length.bit-vector.4
  - [ ] (deftest length.bit-vector.5
  - [ ] (deftest length.string.1
  - [ ] (deftest length.string.2
  - [ ] (deftest length.string.3
  - [ ] (deftest length.string.4
  - [ ] (deftest length.string.5
  - [ ] (deftest length.string.6
  - [ ] (deftest length.string.7
  - [ ] (deftest length.string.8
  - [ ] (deftest length.error.1
  - [ ] (deftest length.error.6
  - [ ] (deftest length.error.7
  - [ ] (deftest length.error.8
  - [ ] (deftest length.array.1
  - [ ] (deftest length.array.2
  - [ ] (deftest length.array.3
  - [ ] (deftest length.array.4
  - [ ] (deftest length.array.5
  - [ ] (deftest length.array.6
  - [ ] (deftest length.array.7
  - [ ] (deftest length.array.8
  - [ ] (deftest length.array.9
**** merge.lsp [0%]
  - [ ] (deftest merge-list.1
  - [ ] (deftest merge-list.2
  - [ ] (deftest merge-list.3
  - [ ] (deftest merge-list.4
  - [ ] (deftest merge-list.5
  - [ ] (deftest merge-list.6
  - [ ] (deftest merge-list.7
  - [ ] (deftest merge-list.8
  - [ ] (deftest merge-list.9
  - [ ] (deftest merge-list.10
  - [ ] (deftest merge-list.11
  - [ ] (deftest merge-list.12
  - [ ] (deftest merge-list.13
  - [ ] (deftest merge-list.14
  - [ ] (deftest merge-list.15
  - [ ] (deftest merge-vector.1
  - [ ] (deftest merge-vector.2
  - [ ] (deftest merge-vector.3
  - [ ] (deftest merge-vector.4
  - [ ] (deftest merge-vector.5
  - [ ] (deftest merge-vector.6
  - [ ] (deftest merge-vector.7
  - [ ] (deftest merge-vector.8
  - [ ] (deftest merge-vector.9
  - [ ] (deftest merge-vector.10
  - [ ] (deftest merge-vector.11
  - [ ] (deftest merge-vector.12
  - [ ] (deftest merge-vector.13
  - [ ] (deftest merge-vector.14
  - [ ] (deftest merge-vector.15
  - [ ] (deftest merge-vector.16
  - [ ] (deftest merge-vector.16a
  - [ ] (deftest merge-vector.17
  - [ ] (deftest merge-vector.18
  - [ ] (deftest merge-vector.19
  - [ ] (deftest merge-vector.20
  - [ ] (deftest merge-vector.21
  - [ ] (deftest merge-vector.22
  - [ ] (deftest merge-vector.23
  - [ ] (deftest merge-vector.24
  - [ ] (deftest merge-string.1
  - [ ] (deftest merge-string.1a
  - [ ] (deftest merge-string.1b
  - [ ] (deftest merge-string.1c
  - [ ] (deftest merge-string.1d
  - [ ] (deftest merge-string.2
  - [ ] (deftest merge-string.3
  - [ ] (deftest merge-string.4
  - [ ] (deftest merge-string.8
  - [ ] (deftest merge-string.9
  - [ ] (deftest merge-string.10
  - [ ] (deftest merge-string.11
  - [ ] (deftest merge-string.12
  - [ ] (deftest merge-string.13
  - [ ] (deftest merge-string.13a
  - [ ] (deftest merge-string.14
  - [ ] (deftest merge-string.14a
  - [ ] (deftest merge-string.15
  - [ ] (deftest merge-string.16
  - [ ] (deftest merge-string.17
  - [ ] (deftest merge-string.18
  - [ ] (deftest merge-string.19
  - [ ] (deftest merge-string.20
  - [ ] (deftest merge-string.21
  - [ ] (deftest merge-string.22
  - [ ] (deftest merge-string.23
  - [ ] (deftest merge-string.24
  - [ ] (deftest merge-string.25
  - [ ] (deftest merge-string.26
  - [ ] (deftest merge-string.27
  - [ ] (deftest merge-string.28
  - [ ] (deftest merge-string.29
  - [ ] (deftest merge-string.30
  - [ ] (deftest merge-string.31
  - [ ] (deftest merge-string.32
  - [ ] (deftest merge-string.33
  - [ ] (deftest merge-string.34
  - [ ] (deftest merge-string.35
  - [ ] (deftest merge-bit-vector.1
  - [ ] (deftest merge-bit-vector.2
  - [ ] (deftest merge-bit-vector.3
  - [ ] (deftest merge-bit-vector.4
  - [ ] (deftest merge-bit-vector.5
  - [ ] (deftest merge-bit-vector.5a
  - [ ] (deftest merge-bit-vector.5b
  - [ ] (deftest merge-bit-vector.5c
  - [ ] (deftest merge-bit-vector.5d
  - [ ] (deftest merge-bit-vector.5e
  - [ ] (deftest merge-bit-vector.6
  - [ ] (deftest merge-bit-vector.7
  - [ ] (deftest merge-bit-vector.8
  - [ ] (deftest merge-bit-vector.9
  - [ ] (deftest merge-bit-vector.10
  - [ ] (deftest merge-bit-vector.11
  - [ ] (deftest merge-bit-vector.12
  - [ ] (deftest merge-bit-vector.13
  - [ ] (deftest merge-bit-vector.14
  - [ ] (deftest merge-bit-vector.15
  - [ ] (deftest merge-bit-vector.16
  - [ ] (deftest merge-bit-vector.17
  - [ ] (deftest merge-bit-vector.18
  - [ ] (deftest merge-bit-vector.19
  - [ ] (deftest merge-cons.1
  - [ ] (deftest merge-null.1
  - [ ] (deftest merge-vector-length.1
  - [ ] (deftest merge-bit-vector-length.1
  - [ ] (deftest merge.order.1
  - [ ] (deftest merge.error.1
  - [ ] (deftest merge.error.2
  - [ ] (deftest merge.error.3
  - [ ] (deftest merge.error.4
  - [ ] (deftest merge.error.5
  - [ ] (deftest merge.error.6
  - [ ] (deftest merge.error.7
  - [ ] (deftest merge.error.8
  - [ ] (deftest merge.error.9
  - [ ] (deftest merge.error.10
  - [ ] (deftest merge.error.11
  - [ ] (deftest merge.error.12
  - [ ] (deftest merge.error.13
  - [ ] (deftest merge.error.14
  - [ ] (deftest merge.error.15
  - [ ] (deftest merge.error.16
  - [ ] (deftest merge.error.17
**** search-bitvector.lsp [0%]
  - [ ] (deftest search-bitvector.1
  - [ ] (deftest search-bitvector.2
  - [ ] (deftest search-bitvector.3
  - [ ] (deftest search-bitvector.4
  - [ ] (deftest search-bitvector.5
  - [ ] (deftest search-bitvector.6
  - [ ] (deftest search-bitvector.7
  - [ ] (deftest search-bitvector.8
  - [ ] (deftest search-bitvector.9
  - [ ] (deftest search-bitvector.10
  - [ ] (deftest search-bitvector.11
  - [ ] (deftest search-bitvector.12
  - [ ] (deftest search-bitvector.13
  - [ ] (deftest search-bitvector.14
  - [ ] (deftest search-bitvector.15
  - [ ] (deftest search-bitvector.16
  - [ ] (deftest search-bitvector.17
  - [ ] (deftest search-bitvector.18
*** characters [0%]
**** char-compare.lsp [0%]
  - [X] (deftest char-compare-no-args
  - [ ] (deftest char=.1
  - [ ] (deftest char=.2
  - [ ] (deftest char=.3
  - [ ] (deftest char=.4
  - [ ] (deftest char=.order.1
  - [ ] (deftest char=.order.2
  - [ ] (deftest char=.order.3
  - [ ] (deftest char/=.1
  - [ ] (deftest char/=.2
  - [ ] (deftest char/=.3
  - [ ] (deftest char/=.4
  - [ ] (deftest char/=.order.1
  - [ ] (deftest char/=.order.2
  - [ ] (deftest char/=.order.3
  - [ ] (deftest char<=.1
  - [ ] (deftest char<=.2
  - [ ] (deftest char<=.3
  - [ ] (deftest char<=.4
  - [ ] (deftest char<=.5
  - [ ] (deftest char<=.6
  - [ ] (deftest char<=.7
  - [ ] (deftest char<=.8
  - [ ] (deftest char<=.order.1
  - [ ] (deftest char<=.order.2
  - [ ] (deftest char<=.order.3
  - [ ] (deftest char<.1
  - [ ] (deftest char<.2
  - [ ] (deftest char<.3
  - [ ] (deftest char<.4
  - [ ] (deftest char<.5
  - [ ] (deftest char<.6
  - [ ] (deftest char<.7
  - [ ] (deftest char<.8
  - [ ] (deftest char<.order.1
  - [ ] (deftest char<.order.2
  - [ ] (deftest char<.order.3
  - [ ] (deftest char<.order.4
  - [ ] (deftest char>=.1
  - [ ] (deftest char>=.2
  - [ ] (deftest char>=.3
  - [ ] (deftest char>=.4
  - [ ] (deftest char>=.5
  - [ ] (deftest char>=.6
  - [ ] (deftest char>=.7
  - [ ] (deftest char>=.8
  - [ ] (deftest char>=.order.1
  - [ ] (deftest char>=.order.2
  - [ ] (deftest char>=.order.3
  - [ ] (deftest char>=.order.4
  - [ ] (deftest char>.1
  - [ ] (deftest char>.2
  - [ ] (deftest char>.3
  - [ ] (deftest char>.4
  - [ ] (deftest char>.5
  - [ ] (deftest char>.6
  - [ ] (deftest char>.7
  - [ ] (deftest char>.8
  - [ ] (deftest char>.order.1
  - [ ] (deftest char>.order.2
  - [ ] (deftest char>.order.3
  - [ ] (deftest char>.order.4
  - [ ] (deftest char-equal.1
  - [ ] (deftest char-equal.2
  - [ ] (deftest char-equal.3
  - [ ] (deftest char-equal.4
  - [ ] (deftest char-equal.order.1
  - [ ] (deftest char-equal.order.2
  - [ ] (deftest char-equal.order.3
  - [ ] (deftest char-equal.order.4
  - [ ] (deftest char-not-equal.1
  - [ ] (deftest char-not-equal.2
  - [ ] (deftest char-not-equal.3
  - [ ] (deftest char-not-equal.4
  - [ ] (deftest char-not-equal.order.1
  - [ ] (deftest char-not-equal.order.2
  - [ ] (deftest char-not-equal.order.3
  - [ ] (deftest char-not-equal.order.4
  - [ ] (deftest char-not-greaterp.1
  - [ ] (deftest char-not-greaterp.2
  - [ ] (deftest char-not-greaterp.3
  - [ ] (deftest char-not-greaterp.4
  - [ ] (deftest char-not-greaterp.5
  - [ ] (deftest char-not-greaterp.6
  - [ ] (deftest char-not-greaterp.7
  - [ ] (deftest char-not-greaterp.8
  - [ ] (deftest char-not-greaterp.order.1
  - [ ] (deftest char-not-greaterp.order.2
  - [ ] (deftest char-not-greaterp.order.3
  - [ ] (deftest char-not-greaterp.order.4
  - [ ] (deftest char-lessp.1
  - [ ] (deftest char-lessp.2
  - [ ] (deftest char-lessp.3
  - [ ] (deftest char-lessp.4
  - [ ] (deftest char-lessp.5
  - [ ] (deftest char-lessp.6
  - [ ] (deftest char-lessp.7
  - [ ] (deftest char-lessp.8
  - [ ] (deftest char-lessp.order.1
  - [ ] (deftest char-lessp.order.2
  - [ ] (deftest char-lessp.order.3
  - [ ] (deftest char-lessp.order.4
  - [ ] (deftest char-not-lessp.1
  - [ ] (deftest char-not-lessp.2
  - [ ] (deftest char-not-lessp.3
  - [ ] (deftest char-not-lessp.4
  - [ ] (deftest char-not-lessp.5
  - [ ] (deftest char-not-lessp.6
  - [ ] (deftest char-not-lessp.7
  - [ ] (deftest char-not-lessp.8
  - [ ] (deftest char-not-lessp.order.1
  - [ ] (deftest char-not-lessp.order.2
  - [ ] (deftest char-not-lessp.order.3
  - [ ] (deftest char-not-lessp.order.4
  - [ ] (deftest char-greaterp.1
  - [ ] (deftest char-greaterp.2
  - [ ] (deftest char-greaterp.3
  - [ ] (deftest char-greaterp.4
  - [ ] (deftest char-greaterp.5
  - [ ] (deftest char-greaterp.6
  - [ ] (deftest char-greaterp.7
  - [ ] (deftest char-greaterp.8
  - [ ] (deftest char-greaterp.order.1
  - [ ] (deftest char-greaterp.order.2
  - [ ] (deftest char-greaterp.order.3
  - [ ] (deftest char-greaterp.order.4
**** character.lsp [43%]
  - [ ] (deftest character-class.1
  - [ ] (deftest base-char.1
  - [ ] (deftest base-char.2
  - [ ] (deftest base-char.3
  - [ ] (deftest standard-char.1
  - [ ] (deftest standard-char.2
  - [ ] (deftest standard-char.3
  - [ ] (deftest standard-char.4
  - [ ] (deftest standard-char.5
  - [ ] (deftest extended-char.1
  - [ ] (deftest extended-char.2
  - [ ] (deftest extended-char.3
  - [ ] (deftest character.1
  - [ ] (deftest character.2
  - [ ] (deftest character.order.1
  - [X] (deftest character.error.1
  - [X] (deftest character.error.2
  - [ ] (deftest characterp.1
  - [ ] (deftest characterp.2
  - [ ] (deftest characterp.3
  - [ ] (deftest characterp.order.1
  - [X] (deftest characterp.error.1
  - [X] (deftest characterp.error.2
  - [X] (deftest alpha-char-p.1
  - [X] (deftest alpha-char-p.2
  - [ ] (deftest alpha-char-p.3
  - [ ] (deftest alpha-char-p.4
  - [X] (deftest alpha-char-p.order.1
  - [X] (deftest alpha-char-p.error.1
  - [X] (deftest alpha-char-p.error.2
  - [X] (deftest alphanumericp.1
  - [X] (deftest alphanumericp.2
  - [ ] (deftest alphanumericp.3
  - [ ] (deftest alphanumericp.4
  - [ ] (deftest alphanumericp.5
  - [ ] (deftest alphanumbericp.6
  - [X] (deftest alphanumericp.order.1
  - [X] (deftest alphanumericp.error.1
  - [X] (deftest alphanumericp.error.2
  - [ ] (deftest digit-char.1
  - [ ] (deftest digit-char.2
  - [ ] (deftest digit-char.order.1
  - [ ] (deftest digit-char.order.2
  - [X] (deftest digit-char.error.1
  - [X] (deftest digit-char.error.2
  - [ ] (deftest digit-char-p.1
  - [ ] (deftest digit-char-p.2
  - [ ] (deftest digit-char-p.3
  - [ ] (deftest digit-char-p.4
  - [X] (deftest digit-char-p.5
  - [X] (deftest digit-char-p.6
  - [X] (deftest digit-char-p.order.1
  - [ ] (deftest digit-char-p.order.2
  - [X] (deftest digit-char-p.error.1
  - [X] (deftest digit-char-p.error.2
  - [ ] (deftest graphic-char-p.1
  - [ ] (deftest graphic-char-p.2
  - [ ] (deftest graphic-char-p.3
  - [ ] (deftest graphic-char-p.order.1
  - [X] (deftest graphic-char-p.error.1
  - [X] (deftest graphic-char-p.error.2
  - [ ] (deftest standard-char-p.1
  - [ ] (deftest standard-char-p.2
  - [ ] (deftest standard-char-p.2a
  - [ ] (deftest standard-char-p.3
  - [ ] (deftest standard-char-p.order.1
  - [X] (deftest standard-char-p.error.1
  - [X] (deftest standard-char-p.error.2
  - [ ] (deftest char-upcase.1
  - [ ] (deftest char-upcase.2
  - [X] (deftest char-upcase.3
  - [ ] (deftest char-upcase.4
  - [X] (deftest char-upcase.order.1
  - [X] (deftest char-upcase.error.1
  - [X] (deftest char-upcase.error.2
  - [ ] (deftest char-downcase.1
  - [ ] (deftest char-downcase.2
  - [X] (deftest char-downcase.3
  - [ ] (deftest char-downcase.4
  - [X] (deftest char-downcase.order.1
  - [X] (deftest char-downcase.error.1
  - [X] (deftest char-downcase.error.2
  - [X] (deftest upper-case-p.1
  - [X] (deftest upper-case-p.2
  - [X] (deftest upper-case-p.3
  - [ ] (deftest upper-case-p.4
  - [X] (deftest upper-case-p.order.1
  - [X] (deftest upper-case-p.error.1
  - [X] (deftest upper-case-p.error.2
  - [X] (deftest lower-case-p.1
  - [X] (deftest lower-case-p.2
  - [ ] (deftest lower-case-p.3
  - [X] (deftest lower-case-p.order.1
  - [X] (deftest lower-case-p.error.1
  - [X] (deftest lower-case-p.error.2
  - [ ] (deftest both-case-p.1
  - [ ] (deftest both-case-p.2
  - [ ] (deftest both-case-p.3
  - [ ] (deftest both-case-p.4
  - [ ] (deftest both-case-p.order.1
  - [X] (deftest both-case-p.error.1
  - [X] (deftest both-case-p.error.2
  - [ ] (deftest char-code.1
  - [ ] (deftest char-code.2
  - [ ] (deftest char-code.order.1
  - [X] (deftest char-code.error.1
  - [X] (deftest char-code.error.2
  - [ ] (deftest code-char.1
  - [ ] (deftest code-char.order.1
  - [X] (deftest code-char.error.1
  - [X] (deftest code-char.error.2
  - [ ] (deftest char-int.1
  - [ ] (deftest char-int.2
  - [ ] (deftest char-int.order.1
  - [X] (deftest char-int.error.1
  - [X] (deftest char-int.error.2
  - [ ] (deftest char-name.1
  - [ ] (deftest char-name.2
  - [ ] (deftest char-name.3
  - [ ] (deftest char-name.4
  - [ ] (deftest char-name.5
  - [ ] (deftest char-name.order.1
  - [X] (deftest char-name.error.1
  - [X] (deftest char-name.error.2
**** name-char.lsp [22%]
  - [ ] (deftest name-char.1
  - [ ] (deftest name-char.2
  - [ ] (deftest name-char.order.1
  - [ ] (deftest name-char.specialized.1
  - [ ] (deftest name-char.specialized.2
  - [ ] (deftest name-char.specialized.3
  - [ ] (deftest name-char.specialized.4
  - [X] (deftest name-char.error.1
  - [X] (deftest name-char.error.2
